Methods in Molecular Biology 1361
Frédéric Devaux Editor
Yeast Functional Genomics
Methods and Protocols

METHODS IN MOLECULAR BIOLOGY
Series Editor John M. Walker School of Life and Medical Sciences University of Hertfordshire Hatﬁeld, Hertfordshire, AL10 9AB, UK
For further volumes: http://www.springer.com/series/7651

Yeast Functional Genomics
Methods and Protocols
Edited by
Frédéric Devaux
Laboratoire de biologie computationnelle et quantitative, Sorbonne Universités, Paris, France

Editor Frédéric Devaux Laboratoire de biologie computationnelle et quantitative Sorbonne Universités Paris, France

ISSN 1064-3745

ISSN 1940-6029 (electronic)

Methods in Molecular Biology

ISBN 978-1-4939-3078-4

ISBN 978-1-4939-3079-1 (eBook)

DOI 10.1007/978-1-4939-3079-1

Library of Congress Control Number: 2015951231

Springer New York Heidelberg Dordrecht London © Springer Science+Business Media New York 2016 This work is subject to copyright. All rights are reserved by the Publisher, whether the whole or part of the material is concerned, speciﬁcally the rights of translation, reprinting, reuse of illustrations, recitation, broadcasting, reproduction on microﬁlms or in any other physical way, and transmission or information storage and retrieval, electronic adaptation, computer software, or by similar or dissimilar methodology now known or hereafter developed. The use of general descriptive names, registered names, trademarks, service marks, etc. in this publication does not imply, even in the absence of a speciﬁc statement, that such names are exempt from the relevant protective laws and regulations and therefore free for general use. The publisher, the authors and the editors are safe to assume that the advice and information in this book are believed to be true and accurate at the date of publication. Neither the publisher nor the authors or the editors give a warranty, express or implied, with respect to the material contained herein or for any errors or omissions that may have been made.

Printed on acid-free paper

Humana Press is a brand of Springer Springer Science+Business Media LLC New York is part of Springer Science+Business Media (www.springer.com)

Preface

This volume of the “Methods in Molecular Biology” series aims at reﬂecting the state of the art of yeast functional genomics. Since the publication of its genome sequence in 1996, yeast functional genomics has been at the forefront of technological advances and never stopped evolving. Ten years ago, 90 % of the publications in this ﬁeld were made of microarray-based transcriptome and chromatin immunoprecipitation analyses, and the reader will ﬁnd in this volume the most recent protocols for these “classics” which are still widely used and up to date. Since then, yeast functional genomics have diversiﬁed in many ways.
First, the emergence of high-throughput sequencing technologies considerably enlarged our capacity to investigate yeast transcriptomes and genomes. Hence most of the chapters of this volume present protocols based on new generation sequencing technologies.
Second, all aspects of gene expression regulation, from nuclear architecture to translational rates and metabolite steady states, can now be studied at a genome-wide scale. This volume provides a panel of protocols for the study of DNA-DNA contact maps, replication proﬁles, transcription rates, RNA secondary structures, protein-RNA interactions, ribosome proﬁling, and quantitative proteomes and metabolomes.
Third, the availability of genome sequences for tens of yeast species and hundreds of strains in some species allowed for yeast comparative functional genomics and yeast populations genomics and opened the way to a common use of the natural or laboratory-generated genetic polymorphism to identify functional relationships between genes and gene-phenotype interactions in a powerful and comprehensive way. This volume includes protocols for yeast comparative transcriptomics, yeast high-throughput genetic screens, yeast QTL mapping, and yeast experimental evolution. Moreover, several protocols presented here were optimized for other species than S. cerevisiae.
Finally, the accumulation of these genome-wide data of various natures pushed forward the development of bioinformatics tools and methods to make available, represent, and analyze the properties of large yeast cellular networks. Most of the protocols presented in this volume emphasized both “wet lab” and in silico analyses aspects. Moreover, two chapters were speciﬁcally dedicated to the integration of high-throughput data in evolutionary models and to data mining of global regulatory networks, respectively.
Obviously, the ﬁeld is so diverse that this book could not be comprehensive. For instance, just the different methods nowadays available for yeast quantitative proteomics would have ﬁlled the whole volume. Our goal was rather to make this issue of Methods in Molecular Biology as representative of its time and as useful to a broad audience as possible. Did we achieve this goal? I believe the answer is yes but actually, this is to the reader to tell. So…
Have a nice reading!

Paris, France

Frédéric Devaux

v

Contents

Preface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Contributors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

v ix

1 Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Can Wang, Markus S. Schröder, Stephen Hammel, and Geraldine Butler
2 Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data . . . . Hugo Devillers, Nicolas Morin, and Cécile Neuvéglise
3 Pathogen Gene Expression Profiling During Infection Using a Nanostring nCounter Platform. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Wenjie Xu, Norma V. Solis, Scott G. Filler, and Aaron P. Mitchell
4 Comparative Transcriptomics in Yeasts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Dawn A. Thompson
5 Mapping the Transcriptome-Wide Landscape of RBP Binding Sites Using gPAR-CLIP-seq: Experimental Procedures . . . . . . . . . . . . . . . . . . . . . . Ting Han and John K. Kim
6 Mapping the Transcriptome-Wide Landscape of RBP Binding Sites Using gPAR-CLIP-seq: Bioinformatic Analysis . . . . . . . . . . . . . . . . . . . . . . . . Mallory A. Freeberg and John K. Kim
7 Translation Analysis at the Genome Scale by Ribosome Profiling . . . . . . . . . . . Agnès Baudin-Baillieu, Isabelle Hatin, Rachel Legendre, and Olivier Namy
8 Biotin-Genomic Run-On (Bio-GRO): A High-Resolution Method for the Analysis of Nascent Transcription in Yeast . . . . . . . . . . . . . . . . . . . . . . Antonio Jordán-Pla, Ana Miguel, Eva Serna, Vicent Pelechano, and José E. Pérez-Ortín
9 Genome-Wide Probing of RNA Structures In Vitro Using Nucleases and Deep Sequencing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Yue Wan, Kun Qu, Zhengqing Ouyang, and Howard Y. Chang
10 Genome-Wide Chromatin Immunoprecipitation in Candida albicans and Other Yeasts . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Matthew B. Lohse, Pisiwat Kongsomboonvech, Maria Madrigal, Aaron D. Hernday, and Clarissa J. Nobile
11 ChIPseq in Yeast Species: From Chromatin Immunoprecipitation to High-Throughput Sequencing and Bioinformatics Data Analyses . . . . . . . . Gaëlle Lelandais, Corinne Blugeon, and Jawad Merhej
12 Systematic Determination of Transcription Factor DNA-Binding Specificities in Yeast. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Lourdes Peña-Castillo and Gwenael Badis

1 41 57 67 77 91 105
125
141 161
185 203

vii

viii Contents

13 Generation and Analysis of Chromosomal Contact Maps of Yeast Species . . . . Axel Cournac, Martial Marbouty, Julien Mozziconacci, and Romain Koszul
14 A Versatile Procedure to Generate Genome-Wide Spatiotemporal Program of Replication in Yeast Species. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Nicolas Agier and Gilles Fischer
15 Single-Step Affinity Purification (ssAP) and Mass Spectrometry of Macromolecular Complexes in the Yeast S. cerevisiae . . . . . . . . . . . . . . . . . . Christian Trahan, Lisbeth-Carolina Aguilar, and Marlene Oeffinger
16 Label-Free Quantitative Proteomics in Yeast . . . . . . . . . . . . . . . . . . . . . . . . . . Thibaut Léger, Camille Garcia, Mathieu Videlier, and Jean-Michel Camadro
17 Profiling of Yeast Lipids by Shotgun Lipidomics . . . . . . . . . . . . . . . . . . . . . . . Christian Klose and Kirill Tarasov
18 Identification of Links Between Cellular Pathways by Genetic Interaction Mapping (GIM) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . Christophe Malabat and Cosmin Saveanu
19 On the Mapping of Epistatic Genetic Interactions in Natural Isolates: Combining Classical Genetics and Genomics. . . . . . . . . . . . . . . . . . . . . . . . . . Jing Hou and Joseph Schacherer
20 Experimental Evolution and Resequencing Analysis of Yeast . . . . . . . . . . . . . . Celia Payen and Maitreya J. Dunham
21 Reconstruction and Analysis of the Evolution of Modular Transcriptional Regulatory Programs Using Arboretum . . . . . . . . . . . . . . . . . Sara A. Knaack, Dawn A. Thompson, and Sushmita Roy
22 Predicting Gene and Genomic Regulation in Saccharomyces cerevisiae, using the YEASTRACT Database: A Step-by-Step Guided Analysis . . . . . . . . . Miguel C. Teixeira, Pedro T. Monteiro, and Isabel Sá-Correia

227
247 265 289 309 325 345 361 375 391

Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 405

Contributors
NICOLAS AGIER • Biologie Computationnelle et Quantitative, Sorbonne Universités, UPMC Univ. Paris 06, CNRS, UMR 7238, Paris, France; Biologie Computationnelle et Quantitative, CNRS-Université Pierre et Marie Curie, UMR 7238, Paris, France
LISBETH-CAROLINA AGUILAR • Institut de recherches cliniques de Montréal, Montréal, QC, Canada
GWENAEL BADIS • Institut Pasteur, Génétique des Interactions Macromoléculaires, Centre National de la Recherche Scientiﬁque, Paris, France
AGNÈS BAUDIN-BAILLIEU • Institute for Integrative Biology of the Cell (I2BC), UMR 9198 CEA, CNRS, Université Paris Sud, Orsay, France
CORINNE BLUGEON • Plateforme Génomique, Ecole Normale Supérieure, Institut de Biologie de l’ENS, IBENS, Paris, France; Inserm, U1024, Paris, France; CNRS, UMR 8197, Paris, France
GERALDINE BUTLER • School of Biomolecular and Biomedical Science, Conway Institute, University College Dublin, Belﬁeld, Dublin, Ireland
JEAN-MICHEL CAMADRO • Mass Spectrometry Laboratory, Institut Jacques Monod, UMR7592, CNRS—Univ Paris Diderot, Sorbonne Paris Cité, Paris, France; Mitochondria, Metals and Oxidative Stress group, Institut Jacques Monod, UMR7592, CNRS—Univ Paris Diderot, Sorbonne Paris Cité, Paris, France
HOWARD Y. CHANG • Howard Hughes Medical Institute and Program in Epithelial Biology, Stanford University School of Medicine, Stanford, CA, USA
AXEL COURNAC • Institut Pasteur, Department Genomes and Genetics, Groupe Régulation Spatiale des Génomes, Paris, France; CNRS, UMR 3525, Paris, France
HUGO DEVILLERS • INRA, UMR1319 Micalis, Jouy-en-Josas, France; AgroParisTech, UMR Micalis, Jouy-en-Josas, France
MAITREYA J. DUNHAM • Department of Genome Sciences, University of Washington, Seattle, WA, USA
SCOTT G. FILLER • Division of Infectious Diseases, Los Angeles Biomedical Research Institute at Harbor-UCLA Medical Center, Torrance, CA, USA
GILLES FISCHER • Biologie Computationnelle et Quantitative, Sorbonne Universités, UPMC Univ Paris 06, CNRS, UMR 7238, Paris, France; Biologie Computationnelle et Quantitative, CNRS-Université Pierre et Marie Curie, UMR 7238, Paris, France
MALLORY A. FREEBERG • Life Sciences Institute, University of Michigan, Ann Arbor, MI, USA; Department of Computational Medicine and Bioinformatics, University of Michigan, Ann Arbor, MI, USA
CAMILLE GARCIA • Mass Spectrometry Laboratory, Institut Jacques Monod, UMR7592, CNRS—Univ Paris Diderot, Sorbonne Paris Cité, Paris Cedex 13, France
STEPHEN HAMMEL • School of Biomolecular and Biomedical Science, Conway Institute, University College Dublin, Belﬁeld, Dublin, Ireland
TING HAN • Department of Biochemistry, UT Southwestern Medical Center, Dallas, TX, USA
ISABELLE HATIN • Institute for Integrative Biology of the Cell (I2BC), UMR 9198 CEA, CNRS, Université Paris Sud, Orsay, France
ix

x Contributors
AARON D. HERNDAY • Department of Molecular and Cell Biology, School of Natural Sciences, University of California, Merced, Merced, CA, USA
JING HOU • Department of Genetics, Genomics and Microbiology, CNRS, UMR7156, Université de Strasbourg, Strasbourg, France
ANTONIO JORDÁN-PLA • Departamento de Bioquímica y Biología Molecular and ERI Biotecmed, Facultad de Biológicas, Universitat de València, València, Spain; Department of Molecular Biosciences, The Wenner-Gren Institute, Stockholm University, Stockholm, Sweden
JOHN K. KIM • Life Sciences Institute, University of Michigan, Ann Arbor, MI, USA; Department of Biology, Johns Hopkins University, Baltimore, MD, USA
CHRISTIAN KLOSE • Lipotype GmbH, Dresden, Germany SARA A. KNAACK • Wisconsin Institute for Discovery, University of Wisconsin at Madison,
Madison, WI, USA PISIWAT KONGSOMBOONVECH • Department of Molecular and Cell Biology, School
of Natural Sciences, University of California, Merced, Merced, CA, USA ROMAIN KOSZUL • Institut Pasteur, Department Genomes and Genetics, Groupe Régulation
Spatiale des Génomes, Paris, France; CNRS, UMR 3525, Paris, France RACHEL LEGENDRE • Institute for Integrative Biology of the Cell (I2BC), UMR 9198 CEA,
CNRS, Université Paris Sud, Orsay, France THIBAUT LÉGER • Mass Spectrometry Laboratory, Institut Jacques Monod, UMR7592,
CNRS—Univ Paris Diderot, Sorbonne Paris Cité, Paris Cedex 13, France GAËLLE LELANDAIS • Institut Jacques Monod, CNRS UMR 7592, University of Paris
Diderot, Paris, France MATTHEW B. LOHSE • Department of Microbiology and Immunology, University of
California, San Francisco, San Francisco, CA, USA MARIA MADRIGAL • Department of Molecular and Cell Biology, School of Natural Sciences,
University of California, Merced, Merced, CA, USA CHRISTOPHE MALABAT • Génétique des Interactions Macromoléculaires
(UMR3525-CNRS), Institut Pasteur, Paris, France MARTIAL MARBOUTY • Institut Pasteur, Department Genomes and Genetics, Groupe
Régulation Spatiale des Génomes, Paris, France; CNRS, UMR 3525, Paris, France JAWAD MERHEJ • Laboratoire de Biologie Computationnelle et Quantitative, Sorbonne
Universités, UPMC University of Paris 06, UMR 7238, Paris, France; Laboratoire de Biologie Computationnelle et Quantitative, CNRS, UMR 7238, Paris, France ANA MIGUEL • Departamento de Bioquímica y Biología Molecular and ERI Biotecmed, Facultad de Biológicas, Universitat de València, València, Spain AARON P. MITCHELL • Department of Biological Sciences, Carnegie Mellon University, Pittsburgh, PA, USA PEDRO T. MONTEIRO • INESC-ID, Instituto Superior Técnico, Universidade de Lisboa, Lisbon, Portugal NICOLAS MORIN • INRA, UMR1319 Micalis, Jouy-en-Josas, France; AgroParisTech, UMR Micalis, Jouy-en-Josas, France JULIEN MOZZICONACCI • LPTMC, Université Pierre et Marie Curie, Paris, France OLIVIER NAMY • Institute for Integrative Biology of the Cell (I2BC), UMR 9198 CEA, CNRS, Université Paris Sud, Orsay, France CÉCILE NEUVÉGLISE • INRA, UMR1319 Micalis, Jouy-en-Josas, France; AgroParisTech, UMR Micalis, Jouy-en-Josas, France CLARISSA J. NOBILE • Department of Molecular and Cell Biology, School of Natural Sciences, University of California, Merced, Merced, CA, USA

Contributors

xi

MARLENE OEFFINGER • Institut de recherches cliniques de Montréal, Montréal, QC, Canada; Département de biochimie et médicine moléculaire, Faculté de médecine, Université de Montréal, Montréal, QC, Canada; Faculty of Medicine, Division of Experimental Medicine, McGill University, Montréal, QC, Canada
ZHENGQING OUYANG • The Jackson Laboratory for Genomic Medicine, Farmington, CT, USA; Department of Biomedical Engineering, University of Connecticut, Storrs, CT, USA
CELIA PAYEN • Department of Genome Sciences, University of Washington, Seattle, WA, USA VICENT PELECHANO • European Molecular Biology Laboratory (EMBL), Genome Biology
Unit, Heidelberg, Germany LOURDES PEÑA-CASTILLO • Department of Biology, Memorial University of Newfoundland,
St. John’s, NL, Canada; Department of Computer Science, Memorial University of Newfoundland, St. John’s, NL, Canada JOSÉ E. PÉREZ-ORTÍN • Departamento de Bioquímica y Biología Molecular and ERI Biotecmed, Facultad de Biológicas, Universitat de València, València, Spain KUN QU • Howard Hughes Medical Institute and Program in Epithelial Biology, Stanford University School of Medicine, Stanford, CA, USA SUSHMITA ROY • Wisconsin Institute for Discovery, University of Wisconsin at Madison, Madison, WI, USA; Department of Biostatistics and Medical Informatics, University of Wisconsin at Madison, Madison, WI, USA ISABEL SÁ-CORREIA • Biological Sciences Research Group, Department of Bioengineering, Instituto Superior Técnico, IBB – Institute for Bioengineering and Biosciences, Universidade de Lisboa, Lisbon, Portugal COSMIN SAVEANU • Génétique des Interactions Macromoléculaires (UMR3525-CNRS), Institut Pasteur, Paris, France JOSEPH SCHACHERER • Department of Genetics, Genomics and Microbiology, CNRS, UMR7156, Université de Strasbourg, Strasbourg, France MARKUS S. SCHRÖDER • School of Biomolecular and Biomedical Science, Conway Institute, University College Dublin, Belﬁeld, Dublin, Ireland EVA SERNA • Servicio de Análisis Multigénico, INCLIVA, Universitat de València, València, Spain NORMA V. SOLIS • Division of Infectious Diseases, Los Angeles Biomedical Research Institute at Harbor-UCLA Medical Center, Torrance, CA, USA KIRILL TARASOV • Department of Biochemistry and Molecular Medicine, Université de Montréal, Montréal, QC, Canada MIGUEL C. TEIXEIRA • Biological Sciences Research Group, Department of Bioengineering, Instituto Superior Técnico, IBB – Institute for Bioengineering and Biosciences, Universidade de Lisboa, Lisbon, Portugal DAWN A. THOMPSON • Broad Institute of MIT and Harvard, Cambridge, MA, USA CHRISTIAN TRAHAN • Institut de recherches cliniques de Montréal, Montréal, QC, Canada; Département de biochimie et médicine moléculaire, Faculté de médecine, Département de biochimie et médicine moléculairel, Montréal, QC, Canada MATHIEU VIDELIER • Mass Spectrometry Laboratory, Institut Jacques Monod, UMR7592, CNRS—Univ Paris Diderot, Sorbonne Paris Cité, Paris Cedex 13, France YUE WAN • Stem Cell and Developmental Biology, Genome Institute of Singapore, Singapore, Singapore CAN WANG • School of Biomolecular and Biomedical Science, Conway Institute, University College Dublin, Belﬁeld, Dublin, Ireland WENJIE XU • Department of Biological Sciences, Carnegie Mellon University, Pittsburgh, PA, USA

Chapter 1

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species
Can Wang, Markus S. Schröder, Stephen Hammel, and Geraldine Butler

Abstract
The ability to extract, identify and annotate large amounts of biological data is a key feature of the “omics” era, and has led to an explosion in the amount of data available. One pivotal advance is the use of NextGeneration Sequencing (NGS) techniques such as RNA-sequencing (RNA-seq). RNA-seq uses data from millions of small mRNA transcripts or “reads” which are aligned to a reference genome. Comparative transcriptomics analyses using RNA-seq can provide the researcher with a comprehensive view of the cells’ response to a given environment or stimulus.
Here, we describe the NGS techniques (based on Illumina technology) that are routinely used for comparative transcriptome analysis of fungal species. We describe the entire process from isolation of RNA to computational identiﬁcation of differentially expressed genes. We provide instructions to allow the beginner to implement packages in R such as Bioconductor. The methods described are not limited to yeast, and can also be applied to other eukaryotic organisms.
Key words Candida, Next-generation sequencing, Illumina, Bioconductor

1 Introduction

Transcriptome analysis using RNA-seq quantiﬁes transcription levels across the entire genome [1]. Transcript numbers are measured by sequencing; the number of reads obtained from a speciﬁc gene in a test condition compared to a control is used to measure changes in gene expression [2, 3]. Studying the transcriptome in different yeast species has helped elucidate the mechanisms behind key cellular processes and pathways [4–7]. As Next-Generation Sequencing (NGS) technologies drop in price, RNA-seq has become widely used as a method for analyzing gene expression under an array of conditions, and holds many advantages over other similar analytical techniques such as microarrays [2, 8]. Although most of the techniques required can be carried out “inhouse,” there are many private companies that now provide NGS services. They will sequence user-provided libraries, but will also

Frédéric Devaux (ed.), Yeast Functional Genomics: Methods and Protocols, Methods in Molecular Biology, vol. 1361, DOI 10.1007/978-1-4939-3079-1_1, © Springer Science+Business Media New York 2016
1

2 Can Wang et al.
isolate poly(A) RNA from total RNA preparations and construct libraries, at additional cost. This makes RNA-seq accessible to almost any laboratory.
In this chapter, we describe how to carry out RNA-seq analysis from RNA isolation to computational analysis. Labs without access to next-generation sequencing technologies can use commercial companies for the sequencing steps, and move straight to the computational analysis section, where the interpretation of results is discussed. We describe a series of tools implemented in the R statistical language [9]. A wide variety of bioinformatics tasks and collections of R packages, such as Bioconductor [10] or CRAN [11] make it possible to utilize R for almost any task associated with analyzing and visualizing sequencing data. We have provided a set of instructions that make it possible for even the beginner to implement tools such as DeSeq2 [12] on a laptop or personal computer, to analyze changes in gene expression.

2 Materials
2.1 Specialized Equipment
2.2 Kits
2.3 Buffers and Reagents

1. NanoDrop spectrophotometer. 2. Agilent 2100 Bioanalyzer. 3. Qubit Fluorometer. 4. Dark Reader-Blue Light Transilluminator. 5. Bead beater. 6. Next-Generation DNA Sequencer (e.g., Illumina platforms
Genome Analyzer IIx, HiSeq 2500, or MiSeq), or commercial sequencing services. 7. PC or laptop with Linux or Mac OS X as operating system and Internet access.
1. Yeast RNA Extraction Kit (e.g., Ribopure, Ambion). 2. RNA 6000 Nano Kit (Agilent). 3. High-sensitivity DNA Kit (Agilent). 4. Zinc RNA Fragmentation Kit. 5. Gel Excision Tips (e.g., GeneCatcher). 6. PCR Puriﬁcation Kits. 7. Qubit dsDNA High Sensitivity Assay Kit (or equivalent). 8. Quick Ligation Kit.
1. 1× Binding Buffer: 20 mM Tris–HCl pH 7.5, 1.0 M LiCl, 2 mM EDTA.
2. 1× Washing Buffer: 10 mM Tris–HCl pH 7.5: 0.15 M LiCl: 1 mM EDTA.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

3

3. Tris–NaCl Buffer (50 μl 1 M Tris–HCl pH 7.5, 10 μl 5 M NaCl, and 940 μl Nuclease-free water).
4. 10 mM Tris–HCl, pH 8.5. 5. RNAlater. 6. Dynabeads Oligo (dT)25 (e.g., Dynal from Ambion). 7. dNTP mix (10 mM dATP, dTTP, dCTP, and dGTP). 8. UTP mix (10 mM dATP, dCTP, dGTP, 20 mM dUTP). 9. Reverse transcriptase with buffers (e.g., Superscript III). 10. RNaseOUT. 11. DNA Polymerase I. 12. Klenow DNA Polymerase I. 13. Klenow Fragment (3′ → 5′ exo-). 14. T4 DNA polymerase. 15. T4 DNA Ligase. 16. T4 polynucleotide kinase. 17. High Fidelity PCR polymerase. 18. Ribonuclease H. 19. Uracil DNA glycosylase. 20. G-50 column (e.g., Illustra Microspin).

3 Methods
3.1 Preparation of RNA 3.1.1 Cell Growth
3.1.2 RNA Isolation, Yield, and Quality

1. Inoculate overnight cultures in 5 ml growth medium incubated at a relevant temperature (often 30 °C, shaking at 200 rpm).
2. Sub-culture to an A600nm of 0.2 in 50 ml growth medium and grow to mid-log phase (incubation time depends on growth rates of different species being studied). At this point, an additional treatment can be used, for example treatment with a drug, or a change in temperature or oxygen concentration.
3. Following treatment, retrieve cells from 25 ml culture either by centrifugation for 5 min at 4 °C at 3160 × g, or to avoid stress [13] by collection on a ﬁlter (0.45 μm nitrocellulose membrane ﬁlter) using a vacuum source.
4. Resuspend the cell pellet in 100 μl RNAlater stabilization solution and store at −80 °C until required. The RNAlater solution inactivates any RNases and prevents any changes in expression of the RNA.
1. Treat all lab surfaces and pipettes with 70 % ethanol and an RNase decontamination solution (e.g., RNaseZap) to remove any unwanted RNases.

4 Can Wang et al.

2. Thaw cells on ice.
3. Extract RNA using a commercial kit, following the manufacturer’s instructions. We use Ribopure Yeast RNA Extraction Kit from Ambion (see Note 1).
4. Determine RNA concentrations below 50 ng/μl by measuring absorbance with a Qubit ﬂuorometer. Use a NanoDrop to identify contaminants [14]. A reading at 260 nm is used to determine concentration (A260 of 1 = 40 μg/ml). Proteins absorb at 280 nm. The A260/280 ratio therefore provides a measurement of the purity of the RNA; the ratio should lie between 1.8 and 2.2. Ethylenediaminetetraacetic acid (EDTA), carbohydrates, and phenol all have absorbance near 230 nm. The A260/230 ratio is therefore used as a secondary measure of nucleic acid purity. Expected A260/230 values lie in the range of 2.0–2.2. If the ratio is appreciably lower than this, contaminants are probably present and the sample should not be used.
5. Measure RNA quality with a ﬂuorometric based analytical systems, e.g., Bioanalyzer from Agilent Technologies, following the manufacturer’s instructions. Analysis on a Bioanalyzer generates a graphical visualization in the form of an electropherogram of ribosomal peaks (28S and 18S), peak ratio, RNA concentration, a calculated RIN (RNA Integrity Number) value, and a gel-like image of the RNA sample. The RIN value is a measurement of the overall integrity of a given RNA sample that is not affected by sample concentration but by the overall RNA content and background degradation. RIN values >6 are considered to be of acceptable quality. The quantitative range for the RNA 6000 Nano Kit is 5–500 ng/μl.

3.2 Library Generation

The library protocol described here was developed for sequencing on an Illumina Genome Analyzer IIx. Most analysis is now carried out with the more recent HiSeq and MiSeq systems from the same company. The protocol described here may be adapted for use with the newer platforms (HiSeq/MiSeq/NextSeq) with some minor updates (see Subheading Adapter Synthesis). The steps required for library generation are shown in Fig. 1. This protocol generates strand-speciﬁc information by incorporating dUTP during the synthesis of the second strand cDNA synthesis [15–17]. This is subsequently removed by digestion with uracil DNA glycosylase (UDG). There are several variations of the dUTP method, including combining with Illumina TruSeq kits [15, 18]. Other methods for generating strand-speciﬁc data are described by Levin et al. [16].

3.2.1 Puriﬁcation of Poly(A) RNA (Fig. 1a)

1. Dilute 10 μg total RNA in 50 μl using nuclease-free water.
2. Incubate at 65 °C for 5 min to disrupt RNA secondary structures, and then place on ice.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

a Poly(A) RNA
Oligo(dT)25 beads
TTTTTTT
AAAAAAA mRNA

b Zn-mediated Fragmentation
mRNA
RNA fragments

c 1st strand cDNA
5’ 3’ Random hexamer primer
3’ T T T T T 5’ 3’ T T T T T 5’ 3’ T T T T T 5’

5

d 2nd strand cDNA
dUTP 5’ U UU U U 3’
3’ T T T T T 5’

e End repair
5’ U UU U U 3’ 3’ T T T T T 5’

f “A” base addition
5’ U UU U U A 3’ 3’ A T T T T T 5’

g Adapter ligation

h Size selection

5’ *T U UU U U A P
P A T T T T T T* 3’

3’ 5’

300 bp 200 bp

i 2nd strand digestion

UDG Treatment 5’ *T U UU U U A
A T T T T T T* 3’

3’ 5’

j Library enrichment

k Library confirmation and purification

SR 1.1 P5

5’ *T A A A A A A

3’

3’ A T T T T T T*
P7
SR 1.2

5’

300 bp 200 bp

l Quality control
1. Qubit Concentration 2. DNA Chip Size
10 nM Final library

Fig. 1 The workﬂow for constructing strand-speciﬁc libraries from total RNA. Each step is described in detail in the text. (a) Poly(A) RNA is selected by binding to oligo(dT)25 Dynabeads. (b) mRNA is fragmented using Zn-mediated fragmentation. (c) First strand cDNA is synthesized using random hexamer primers. (d) Second strand cDNA is synthesized incorporating U instead of T (e) Ends of the cDNA fragments are repaired. (f) “A” bases are added to the 3′ ends of the cDNA fragments (g) Y-shaped iAdapters anneal to the cDNA fragments by overlapping “T” and “A” bases (h) cDNAs ranging from size 200 to 250 bp and 250 to 300 bp are isolated from the gel (shown with arrows). (i) The bottom strand is copied by priming from SR1.2, and the library is ampliﬁed using primers SR1.2 and SR1.1 (which adds the P5 sequence, see Fig. 2 for alternatives). (k) Ampliﬁcation of the library is conﬁrmed by electrophoresis on a 2.5 % agarose gel, and the library (ranging from 200 to 250 bp) is puriﬁed from a gel. (l) Library concentration and size are estimated and are diluted to 10 nM for sequencing

6 Can Wang et al.

3. Wash 100 μl Dynabeads Oligo (dT)25 with 100 μl 1× Binding Buffer twice using a magnetic rack and resuspend the beads in 50 μl 1× Binding Buffer.
4. Mix 50 μl heated RNA from step 2 and 50 μl washed beads from step 3 and rotate the mixture for 5 min at room temperature. Recover the beads using a magnetic rack and wash twice with 100 μl 1× Washing Buffer.
5. Elute the mRNA in 20 μl Tris–HCl (10 mM, pH 7.5) by heating at 80 °C for exactly 2 min.
6. Wash the beads twice with 1× Washing Buffer.
7. Add 80 μl 1× Binding Buffer to the beads and the 20 μl mRNA from step 5, and repeat the poly(A) selection.
8. Elute the poly(A) RNA in 10 μl 10 mM Tris–HCl (pH 7.5) by heating at 80 °C for exactly 2 min.
9. Recover the RNA from the beads immediately using a magnetic stand, and transfer 9 μl to thin wall PCR tubes. Store the mRNA at −80 °C.

3.2.2 Zinc-Mediated Fragmentation of mRNA (Fig. 1b)

1. Add 1 μl 10× Fragmentation Buffer (from kit) to 9 μl puriﬁed mRNA (poly(A) RNA) in a PCR tube.
2. Incubate the mixture at 70 °C in a thermocycler for 5 min.
3. Add 1 μl Stop Buffer (from kit) and incubate brieﬂy on ice.
4. Add 1 μl 3 M sodium acetate (pH 5.2), 2 μl 5 μg/μl glycogen, and 30 μl 100 % ethanol and precipitate the mRNA at −80 °C for ≥30 min followed by centrifugation at 17,000 × g at ≤4 °C for 25 min.
5. Remove the supernatant carefully and wash the pellet with 700 μl 80 % ethanol.
6. Air-dry the pellet and resuspend it in 10.5 μl Nuclease-free water.

3.2.3 First Strand cDNA Synthesis (Fig. 1c)

1. Add 1 μl of random hexamer primer (3 μg/μl, Invitrogen) to 10.5 μl fragmented mRNA.
2. Incubate the mixture at 65 °C for 5 min and then place on ice.
3. Add 4 μl 5× First Strand Buffer (supplied with reverse transcriptase), 2 μl DTT (100 mM), 1 μl 10 mM dNTP mix, and 0.5 μl RNase OUT (40 units/μl), incubate at 25 °C for 2 min and then add 1 μl of Reverse Transcriptase (Superscript III is recommended) to each sample.
4. Incubate the mixture at 25 °C for 10 min, 42 °C for 50 min and then 70 °C for 15 min.
5. Store the ﬁrst strand cDNA on ice.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

7

6. Remove dNTPs and hexamers by centrifugation through a G-50 spin column. Centrifuge the G-50 column at 2000 × g for 1 min. Add the ﬁrst strand cDNA sample carefully to the top and center of the resin and collect by centrifuging for 2 min at 2000 × g.
7. Immediately carry out second strand cDNA synthesis.

3.2.4 Second Strand cDNA Synthesis with dUTP (Fig. 1d)

1. Incubate all reagents on ice for 5 min prior to use.
2. Add 1.3 μl 5× First Strand Buffer, 20 μl 5× Second Strand Buffer (supplied with reverse transcriptase), 3 μl dUTP mix (10 mM dATP, dCTP, dGTP, 20 mM dUTP), 1 μl DTT (100 mM), 5 μl E. coli DNA Polymerase I (10 units/μl), and 1 μl Ribonuclease H (2 units/μl) to the ﬁrst strand samples.
3. Add Nuclease-free water to bring the volume to 100 μl.
4. Incubate at 16 °C for 2.5 h, and purify the cDNA in 30 μl 10 mM Tris–HCl, pH 8.5 or equivalent solution supplied with PCR puriﬁcation kit as per manufacturer’s guidelines, and store at −80 °C.

3.2.5 End Repair (Fig. 1e) and Addition of a Single “A” Base (Fig. 1f)

Treating the cDNA fragments with a combination of T4 DNA polymerase and E. coli DNA polymerase I Klenow fragments removes 3′ overhangs via the 3′–5′ exonuclease activity, while the polymerase ﬁlls in any 5′ overhangs. Both these steps are necessary to facilitate ligation of sequencing adaptors. A single adenosine base is added to the 3′-end of the cDNA fragments to facilitate ligation to the sequencing adapter.
1. Add 45 μl Nuclease-free water, 10 μl T4 DNA Ligase buffer with 10 mM ATP, 4 μl dNTP mix (10 mM), 5 μl T4 DNA polymerase (3 units/μl), 1 μl Klenow DNA Polymerase (5 units/μl), and 5 μl T4 Polynucleotide Kinase (10 units/μl) to 30 μl cDNA. Incubate at 20 °C for 30 min, and purify by elution with a PCR puriﬁcation kit as per manufacturer’s guidelines. This is a safe stopping point, and samples may be stored at −80 °C.
2. To add an A base to the 3′ end, add 5 μl Klenow buffer, 10 μl dATP (1 mM), and 3 μl Klenow Exo Fragment (5 units/μl , 3′ → 5′ exonuclease) to end repaired cDNA, in a total volume of 50 μl.
3. Incubate the reaction at 37 °C for 30 min and purify by elution using a PCR puriﬁcation kit as per manufacturer’s guidelines. Samples with an A overhang should not be stored for long periods as they are unstable.

3.2.6 Adapter Synthesis

Several libraries can be pooled together and sequenced on the same run. This is achieved by ligating speciﬁc adapters containing different barcode (or index) sequences, to the DNA fragments.

8 Can Wang et al.
The barcodes are used to separate library speciﬁc data after sequencing [19]. We originally used home-made single read (SR) Y-shaped adapters with short six nucleotide barcodes, designed by Dr. Amanada Lohan UCD, and based on the 2008 Illumina customer letter and Craig et al. [19, 20] (Fig. 2a).
These adapters are made from two single stranded oligonucleotides (Oligo-1 and Oligo-2) with both complementary regions and noncomplementary regions that when annealed create a Y-shaped adapter bound together at the hinge (complementary) region (Fig. 2a). The top oligonucleotide (Oligo-1) contains a T overhang with a phosphorothioate linkage required for stabilization and resistance to nuclease digestion, that is designed to ligate to the A overhang added to the insert DNA during library generation. Oligo-2 is phosphorylated at the 5′ end during synthesis, and is complementary to the P7 region, which anneals to sequences on the ﬂowcell. An equivalent P5 region is added at the opposite end during library ampliﬁcation (step 10, Fig 1j). The 6 nucleotides barcode (index) is added to both Oligo-1 and Oligo-2. Table 1 shows six barcode indexes, allowing six libraries to be combined in a single lane (multiplexing). The choice of barcode depends on the number of libraries combined (Table 2). It is now possible to design and synthesize long adapter sequences, using updated recommendations from Illumina [21] that remove the necessity to add the P5 region during library ampliﬁcation (Fig. 2b, [21]) (see Note 2).
1. Synthesize the oligonucleotides commercially, and using HPLC puriﬁcation. To construct the Y-shaped adapters, resuspend lyophilized oligonucleotides in 10 mM Tris–HCl at 100 pmol/μl and anneal them together to form a forked adapter (iAdapter), making sure that each oligo contains the same barcode/index sequence.
2. Add 20 μl of the relevant indexed Oligo-1, 20 μl indexed Oligo-2 and 10 μl Tris–NaCl Buffer in 0.2 ml PCR tube.
Fig. 2 (continued) of the barcode index (using index sequence of iSR-6 (Table 1) as an example). The inserted cDNA is shown in italics. The P7 sequence is highlighted in dark grey. Before library ampliﬁcation the ﬁrst (top) strand (contain U residues) is degraded, and the bottom strand is copied using SR1.2 as a primer. Subsequent ampliﬁcation with primers SR1.1 and SR1.2 adds the P5 sequence (light grey). (b) Library generation using updated Illumina recommendations [21]. Two oligonucleotides (the universal adapter and indexed adapter) are synthesized for each library, and a Y-shaped adapter is generated as in 2A. The cDNA is ligated at the arrow. The universal adapter sequence contains the P5 sequence and the indexed adapter contains the P7 sequence. The P7 sequence also contains an index/barcode (In). The libraries are ampliﬁed with primers 1 and 2. The number of multiplexed samples can be increased by also including indexes in the universal primer (dual indexing, not shown). For single reads a sequencing primer for the P7 end is used, for paired-end reads, primers from both P7 and P5 ends are used. Advice on designing and synthesizing longer adapters is available from refs. [15, 45]. The asterisk indicates a phosphorothioate linkage, and the P indicates a phosphorylated nucleotide

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

9

a

5’ACOAClTiCgToTT-C1CCTACACGAC

cDNA fragment
P
GCTCTTCCGATCAGCTAT*T -NUN...NUN.A

ATAGCTGATCGGAAGAGC TCGTATGCCGTCTTCTGCTTG

3’

3’5G’TCTACAOGGTClCAiTgGTAoCATG-GA2(CCPCGGG7TCA)ATTGACCSTGRACG1GC.A2TGCATATGCGCCGTAATGCTCGATA PA..NTN..NTN..T*TATCGACTAGCCTTCTCGCAGCACATCCCTTTCTCACA 5’ (P5)

TCTAGAGCCACCAGCGGCATAGTAA 5’

cDNA

SR 1.1

(P7)

fragment
3’CTAGCCTTCTCGCAGCACATCCCTTTCTCACA

5’CAAGCAGAAGACGGCATACGAGCTCTTCCGATCAGCTATTNTN...NT.AATAGCTGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGT 3’

3’GTTCGTCTTCTGCCGTATGCTCGAGAAGGCTAGTCGATAA..NTN..NTTTATCGACTAGCCTTCTCGCAGCACATCCCTTTCTCACA 5’

SR 1.2

b

3’

5’AATGATUACGnGCivGAeCCrAsCCaGAl GAATCdTaACpACtTeCTrTTCCCTACACGAC

cDNA fragment
P
GCTCTTCCGATC*T GATCGGAAGAGC

ACACGTCTGAACTCCAGTCAC(In)ATCTCGTATGCCGTCTTCTGCTTG

CGAGAAGGCTAG
3’G5T’TCCAGATG(CCPTAGTAC7IATn)GGdACCCeGGGTxCAATPeTGACdrCTiGCmAATGAA(deTIarnp)2CtAeCTrGACCTCAAGTCTGCACA

(P5)PT*CTAGCCTTCTCGCAGCACATCCCTTTCTCACATCTAGAGCCACCAGCGGCATAGTAA

5’

(P7)

Primer 1
AGCACATCCCTTTCTCACATCTAGAGCCACCAGCGGCATAGTAA 5’

5’CAAGCAGAAGACGGCATACGAGAT (Index)GTGA...:cDNA:...TCGTGTAGGGAAAGAGTGTAGATCTCGGTGGTCGCCGTATCATT 3’ 3’GTTCGTCTTCTGCCGTATGCTCTA (Index)CACT...:cDNA:...AGCACATCCCTTTCTCACATCTAGAGCCACCAGCGGCATAGTAA 5’

Primer 2

(P5)

Fig. 2 Adapters used for library generation for Illumina sequencing. (a) iAdapters generated using the original legacy SR (single read) adapters described in the Illumina customers letter prior to 2009. Two oligonucleotides, Oligo-1 and Oligo-2 are synthesized for each adapter. The underlined six nucleotide sequences show the location

10 Can Wang et al.

Table 1 Barcode sequences

Adapter IDa

Index/barcodeb

iSR-6

AGCTAT

iSR-10

CGATCT

iSR-20

GATCGT

iSR-11

GCTAGT

iSR-13

TAGCTT

iSR-16

TCGATT

aSR indexed adapters are designed by adding a barcode of six nucleotides, which have to maintain color balance for each base. A/C bases are identiﬁed by the red laser and G/T bases by the green laser on a Genome Analyzer IIx. We show six adapters designed according to Illumina indexing guidelines [21]. Many more are possible (for example, see ref. [45])

Table 2 Pooling strategies

Number of libraries Best combinations

2 in the lane 3 in the lane 5 in the lane 6 in the lane

(iSR 6, iSR 20) or (iSR 10, iSR13) (iSR 10, iSR 11, iSR13) or (iSR 6, iSR16, iSR 20) (iSR 6, iSR 10, iSR 13, iSR 16, iSR 20) (iSR 6, iSR 10, iSR 11, iSR 13, iSR 16, iSR 20)

3.2.7 Adapter Ligation (Fig. 1g)
3.2.8 Gel Puriﬁcation (Fig. 1h)

3. Incubate at 97 °C for 2 min, followed by a stepdown of −1 °C/min for 72 cycles, and ﬁnally at 25 °C for 5 min.
4. Store the 40 μM iAdapter master stock at −20 °C. For most RNA-seq libraries a 15 μM working stock is used. However when <1 μg starting RNA is available further dilution may be required.
1. Add 25 μl 2× Quick DNA ligase buffer, 1 μl iAdapter mix (15 μM), and 2 μl Quick T4 DNA ligase (NEB) to 22 μl endrepaired cDNA with an A overhang (from the end repair step).
2. Incubate at 20 °C for 15 min and purify by elution in 10 μl 10 mM Tris–HCl, pH 8.5 using a PCR puriﬁcation kit.
3. Store at −80 °C.
1. Separate samples on a 2.5 % agarose gel by prepared using ultrapure TAE buffer and high-resolution agarose containing Ethidium Bromide at a ﬁnal concentration of 1 μg/μl (see Note 3). Use a suitable DNA ladder (see Note 4).

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

11

2. Add 10 μl adapter-ligated cDNA to 6 μl gel loading dye (such as Orange G from Promega) and add to the same volume of DNA ladder.
3. Load the wells of the gel with this solution very slowly to prevent overﬂow and spilling.
4. Electrophorese at 80 V for 3 h until sufﬁcient separation of the 100 and 200 bp bands of the DNA ladder has occurred.
5. Visualize the DNA on a Dark Reader Transilluminator, which operates at a wavelength that does not damage the sample, unlike normal UV transilluminators.
6. Excise regions corresponding to 200–250 bp and to 250– 300 bp (for backup) using Gel Excision Tips (for example from GeneCatcher).
7. Elute the adaptor-ligated cDNA in 30 μl of 10 mM Tris–HCl, pH 8.5 by using a Gel Extraction kit. Store the samples at −80 °C.

3.2.9 Second Strand Digestion (Fig. 1i)

1. Aliquot 26 μl gel puriﬁed adapter-ligated material (200– 250 bp) to sterile 200 μl PCR tubes.
2. Add 3 μl 10× uracil DNA glycosylase (UDG) buffer and 1 μl uracil DNA glycosylase (1 unit/μl).
3. Incubate in a thermal cycler at 37 °C for 20 min.
4. Terminate the reaction by heating at 94 °C for 10 min and 4 °C for 5 min. Store the digested DNA samples at −80 °C.

3.2.10 Ampliﬁcation of Adapter Ligated DNA Templates (Fig. 1j)

The adaptor-ligated cDNA samples are ampliﬁed by PCR to ensure there is a sufﬁcient quantity for sequencing.
1. Add 10 μl 5× buffer (provided with enzyme), 0.8 μl PCR primer SR 1.1 (Fig. 2a), 0.8 μl PCR primer SR 1.2 (Fig. 2a) or other suitable primers (Fig. 2b), 0.8 μl dNTP mix (25 mM), and 0.8 μl High Fidelity polymerase (e.g., cloned Phusion polymerase from NEB) to 20 μl digested DNA and bring the total volume to 50 μl with Nuclease-free water. If a different polymerase is used, ensure that it is not inhibited by dUTP.
2. Amplify at 98 °C for 30 s, followed by 12–14 cycles of 98 °C for 10 s, 65 °C for 30 s, 72 °C for 30 s, and then 72 °C for 5 min. In the method shown in Fig. 1j and Fig. 2a the P5 sequence, which is required to hybridize to the sequence on the ﬂow cell, is added to the end of the adapter by ampliﬁcation with oligonucleotide SR 1.1. The second oligonucleotide SR 1.2 contains the P7 sequence. Adapters shown in Fig. 2b can be ampliﬁed using the oligonucleotide primers shown.
3. Visualize library quality using 1.5 μl of the ampliﬁed DNA reaction on a 1 % agarose gel (Fig. 1k). The adapter/dimers should be 100–120 nucleotides long.

12 Can Wang et al.

4. Purify the remaining 48.5 μl ampliﬁed cDNA by elution in 10 μl 10 mM Tris–HCl, pH 8.5 with a PCR puriﬁcation kit if a product is visible.
5. Separate the DNA library samples on a high-resolution grade 2.5 % agarose gel. Visualize using a Dark Reader Transilluminator and excise fragments in the range of 200–250 bp, as described in the gel puriﬁcation step (see Note 3). Store the samples at −80 °C.

3.2.11 Quality Control and Puriﬁcation of Final Library (Fig. 1l)

1. Quantify the ampliﬁed library samples using a Qubit Fluorometer and the Qubit High-sensitivity dsDNA assay, as per manufacturer’s guidelines. 10 nM library dilution is typical for starting point dilution for cluster generation.
2. Check the quality of cDNA library using a High-sensitivity DNA chip assay on a Bioanalyzer, as per manufacturer’s instructions.

3.2.12 Pooling Strategy

1. Normalize cDNA libraries to 10 nM based on Qubit and DNA chip values. Ensure that the libraries contain a single peak of approximately 200 nucleotides, with little or no evidence of adapter dimers.
2. Dilute the library with 10 mM Tris–HCl, pH 8.5 with 0.1 % Tween 20 recommended for stability of library. Add 10 μl of each adapter-ligated library per lane. It is recommended that only certain barcodes (indexes) are combined together (Table 2). A minimum of 10 μl (one library) is required for clustering process.

3.2.13 Cluster Generation and Sequencing

We carry out cluster generation and sequencing using an in-house Genome Analyzer IIx platform (see Note 5). The multi-indexed library mix is loaded on the Illumina 8 channel ﬂowcell. For the ﬁrst step cluster generation, hundreds of millions of templates are hybridized to a lawn of oligo nucleotides immobilized on the ﬂow cell surface. Immobilized DNA template copies are ampliﬁed by isothermal bridge ampliﬁcation. The process is repeated on each template by cycles of isothermal denaturation and ampliﬁcation to create millions of individual copies. Each cluster of dsDNA bridges is denatured and reverse strand is removed by speciﬁc base cleavage, leaving the forward DNA strand. After strand blocking on the ﬂowcell surface, the sequencing primer is hybridized to the complementary sequence on the adapter on unbound ends of the templates in the clusters and each cycle of sequencing identiﬁes a single base.

3.3 Prerequisites to Computational Analysis

A substantial part of RNA-seq experiments consists of computational processing and analysis of the data. These analyses range from ﬁltering the raw reads obtained from the sequencing machine, to differential gene expression analysis and biological interpretation of the results.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

13

Table 3 Sequencing Read Archive accession numbers for samples used as an example

SRA accession number
SRR1278968 SRR1278969 SRR1278970 SRR1278971 SRR1278972 SRR1278973

Description
C. parapsilosis planktonic replicate 1 C. parapsilosis planktonic replicate 2 C. parapsilosis planktonic replicate 3 C. parapsilosis bioﬁlm replicate 1 C. parapsilosis bioﬁlm replicate 2 C. parapsilosis bioﬁlm replicate 3

In the following sections we describe how to download, process, and analyze RNA-seq data using Mac OS X or a Linux distribution (such as Ubuntu) as the operating system. A server or computer cluster (e.g., Amazon EC2) can also be used.
To illustrate the use of the software we use a subset of recently published data from an experiment investigating the differences between the transcriptome of Candida parapsilosis grown as bioﬁlms and under planktonic growth conditions (Table 3) [22]. This is strand-speciﬁc transcriptional proﬁling data obtained from a commercial company (BGI, Hong Kong) using an Illumina HiSeq 2000 with paired end reads of 90 bases. We describe in some detail how to visualize the results using a combination of R [9] and Bioconductor [10].

3.3.1 Download Data Set

1. Download the dataset from the Gene Expression Omnibus (GEO [23]) under GEO accession number GSE57451. It includes wild type C. parapsilosis cultures grown under planktonic and bioﬁlm conditions. The individual reads are stored in the Sequence Read Archive (SRA [24]) under accession number SRP041812. Download the data using your favorite tool, or use the Unix command “wget” to import the ﬁles to your server or hard drive. The total size is 10 GB.
2. Alternatively, all required data and output ﬁles generated by working through the exercises in the computational analysis section can be downloaded from http://www.cgob.ie/supp_ data. The directory structure follows the Unix setup described under “Common Unix Setup”, which makes it easy to verify that your locally generated results are correct.

3.3.2 Common Unix Setup

1. Use a structured directory system for all sequencing related software and data to help to keep track of ﬁles and installed software. The setup described here is applicable for both Mac OS X and Linux operating systems. In Mac OS, use the

14 Can Wang et al.
“Terminal” application to execute commands and manipulate ﬁles on the hard drive. For the purpose of the RNA-seq workﬂows below, create a general folder called “ngs” and subfolders for “data” and “applications”. If you are using a server and do not have root access, the folder “~/local” and “~/local/bin” should be created as well. The “~/” represents the home directory and “~/local/bin” is the general location where executables and ﬁle links (Unix command “ln –s”) to applications are stored. Use the following commands create the directories:
mkdir ~/ngs
mkdir ~/ngs/data
mkdir ~/ngs/applications
mkdir ~/local
mkdir ~/local/bin
2. Extend the PATH variable to include the “~/local/bin” folder. This enables the execution of the installed software anywhere on the system by typing the name of the software, rather than the full path to the directory where the software is installed. Use the following commands to extend and view the PATH variable:
export PATH=$HOME/local/bin:$PATH
echo $PATH
This change to the PATH variable is temporary and will be lost after logging out of the current session. To permanently extend the PATH variable add the command “export PATH=$HOME/local/bin:$PATH” to the end of either the “.proﬁle” or “.bashrc” ﬁle in the home directory using for example emacs or vim.
3. Most software can be executed directly after unpacking downloaded archives. More advanced users, or users working with operating systems other than Linux or Mac OS X can build software from source (see Note 6). Use the following commands:
– Downloading ﬁles to a server/local hard drive from the command line: wget http://some.web.address/ﬁle.tar.gz.
– Unpacking an archive: tar xvfz ﬁle.tar.gz.
– Creating a folder: mkdir name-of-folder.
– Conﬁguration of the installation script: ./conﬁgure --preﬁx=$HOME/local/bin.
– Building the software: make; make test; make install.
– Linking the new software to a folder that is included in the $PATH variable: ln -s $PWD/new-software-executable ~/local/bin/

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

15

If a program depends on external tools that need to be installed, the README or INSTALL ﬁles from the downloaded archive provide further details.

3.3.3 Installing Software

All software required for the analysis workﬂow under “Data processing” are listed in Table 4. After downloading the individual ﬁles, execute the commands below inside the Terminal application in Mac OS X or Linux.
1. SRA Toolkit is available as compiled binaries. Download the archive into “~/ngs/applications”, unpack, and link the executable to “~/local/bin”. For the Ubuntu SRA Toolkit version 2.3.5, use the commands:
tar xvfz sratoolkit.2.3.5-2-ubuntu64.tar.gz
cd sratoolkit.2.3.5-2-ubuntu64/bin
ln -s $PWD/fastq-dump ~/local/bin/
2. SAMtools (version 1.0 and above) is available as compiled binaries for Linux and Mac OS X that include SAMtools, BCFTools and HTSlib. The current version of SAMtools (v1.1) is not yet compatible with TopHat and we therefore recommend using SAMtools v0.1.19. This issue might be ﬁxed with a TopHat version above 2.0.12. Download SAMtools to the applications folder and execute the following commands (for SAMtools version 0.1.19):
tar xvfz samtools-0.1.19.tar.bz2
cd samtools-0.1.19/
make
ln -s $PWD/samtools ~/local/bin
3. FastQC is based on Java and platform independent. Java is installed by default on current Linux and Mac OSX operating systems. To test which version of Java is installed execute:
java -version
Install the Mac OS X version of FastQC by copying the FastQC bundle into the applications folder. Download the Linux version into the applications folder and execute (for FastQC version 0.11.2):
unzip fastqc_v0.11.2.zip
cd FastQC
chmod 755 fastqc
ln -s $PWD/fastqc ~/local/bin
The “chmod” command changes the “fastqc” ﬁle permission to make it executable.

Table 4 Overview of ﬁle formats, software, and resources used for processing and analyzing RNA-seq data

Format

Description

SRA Used by the Sequence Read Archive to store and provide sequencing data

FASTQ

For storing sequencing data and corresponding quality scores

GTF/GFF

General Feature Format/Gene Transfer Format. Standardized formats for storing gene information

SAM

Sequence Alignment Map. Tab-delimited ﬁle format for storing alignment information from sequencing reads

BAM

Binary version of SAM format with a signiﬁcantly smaller ﬁle size

BED

Format to store speciﬁc meta-data for regions of the genome. Used by the UCSC Genome Browser

BEDGRAPH Based on the BED format. Stores scored data for speciﬁed genomic regions

BIGWIG

Very large collections of the BEDGRAPH format can be transformed into the binary BIGWIG format

Software/resources Reference/website

Description

SRA/SRA Toolkit

[24] ncbi.nlm.nih.gov/Traces/sra

Storage for raw sequencing reads Collection of scripts for handling SRA ﬁles

SAMtools

[37] www.htslib.org/

Collection of scripts to handle SAM ﬁles

Skewer

[30] sourceforge.net/projects/skewer Tool for quality trimming and ﬁltering of sequencing reads

FastQC

[29] bioinformatics.babraham.ac.uk/ Generates quality reports for sequencing

projects/fastqc

ﬁles

Bowtie2

[36] bowtie-bio.sourceforge.net/ bowtie2

Tool for aligning sequencing reads to a reference genome

TopHat

[31] ccb.jhu.edu/software/tophat

Splice-aware aligner for sequencing reads to a reference genome

HTSeq

[38] www-huber.embl.de/users/ anders/HTSeq

Python based tools to analyze sequencing data. The script htseq-count calculates read counts per gene

R [9] www.r-project.org Statistical language used for a variety of computational biology tasks

Bioconductor [10] www.bioconductor.org

Large collection of R packages for biological data

CRAN

[11] cran.r-project.org

Large collection of R packages

CGD

[40] www.candidagenome.org

Extensive resource for Candida species

IGV

[25] www.broadinstitute.org/igv

Integrative Genomics Viewer for displaying

sequencing data

Cytoscape

[64] www.cytoscape.org

Open source platform for visualizing and analyzing network data

Python

[65] www.python.org

Programming language commonly used for Bioinformatics tasks

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

17

4. Skewer is available as compiled binaries for Mac OS X and Linux. Download the respective binary and execute the following commands:
mkdir skewer
mv skewer-0.1.118-linux-x86_64 skewer/
cd skewer
chmod +x skewer-0.1.118-linux-x86_64
ln -s $PWD/skewer-0.1.118-linux-x86_64 ~/local/bin/skewer
5. For both MacOS and Linux, download and unpack the Bowtie2 archive and link “bowtie2” and the genome indexer “bowtie2build” to “~/local/bin” with the commands (for version 2.2.3):
unzip bowtie2-2.2.3-linux-x86_64.zip
cd bowtie2-2.2.3
ln -s $PWD/bowtie2 ~/local/bin
ln -s $PWD/bowtie2-build ~/local/bin
6. Installation of TopHat is very similar to bowtie2 with the following commands (for version 2.0.12):
tar xvfz tophat-2.0.12.Linux_x86_64.tar.gz
cd tophat-2.0.12.Linux_x86_64
ln -s $PWD/tophat ~/local/bin
7. Install Python (version number above 2.5 and below 3.0) before installing HTSeq. Most servers and computer clusters will have one or several versions of Python already installed. Check the version of Python using:
python --version
If Python is not installed, or installed with a wrong version number, use the Unix tool “apt-get” to install Python. The user needs to have “sudo” rights for the following command to install Python 2.7, and the two additional packages that HTSeq requires, numpy and matplotlib:
sudo apt-get install build-essential python2.7-dev pythonnumpy python-matplotlib
If no “sudo” rights are available and Python or the numpy or matplotlib packages are not installed, contact the systems administrator to install them. To verify that numpy and matplotlib are installed, execute the following commands (the “python” command will enter the Python command line):
python
import numpy
import matplotlib
If no error messages are displayed the packages are installed and ready to use (see Note 7).

18 Can Wang et al.
8. To install HTSeq download and unpack the HTSeq archive and install it using Python with the following commands (for version 0.6.1):
tar xvfz HTSeq-0.6.1.tar.gz
cd HTSeq-0.6.1
python setup.py install –user
ln –s $PWD/build/scripts-2.6/htseq-count ~/local/bin
9. For Mac OS X, an installation package for R is provided. Download the newest version, double-click the downloaded ﬁle and follow the instructions of the Mac OS X installer. On Linux systems execute the command:
sudo apt-get install r-base r-base-dev
If no “sudo” rights are available, download the source package of R, unpack the archive and build R with the following commands:
tar xvfz r-base_3.1.1.orig.tar.gz
cd R-3.1.1
./conﬁgure –-preﬁx=$HOME/local/bin
make
ln –s $PWD/bin/R ~/local/bin
10. The Integrative Genomics Viewer [25] can be downloaded and used locally or launched directly from a web browser with varying amounts of allocated memory.
11. The Bioconductor package DESeq2 is required for the differential expression analysis described under “Generating HTML reports”. The Bioconductor package ReportingTools is used to create HTML reports from DESeq2 results. Start R and execute the following commands:
source("http://bioconductor.org/biocLite.R")
biocLite("DESeq2")
biocLite("ReportingTools")

3.3.4 File Formats

Several different ﬁle formats are required. The user should become familiar with the various types listed in Table 4 and described below.
SRA: File format used by the Sequence Read Archive [24] to store and provide sequencing data. SRA format ﬁles can be converted into several commonly used formats using SRA Toolkit. SRA ﬁles in the sequence read archive format (ﬁle ending “.sra”) can be transformed into the FASTQ format using “fastq-dump” from SRA-tools (see Note 8).
FASTQ: A text based format for storing sequencing data and quality scores. Each entry (read) in the FASTQ format consists of four lines. These represent (1) sequence identiﬁer and description,

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

19

(2) the sequence, (3) an optional line that starts with a “+” and most commonly includes the sequence identiﬁer and description again and (4) the Phred scale that is used to measure the base quality. Phred scores indicate the probability of incorrect base calls and the Phred scale is based on ASCII characters. For current Illumina sequencing data the ASCII encoded scores have an offset of 64 and raw base qualities normally range from character @ (quality 0) to i (quality >40). A shortened example of one FASTQ ﬁle entry is shown below:

1. @SRR1278968.1.1 length=90

FCC1WYWACXX:1:1101:1238:2126

2. TGGGNCTGTACGTGGTTCTTCAATTGCTTGTTTGTT CAATGGTAAATTCG[…]

3. +SRR1278968.1.1 length=90

FCC1WYWACXX:1:1101:1238:2126

4. ___cBQ\accgg^ee[ddeegghfff`gghbe_cegffaa_c^_aeedc`[…]

GTF/GFF: The General Feature Format (GFF) and Gene Transfer Format (GTF) are two very similar formats used to store feature (gene) information. These include the genomic locations of exons, Coding Sequences (CDS), transcripts, 3′ and 5′ UnTranslated Regions (UTRs), tRNA, etc. The GFF ﬁle for an organism is used to assign features to sequencing reads that are mapped to the genome. An example of a line from a C. parapsilosis GFF ﬁle is shown below:
Cp_c1 . exon 94585 95295 . - . gene_id "CPAR2_100565_ exon"; transcript_id "CPAR2_100565_mRNA"
It stores the chromosome name (Cp_c1), feature type (exon), start and stop positions, strand (-), as well as additional attributes that are used for feature annotation, for example the transcript name (CPAR2_100565_mRNA). Single dots “.” in this example indicate missing/empty information (see Note 9).

SAM: The Sequence Alignment/Map (SAM) format is a tabdelimited ﬁle to store alignment information for sequencing reads. There are eleven mandatory columns for each entry, which include information such as the sequence identiﬁer, a bitwise FLAG that provides a summary of the read alignment, mapping position and quality score of the mapping. Additional columns can contain more speciﬁc information, such as the number of times the sequence mapped to the genome (NH), comments (CO), or mate pair information if the sequence data is generated from paired-end reads (MC, MQ).
An example of a line from a SAM ﬁle is shown below:
HWI-D00382:125:C48G6ACXX:8:1101:1134:59125 137 Cp_c8 2005578 50 101M * 0 0 AGCTGGTATCTTGTTG ACCCCAACTTTTGTCAAGTTGATTGCTTGGTACGATA

20 Can Wang et al.
ACGAATACGGTTACTCCACCAGAGTTGTTGATTT GTTGGAAAAATTTG CCCFFFDEHHHGHIGHHGGIID: CGHEHHGHFGEH>HEHIGIIIHEGHIG=FHGIIG= ACGHEHAAH;C==BBDE(.(6>A?B@;A@CACAA3(:<?B@C4 AS:i:0 XN:i:0 XM:i:0 XO:i:0 XG:i:0 NM:i:0 MD:Z:101 YT: Z:UU XS:A:+ NH:i:1
From the beginning it lists the sequence ID, FLAG, chromosome name, leftmost mapping position, mapping quality, CIGAR string for the alignment (101 matching bases), sequence ID of mate or read pair (“*” means information unavailable), position of mate, observed template length, raw sequence, and Phred-scaled base quality. Information about the optional ﬁelds, such as AS or XN, are available from SAMtools’ GitHub repository [26].
BAM: Smaller binary version of SAM format, can be viewed using the “samtools view” command. BAM ﬁles are commonly used to display alignment data in genome browsers because of their smaller size compared to the non-binary SAM format.
BED: Mostly used for displaying genomic data in a genome browser. Three ﬁelds specify the chromosome, start and end position. Nine additional ﬁelds can be used to provide more speciﬁc values for the genomic location, i.e., name, score, strand, thickStart, thickEnd, itemRgb, blockCount, blockSizes, and blockStarts. An example of a bed ﬁle generate from TopHat showing deletions found in RNA-seq data compared to the reference genome is below:
track name=deletions description="TopHat deletions"
Cp_c1 1474 1475 - 1
Cp_c1 1509 1511 - 2
Cp_c1 1771 1772 - 1
BEDGRAPH: More speciﬁc format for displaying continuousvalued data in a genome browser. Based on the BED and WIG formats, the BEDGRAPH format can be used to display continuous-numeric values for genomic regions, for example transcriptome data. An example of a BEDGRAPH ﬁle is below. The columns represent chromosome name, start and stop position, and the numeric value, e.g., a user-deﬁned score or coverage information.
Cp_c1 665 756 -2
Cp_c1 1039 1042 -1
Cp_c1 1042 1067 -2
5. BIGWIG: For very large collections of data the BEDGRAPH ﬁles can be converted into the binary BIGWIG format to save disk space.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

21

3.4 Data Processing
3.4.1 Quality Control and Trimming of Raw Data

After successfully installing the required software listed in Table 3 on Linux or Mac OS X, all further commands can be executed in the Terminal. Throughout the workﬂow below, we will provide example commands for sample SRR1278968 (Table 3).

1. To successfully execute downstream analyses these commands need to be executed separately for all six samples downloaded from SRA (Table 3). This data is already stored in separate ﬁles for each sample. If multiple samples are sequenced in the same lane on a sequencing machine, e.g., an Illumina HiSeq 2500, the raw sequencing reads must be separated using the barcode/indexing information, which is usually the ﬁrst six bases of each read. The fastx_barcode_splitter tool from the FastXToolkit can be used to achieve this [27, 28]. The data in Table 3 was obtained from strand-speciﬁc 90 base paired-end sequencing. For each sample there are two different ﬁles, one containing the ﬁrst read of the pair and one containing the second read. The standard ﬁle naming convention for paired-end reads ends is “_1” and “_2. Generate the ﬁles by providing fastq-dump with the option “--split-3” as shown here:

fastq-dump --split-3 SRR1278968.sra

2. To conﬁrm that the conversion from SRA to FASTQ was successful, use the Unix commands “head” or “less” to brieﬂy examine the generated ﬁles. Each sample should have two additional ﬁles with the endings “_1.fastq” and “_2.fastq”. The ﬁrst read in the FASTQ ﬁle looks like this:

@SRR1278968.1 length=90

FCC1WYWACXX:1:1101:1238:2126

TGGGNCTGTACGTGGTTCTTCAATTGCTTGTTTGT TCAATGGTAAATTCGAGTCATCATGATGTGTTGGAGT TTGATTGGTGATTGTTTG

+SRR1278968.1 FCC1WYWACXX:1:1101:1238:2126 length=90

___cBQ\accgg^ee[ddeegghfff`gghbe_cegffaa_c^_ aeedc`Xe^aeebfa]beg\beb\bZc_bcgR\`^`V^R^__]]bB

3. Once all the ﬁles are generated, check the overall quality of the data using FastQC, a java based tool that creates extensive summary reports. Use the following commands:

mkdir qc

fastqc SRR1278968_1.fastq -o qc 1>qc/SRR1278968_1.log

2>qc/SRR1278968_1.err

fastqc SRR1278968_2.fastq -o qc 1>qc/SRR1278968_2.log

2>qc/SRR1278968_2.err

22 Can Wang et al.
The “mkdir” command creates the “qc” folder where the results will be stored. For each ﬁle, FastQC generates a fastqc_ report.html ﬁle, which can be displayed in any available browser. The quality report provides a basic summary of the sequencing reads in each ﬁle, overall per base and per sequence quality scores of a random subsample of all reads and several statistics to assess the quality of the sequencing run and the sequenced material. FastQC also reports basic sequence analysis results, such as over-represented sequences and relative kmer enrichments.
To assess of the quality of the sequencing data, it is helpful to look at the per base sequence quality boxplot. Figure 3 shows plots from two different fastq ﬁles, one from the sample data. The data in Fig. 3a is of a high quality. The boxplot shows that the quality scores from the base calling rarely fall below 30 for all 90 bases in the reads. Applying quality ﬁltering on this sample will result in discarding a very small number of reads.
Figure 3b shows an example of a sample with reads of mixed quality. The black boxes for the ﬁrst 80 bases are close to or above a base quality of 30, which indicates that the majority of reads has a high quality. However, a large number of reads in the lower 25th percentile fall below an acceptable base quality threshold (e.g., [15]) and have to be trimmed or removed.
The quality of reads from a sequencing experiment can vary signiﬁcantly, the reasons vary from poor quality (degraded) or contaminated starting material to mistakes during the sequencing run itself (e.g., temporary shortage of solutions in the sequencing machine, or bubbles in the ﬂowcell) [29].
4. After inspecting the FastQC report, trim the raw reads using Skewer [30] (see Note 10). Trimming sequencing data is an important step to ensure that only high quality data is analyzed and the results are not inﬂuence by poor quality reads. Skewer was developed primarily to improve adapter trimming of nextgeneration sequencing data, but it is also one of the fastest tools to remove poor quality bases from paired-end RNA-seq reads. It can utilize multiple processors to further speed up the quality trimming [30]. To run Skewer a few options must be speciﬁed. These include “-m pe” for paired-end trimming. Additionally recommended thresholds for trimming are a minimum read length of
Fig. 3 (continued) and below each represent 25 %. Light, medium, and dark grey background colors indicate poor, medium, and good per base quality, respectively. Quality scores are encoded in Illumina 1.5 format (a) and >1.3 format (b). Expected quality for raw sequencing data in both formats ranges from 0 to 40, with the exception that in Illumina format version 1.5 and above the quality score 2 represents the Read Segment Quality Control Indicator and 0 and 1 are unused

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

23

a Quality socres (Illumina 1.5)
40 38 36 34 32 30 28 26 24 22 20 18 16 14 12 10
8 6 4 2 0
1 2 3 4 5 6 7 8 9 10-14 20-24 30-34 40-44 50-54 60-64 70-74 80-84
Position in read (bp)

90

b Quality socres (Illumina >1.3)
34 32 30 28 26 24 22 20 18 16 14 12 10
8 6 4 2 0
Position in read (bp)
Fig. 3 FastQC per base sequence quality boxplot example for high quality (a, sample SRR1278968) and low quality data (b, plot adapted from [29]). Each black box represents 50 % of the reads and the black lines above

1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40

24 Can Wang et al.

3.4.2 Mapping Reads to the Genome

36 bases after trimming “-l 36”; a quality threshold for removing bases of the 3′ end with scores lower than 15 “-q 15”; a threshold of 15 for the mean quality of a read “-Q 15”. In the example below the output directory for the trimmed data is “trim” and “-t 4” speciﬁes that four cores should be used when executing Skewer. The two fastq ﬁles for our sample are listed at the end of the command line, with “_1.fastq” before “_2.fastq”.
mkdir trim
skewer -m pe -l 36 -q 15 -Q 15 -o trim/SRR1278968 -t 4
SRR1278968_1.fastq SRR1278968_2.fastq
Skewer will provide a summary for each executed command, for example for sample SRR1278968:
13722223 read pairs processed; of these:
26390 (0.19 %) short read pairs ﬁltered out after trimming by size control
0 (0.00 %) empty read pairs ﬁltered out after trimming by size control
13695833 (99.81 %) read pairs available; of these:
2902491 (21.19 %) trimmed read pairs available after processing
10793342 (78.81 %) untrimmed read pairs available after processing
Only 0.19 % of the reads were discarded after trimming, since their length was shorter than 36 bases. From the other reads, 21.19 % were trimmed by a varying number of bases from the 3′ end because the base quality fell below the speciﬁed threshold of 15 (“-q 15”).
5. After trimming the data, run FastQC again, this time using the output FASTQ ﬁles from the trim folder. This ensues all the data is of high-quality (not shown).
All RNA-seq reads must be mapped to a reference genome, using an aligner such as TopHat [31].
1. Download the C. parapsilosis reference genome and gene annotation [22, 32–35] from http://www.cgob.ie/supp_data. The ﬁles are called “cpar.fa” and “cpar.gff”, respectively.
2. Rename the ﬁles generated by Skewer and create an index for the reference genome. For paired-end reads, TopHat requires that the FASTQ ﬁles end in “_1.fastq” and “_2.fastq”, for the ﬁrst and second mate respectively. For single-end reads no naming convention or order of samples exists. Renaming the trimmed FASTQ ﬁles that currently end with “pair1.fastq” and “pair2. fastq” is easily achieved using the Unix rename command:
rename 's/pair/pair\_/' *pair*

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

25

3. To create the reference genome index use bowtie2-build [36] with the FASTA genome ﬁle and output folder “cpar-index”: mkdir cpar-index
bowtie2-build cpar.fsa cpar-index/cpar
4. Execute TopHat with the following command:
tophat -p 12 -o SRR1278968 -G cpar.gff -g 1 --b2-verysensitive
--library-type fr-ﬁrststrand cpar-index/cpar
trim/SRR1278968-pair_1.fastq trim/SRR1278968-pair_2. fastq
The option “-p” sets the number of processing cores TopHat utilizes, “-o” sets the output folder, “-G” is optional and provides genome annotation and “-g 1” sets the maximum amount of times a read can map to the genome before it is reported as ambiguously mapped.
The preset “--b2-very-sensitive” is speciﬁed, which includes a number of settings (-D 20 -R 3 -N 0 -L 20 -i S,1,0.50). The D and R options specify “effort” options of TopHat. The higher these numbers are, the higher the amount of attempts TopHat will execute to realign reads or extend existing alignments. The N, L and i options ﬁne-tune how TopHat tries to align the reads. The number of mismatches that are allowed during seed alignment (N), the length of the seed substring (L) and the function for the interval between substrings (i). Further information on TopHat can be found in the online manual (follow link in Table 4).
The very-sensitive option is used to increase the probability of mapping reads, as well as the length of the alignment. If the full read does not map to the reference genome, it is cut into smaller pieces (seeds) that TopHat tries to realign.
To specify that the RNA-seq data is strand-speciﬁc, set the library-type option for TopHat (“--library-type fr-ﬁrststrand”) (see Note 11).
The C. parapsilosis genome, like many other eukaryotes, includes several introns [34, 35]. For this reason, a spliceaware aligner is used to map reads to the reference genome. TopHat has this ability, as do other tools (see Note 12).
Aligning the reads generated several ﬁles. The most important one is “accepted_hits.bam”, which includes all reads that were successfully mapped to the genome, as well as the mapping quality and the mapping position. The “unmapped.bam” ﬁle lists all reads that were not successfully mapped to the genome. The ﬁles “deletions.bed” and “insertions.bed” show positions where reads were successfully mapped to the genome, but compared to the reference genome bases were either missing in the read (included in “deletions.bed”) or additional

26 Can Wang et al.

bases were present in the read (“insertions.bed”). The ﬁle “junctions.bed” lists all positions in the genome where reads would span a region. This includes regions where reads span an intron. Visualizing the junctions in a genome browser can help identify different isoforms of a gene.
5. To check the data for properly aligned mate pairs, generate a summary of the alignment ﬁle from TopHat using the ﬂagstat script from SAMtools [37] with the following command:
samtools ﬂagstat accepted_hits.bam
The summary lists the total number of reads with a detailed breakdown of the paired reads. An example output is shown below. Here, 97.25 % of aligned reads are properly paired and only a very minor subset of reads without a mate or with a mate mapping to a different chromosome are present.
25680571 + 0 in total (QC-passed reads + QC-failed reads)
0 + 0 duplicates
25680571 + 0 mapped (100.00%:-nan%)
25680571 + 0 paired in sequencing
12793758 + 0 read1
12886813 + 0 read2
24974160 + 0 properly paired (97.25%:-nan%)
25135208 + 0 with itself and mate mapped
545363 + 0 singletons (2.12%:-nan%)
41182 + 0 with mate mapped to a different chr
41182 + 0 with mate mapped to a different chr (mapQ>=5)
6. When the reads are mapped to the genome, prepare the aligned “.bam” ﬁles for further analysis and viewing in a genome browser. Visualizing the reads at this point in the analysis is a good way to identify any potential problems, such as incorrect mapping of paired mates, or incorrect orientation of strandspeciﬁc data. First index the “accepted_hits.bam” ﬁle. This is essential for genome browsers to display reads efﬁciently. The following SAMtools command generates a “.bai” ﬁle, which contains the bam index.
samtools index accepted_hits.bam accepted_hits.bam.bai

3.4.3 Visualizing the Mapped Reads in a Genome Browser

1. Install the IGV browser as described in “Installing Software” (see Note 13).
2. Load the reference genome sequence and the annotation. This is achieved from a single dialog box under “Genomes -> Create .genome File…”.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

27

3. Enter a unique identiﬁer for the genome, and select the fasta ﬁle that was used earlier for building the Bowtie2 genome index as the “FASTA ﬁle”. Alternatively, select the genome annotation GFF ﬁle that was used with TopHat as the “Gene ﬁle”.
4. To load BAM ﬁles into IGV, select the reference genome from the drop-down menu at the top left corner of IGV.
5. Select a BAM file generated by an aligner from the local file system, a server or URL. The accompanying BAM index file must be in the same directory as the BAM file itself.
6. Load the GFF ﬁle to display the annotation. Initially, no sequencing reads are visible. This is because the default view in IGV is to show the entire chromosome, and displaying all reads mapped to the chromosome requires too much memory. Sequencing reads will be displayed if the visible region of the chromosome is set to below 100 kb in length. A snapshot of IGV with a BAM ﬁle and genome annotation loaded is shown in Fig. 4.
7. The reads can be displayed in three different ways: collapsed, squished and expanded. This is selected by right-click on the “accepted_hits.bam” label on the left side of the track. It also can be helpful to visualize paired-end RNA-seq data. To display read pairs as connected reads, select “View as pairs” again by right-click on the “accepted_hits.bam” label. By default IGV will display read pairs in different colors since the reads have different directions. To adjust the coloring schema to

Fig. 4 Snapshot of IGV showing strand-speciﬁc C. parapsilosis RNA-seq data [22]. Included are RNA-seq coverage (top track), BAM ﬁle (middle track) and genome annotation (bottom track). Reads on the forward strand are dark grey and light grey on the reverse strand. Arrows inside the annotation track indicate the direction transcription. The data range of the RNA-seq coverage is indicated in square brackets [0-4135]. BAM ﬁle reads are displayed using the “squished” visualization option and colored using the “ﬁrst-of-pair strand” option

28 Can Wang et al.

show transcriptional orientation, right-click into the “accepted_ hits.bam” label again and choose “Color alignments by” -> “ﬁrst-of-pair-strand”.

3.4.4 Counting Transcripts

To measure transcripts, the number of mapped reads for each gene must be counted. The Python script htseq-count from HTSeq [38] does exactly this. However, in order to run htseq-count, mapped reads must ﬁrst be sorted in the bam ﬁle according to their location on the genome, and the ﬁle converted into the non-binary and signiﬁcantly larger SAM format.
1. Sort the reads by location (option “-n”) and convert the sorted BAM ﬁle to the SAM format using the following two SAMtool commands. A descriptive header for the SAM ﬁle is included with the option “-h”.
samtools sort -n accepted_hits.bam accepted_hits.sorted
samtools view -h -o accepted_hits.sorted.sam accepted_hits. sorted.bam
2. To run htseq-count, specify the following command for each sample:
htseq-count -m union -s reverse -t exon -i transcript_id
-o accepted_hits.sorted.sam.htseq accepted_hits.sorted.sam
../cpar.gff 1>accepted_hits.sorted.sam.htseq.count
2>accepted_hits.sorted.sam.htseq.count.log
The option “–m union” speciﬁes how the HTSeq algorithm assigns a read to a gene (also referred to as “feature”). The union option is recommended in most cases [38]. The strand direction (-s), the feature type (-t, third column in the GFF ﬁle), and the attribute for that htseq-count should report the read counts (-i), e.g., for each exon, or for each transcript, should also be speciﬁed.
After successfully executing htseq-count the count data will be stored in “accepted_hits.sorted.sam.htseq.count”. This is a tab-delimited ﬁle with transcript names in the ﬁrst column and read counts in the second:
CPAR2_100010_mRNA 271
CPAR2_100020_mRNA 454
CPAR2_100030_mRNA 3277
In the following section we will explain how to identify differentially expressed genes from read count data and subsequently uncover the biological differences between different conditions.

3.4.5 Differential Gene Expression Analysis

Identify differentially expressed genes from read count data using the Bioconductor package DESeq2, which assumes that the read count data follows a negative binomial distribution [12]. (see Note 14).

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

29

Run Packages in R from the R command line or from the graphical user interface. (see Note 15).
1. Once R and DESeq2 are installed (see “Installing Software” for instructions) open R and load DESeq2 and ReportingTools [39] into the R environment using the following commands:
library("DESeq2")
library("ReportingTools")
2. Set the working directory to the analysis folder, for example:
setwd("~/ngs/data/")
3. The count data are stored inside each TopHat output folder as speciﬁed for the TopHat command in “Mapping reads to the genome”. To read these into R, use the function read.table():
samples <- c("SRR1278968","SRR1278969","SRR1278970",
"SRR1278971","SRR1278972","SRR1278973")
cDataAll <- NULL
for(i in 1:length(samples)){
ﬁle <- read.table(
sprintf("%s/accepted_hits.sorted.sam.htseq.count",
samples[i]))
cDataAll <- cbind(cDataAll, ﬁle[,2])
}
rownames(cDataAll) <- ﬁle[,1]
colnames(cDataAll) <- samples
4. The count data from all six samples is now stored in the “cDataAll” variable. The example data (Table 3) includes measurements from three planktonic and three bioﬁlm samples. To specify the conditions for each sample create the variable “groups” with “P” for planktonic and “B” for bioﬁlm (see Note 16):
groups <- factor(x=c(rep("P", 3), rep("B", 3)), levels=c("P", "B"))
5. The htseq-count data from Subheading “Counting transcripts” includes additional rows that indicate how many reads could not be associated with a unique feature, or where the alignment quality was too low. Exclude these ﬁve rows from the analysis using the match() function:
cData <- cDataAll[-match(x=c("__no_feature", "__ambiguous", "__too_low_aQual", "__not_aligned", "__alignment_not_ unique"), table=rownames(cDataAll)),]
6. DESeq2 uses raw count data as input, because it normalizes the data internally. To get a compact overview plot of all count

30 Can Wang et al.
data, use Tags Per Million (TPM) normalization and the density function:
tpm <- t(t(cData)/colSums(cData))*1e6
inlog <- log(tpm)
colLabel <- c(rep("#E41A1C", 3), rep("#377EB8", 3))
colTy <- c(rep(1:3, 3), rep(1:3, 3))
plot(density(inlog[,1]), ylim=c(0,0.4), main="Density plot of counts per gene", lty=colTy[1], xlab="Log of TPM per gene", ylab="Density", col=colLabel[1])
for(i in 2:ncol(tpm)){
lines(density(inlog[,i]), lty=colTy[i], col=colLabel[i])
}
legend("topright", legend=colnames(tpm), lty=colTy, col= colLabel)
This generates a density plot that shows the distribution of the log transformed TPM count data for each sample. It should follow a negative binomial distribution and with maximum log(TPM) between 4 and 5. All samples should have a very similar distribution. If this is not the case for any one sample, it is an early indicator that the transcriptome is very different to other samples. This could be due to a number of reasons. If no quality issues were detected in the raw sequencing reads and the mapping frequency to the reference genome was above 95 %, it may indicate that there is a problem with the biological sample.
7. The Principal Coordinate Analysis (PCoA) plot can also be used to characterize how similar samples are. PCoA returns coordinates that represent the dissimilarities between samples as distances. Use the normal plot() function to create the PCoA plot:
d <- dist(t(tpm))
ﬁt=cmdscale(d, eig=TRUE, k=2)
x=ﬁt$points[,1]
y=ﬁt$points[,2]
plot(x, y, type="p", pch=20)
text(x, y, labels=row.names(t(tpm)), cex=1, adj=c(-0.25,-0.25))
Figure 5 shows the PCoA plot using data from Table 3. Control and test samples should cluster separately and samples within each group should cluster together. The x-axis in Fig. 5 (PCoA dimension 1) clearly separates the control and test samples and the y-axis (PCoA dimension 2) indicates small differences within each group, but with a 10× smaller scale.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

31

B1

6000

4000

2000

Dimension 2

P1
P2 P3

B2

0

−2000

−4000

B3

−40000

−20000

0 Dimension 1

20000

Fig. 5 PCoA plot showing transcriptional proﬁles of C. parapsilosis cells grown in planktonic conditions (P1-P3,SRA IDs:SRR1287968,SRR1278969,SRR1278970) and bioﬁlm conditions (B1-B3, SRA IDs: SRR1278971, SRR1278972, SRR1278973) [22]. The two groups are visually separated by Dimension 1. There is minor variation among the biological replicates, which is indicated by the tenfold smaller scale for Dimension 2 compared to Dimension 1

8. When you are conﬁdent that the data does not have any bias or other confounding factors, carry out differential expression analysis. To keep structure in the analysis directory, create the folder DESeq2 and set it as the working directory. if (ﬁle.exists("DESeq2")){ setwd("DESeq2") } else { dir.create("DESeq2") setwd("DESeq2") }
9. Use the following script to run DESeq2: colData <- DataFrame(condition=groups) dds <- DESeqDataSetFromMatrix(cData, colData, formula (~condition)) dds <- DESeq(dds) res <- results(dds, cooksCutoff=FALSE)

32 Can Wang et al.

The Data.Frame “colData” contains the group factor that DESeq2 uses to separate the samples. The DESeqDataSet FromMatrix() function takes the count data, sample groups, and the formula for comparing the samples as input and creates a DESeqDataSet object, which can be used to run DESeq2. The function DESeq() executes DESeq and writes all results into the DESeqDataSet object. Use the results() function to create a Data.Frame containing the results, such as gene name, log2 fold change, and adjusted p-value.
10. To write the results to a ﬁle that can be opened with Excel use the write.csv() function. In addition the result Data.Frame can be ranked by the log2 fold change to enable easier analysis of the data.
res <- res[order(res$log2FoldChange, decreasing=TRUE),]
write.csv(as.data.frame(res), ﬁle="p-vs-b_results.csv")
Below are the ﬁrst rows of the results from the CSV ﬁle.

geneID

baseMean log2FoldChange lfcSE stat pvalue

padj

CPAR2_203270_ 5478.47 11.33 mRNA

0.42 26.44 3.91e−154 7.59e−152

CPAR2_807700_ 20856.65 9.68 mRNA

0.17 54.60 0

0

11. To extract the numbers of signiﬁcantly upregulated and downregulated genes you must specify the results thresholds. We recommend using a log2 fold change greater than 1 for genes with increased expression or lower than −1 for genes with decreased expression. Set the signiﬁcant adjusted p-value (padj) to less than 0.01.
up <- rownames(res[!is.na(res$padj) & res$padj <= 0.01 &
res$log2FoldChange >= 1, ])
down <- rownames(res[!is.na(res$padj) & res$padj <= 0.01 &
res$log2FoldChange <= -1, ])
sprintf("%s genes up-regulated, %s genes down-regulated", length(up), length(down))
12. To enable downstream analysis of the differentially expressed genes, save the gene IDs in two ﬁles, called “p-vs-b_upregulated.txt” and “p-vs-b_down-regulated.txt” with the command below. In the GFF ﬁle the gene IDs contain the ending “_mRNA”, which is removed using the R function sub() with the pattern “_mRNA” and an empty replacement “”.
write.table(sub(pattern = "_mRNA", replacement = "", x = up),
ﬁle="p-vs-b_up-regulated.txt", col.names=FALSE,
row.names=FALSE, quote = FALSE)

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

33

write.table(sub(pattern = "_mRNA", replacement = "", x = down),
ﬁle="p-vs-b_down-regulated.txt", col.names=FALSE,
row.names=FALSE, quote = FALSE)
13. The DESeq2 package contains several methods to create overview plots of the differentially expressed genes. Use MA plot (plotMA(dds)) to create a plot of the log2 fold changes against mean normalized counts for each gene. Use the plotPCA function to create a Principal Component Analysis (PCA) plot. The number of genes that are taken into account for the distance calculation of the PCA can be speciﬁed. With “ntop=500” the 500 genes with the highest row variance, i.e., the highest variance of read counts per gene across all samples, will be used for the PCA.
plotPCA(dds, ntop=500)
14. To represent the log2 fold change distribution of all genes as a histogram highlighting differentially expressed genes for example in grey (as shown in Fig. 6), use the commands:
hist(res[!is.na(res$padj) & res$padj <= 0.01, ][,"log2Fold Change"],
breaks=seq(-15,15,0.25),
col=c(rep("tomato", 56), rep("white", 8), rep("tomato", 56)),
xlab="Log2 Fold Change", main="Overall Log2 fold change, p.adj<0.01") (see Note 17).

Frequency 50 100 150 200 250 300 350

0

−15 −10

−5 0

5

Log2 Fold Change

10 15

Fig. 6 Histogram of log2 fold changes obtained by comparing the transcriptional proﬁles of C. parapsilosis cells grown in planktonic vs. bioﬁlm conditions [22] using the Bioconductor package DESeq2. Signiﬁcant log2 fold changes are colored in dark grey (greater than 1, or less than −1), not signiﬁcant log2 fold changes are in white

34 Can Wang et al.

3.4.6 Generating HTML Reports

As a last step, searchable HTML reports of the differentially expressed genes can easily be generated using the Bioconductor package ReportingTools [39].
1. Load ReportingTools into the R environment.
library("ReportingTools")
2. Use the functions HTMLReport() and publish() to generate a website from the results data.frame created by DESeq2.
htmlRep <- HTMLReport(shortName="P-vs-B_results", reportDirectory = "./reports")
publish(cbind(GeneID=rownames(res),as.data.frame(res)), htmlRep)
3. Finally, create the report.
ﬁnish(htmlRep)

3.4.7 Downstream Analysis of Differentially Expressed Genes

1. After the list of signiﬁcantly differentially expressed genes is generated, several tools and websites can help to identify the biological mechanisms that drive the change between the two conditions, planktonic and bioﬁlm transcriptomes in this example. Meta-information for Candida species is available from the Candida Genome Database (CGD, [40]). Equivalent sites for other genomes include Saccharomyces species from the Saccharomyces Genome Database (SGD, [41]) and Aspergillus species from the Aspergillus Genome Database (AspGD, [42]). For less characterized species, working with homologs from a closely related species can provide more biological insight. Homology information for Candida and Saccharomyces species is available from the Candida Gene Order Browser (CGOB, [35, 43]) and the Yeast Gene Order Browser (YGOB, [44]), as well as from AspGD.
2. Gene Ontology (GO) Analysis: Using the identiﬁed differentially expressed genes from the C. parapsilosis planktonic and bioﬁlm samples, Gene Ontology terms that are enriched in upregulated or downregulated genes are identiﬁed using the GO Term Finder at CGD ([40], Table 4). In step 1 on the GO Term Finder website, choose Candida parapsilosis as the target species. For step 2 upload the ﬁle “p-vs-b_up-regulated.txt” or the equivalent ﬁle containing downregulated genes, which were saved at the end of the DESeq2 workﬂow. Choose one of the three Gene Ontologies in step 3, i.e., Biological Process, Molecular Function or Cellular Component. We want to know if our upregulated genes have any enriched GO terms in the Molecular Function ontology. Fig. 7 shows a screenshot of the GO Term Finder with sample settings. To start the analysis, click on the Search-button in the bottom left corner.

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

35

Fig. 7 Screenshot of the GO Term Finder from the Candida Genome Database. The species C. parapsilosis is selected in Step 1 and a ﬁle containing gene names is speciﬁed in Step 2. The Molecular Function Gene Ontology is selected in Step 3

3.5 Final Remarks

Results from the GO Term Finder can be downloaded in form of an Excel ﬁle at the bottom of the page. Alternatively the results can be saved by right-clicking on the page in the browser and selecting “Save As”. This will also save the GO tree picture. In the GO tree for upregulated genes (“p-vs-b_up-regulated. txt”) Molecular Function GO terms that are signiﬁcantly shared between the list of upregulated genes include Oxidoreductase Activity, Transmembrane Transporter Activity, and Transition Metal Iron Binding.
For relatively little bench time, RNA-seq can yield a large amount of data. With an established protocol and workﬂow, RNA-seq experiments can have a quick turnaround, with the longest waiting time being the actual sequencing itself. Even commercial companies are reducing this time, with some offering a turnaround of 4–6 weeks.
RNA-seq holds the potential to answer key research questions. With new strategies emerging for increased multiplexing and the availability of more whole genome sequencing data and reference genomes, the uses and beneﬁts of RNA-seq and other NGS techniques are becoming widespread throughout the research community. They will soon be a staple technique in the lab environment.

4 Notes

1. We recommend using a commercial kit to isolate high quality RNA. The Ribopure Yeast RNA extraction kit from Ambion is particularly useful, but other kits or methods can be used providing the quality of the RNA produced is high.
2. It is now possible to design and synthesize long adapter sequences, using updated recommendations from Illumina

36 Can Wang et al.
[21] that remove the necessity to add the P5 region during library ampliﬁcation (Fig 2b [21]). The P5 sequence is included in the ﬁrst oligonucleotide (the universal adapter). The indexing sequence is contained in the second oligonucleotide (indexed adapter), outside the short region that anneals with the universal adapter (Fig 2b). The sequence of twenty-seven 6 nucleotide indexes are provided by Illumina ([21], Oligonucleotide sequences, 2007–2013 Illumina, Inc. All rights reserved) and other home-made designs are described by Ford et al. [45]. Multiplexing of samples can be increased by also including an index sequence in the universal adapter (dual indexing). Recent kits from Illumina use six or eight nucleotide indexes, with up to eight different versions of the universal adapter, and 48 of the indexed adapter [21]. The libraries are ampliﬁed using regions derived from the P5 and P7 regions, and can be sequenced from either end using two sequencing primers. These adapters can also be combined with dUTP methodology for strand-speciﬁc sequencing [18].
3. AMPure XP beads (Beckman Coulter) are now recommended for clean-up procedures instead of gel puriﬁcation.
4. We use 2-log DNA ladder from NEB, which allows visualization of DNA bands for 0.1–10 kb. Make 2-log DNA ladder mix by mixing 1 μl 2-log DNA ladder (NEB), 1 μl Blue loading dye (Promega), and 4 μl distilled water.
5. Consideration should be given to the length of the reads generated, and whether single-end or paired-end sequences are used. The adapters described here are for single read only, different sequences are required for paired end reads. It is possible to obtain increasingly long reads, but at a price. Long reads (>100 bases) are not necessary for RNA-seq. Paired-end reads can help in mapping, but are not strictly necessary. Strand-speciﬁc information however is strongly recommended as it enables identiﬁcation of UTRs (untranslated regions) and antisense expression.
6. For users who are not yet proﬁcient with the Terminal command line, a detailed Unix tutorial is available [46]. Commands and techniques described in the tutorial are applicable for both Linux and Mac OS X users. A large community of researchers that work with next-generation sequencing data can be reached on the SEQanswers forum [47]. BioStar [47, 48] is a more general and also very useful Bioinformatics forum.
7. If any error messages arise during the installation of Python, or if there are general questions about Unix environment variables or Unix commands, Stack Overﬂow [49] is a useful starting point to search for solutions.
8. More information on SRA formats are available in the SRA Knowledge Base [50] and the SRA Handbook [51].

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

37

9. More information about the GFF format is available at a dedicated website from the Sanger Institute [52].
10. There are several equivalently suitable tools available for trimming sequencing reads, some with extensive options to specify quality thresholds and ﬁltering parameters. It is however for the user to decide which tool ﬁts best for a speciﬁc task. The tool used in this RNA-seq workﬂow is Skewer [30]. Other popular tools include fastx_trimmer [27, 28], cutadapt [53], and TrimGalore! [54]. These tools are all capable of trimming sequencing reads based on quality thresholds.
11. There are different methods for generating strand-speciﬁc RNA-seq libraries [16]. To verify that the correct option for the RNA-seq data was used in TopHat, compare the aligned reads in a genome browser with the HTSeq count data for a speciﬁc gene. For unstranded RNA-seq data specify “fr-unstranded”.
12. Other splice-aware aligners include GSNAP [55] or STAR [56]. STAR is a recently developed alignment tool that has signiﬁcant speed advantages over other aligners. This is helpful for identifying the optimal parameters for aligning sequencing reads to a reference genome, e.g., number of allowed mismatches per read, number of times a read is allowed to map to the genome, or the length limitations for introns. A comparison of the different aligners was carried out by Engstrom et al. [57].
13. Other popular genome browsers are Artemis [58], the Integrative Genomics Browser [25], the web-browser based genome browsers JBrowse [59] and the UCSC Genome Browser [60].
14. Selecting a statistical package to identify differentially expressed genes from gene count data is an important step in an RNAseq workﬂow. There is however not one method that is superior to all others. Commonly used packages include DESeq2, edgeR, baySeq, DEGSeq, NOISeq, tweeDEseq, and many more. The Bioconductor version 2.14 lists 138 packages used for Differential Expression analysis. DESeq2, edgeR, baySeq, and EBSeq assume that the count data follows a negative binomial distribution, which is the most commonly assumed distribution for RNA-seq data. Choosing any of the available methods will yield results, more important than the method itself however is that experiments are planned with enough replicates and that options recommended by the authors of each method are used. It is not ideal to switch between statistical methods when comparing different datasets, which could introduce additional biases. Detailed comparisons and analyses of several statistical methods for identifying differentially expressed genes from count data can be found at [61, 62].

38 Can Wang et al.
15. A more sophisticated open source integrated development environment (IDE) for R is RStudio [63], which works on Windows, Mac, and Linux. Additionally, RStudio Server can be executed on a server and accessed from a web browser, which makes it easy to utilize the computing power of a server while using RStudio from a personal computer or laptop.
16. Specifying the levels for the group factor is important for running DESeq2, because it determines how the differentially expressed genes are reported. In this example “P” is the control condition and genes reported with a positive log2 fold change have increased expression in the test condition “B”. If levels are not speciﬁed they will be assigned automatically in alphabetical order.
17. Several other useful plots for generating an overview of the results are mentioned in the DESeq2 package Vignette on Bioconductor, as well as extensive documentation of the DESeq2 methodology: http://www.bioconductor.org/ packages/release/bioc/vignettes/DESeq2/inst/doc/ DESeq2.pdf.

Acknowledgements
We are grateful to Dr Amanada Lohan, UCD, for helpful advice and for designing the original sequencing strategy. Work in the Butler lab is supported by Science Foundation Ireland and the Wellcome Trust.

References

1. Nagalakshmi U, Wang Z, Waern K et al (2008) The transcriptional landscape of the yeast genome deﬁned by RNA sequencing. Science 320:1344–1349
2. Wang Z, Gerstein M, Snyder M (2009) RNASeq: a revolutionary tool for transcriptomics. Nat Rev Genet 10:57–63
3. Wilhelm BT, Landry JR (2009) RNA-Seqquantitative measurement of expression through massively parallel RNA-sequencing. Methods 48:249–257
4. Bruno VM, Wang Z, Marjani SL et al (2010) Comprehensive annotation of the transcriptome of the human fungal pathogen Candida albicans using RNA-seq. Genome Res 20:1451–1458
5. Zupancic ML, Frieman M, Smith D et al (2008) Glycan microarray analysis of Candida glabrata adhesin ligand speciﬁcity. Mol Microbiol 68:547–559

6. Nobile CJ, Fox EP, Nett JE et al (2012) A recently evolved transcriptional network controls bioﬁlm development in Candida albicans. Cell 148:126–138
7. Kumamoto CA, Vinces MD (2005) Contributions of hyphae and hypha-coregulated genes to Candida albicans virulence. Cell Microbiol 7:1546–1554
8. Marioni JC, Mason CE, Mane SM et al (2008) RNA-seq: an assessment of technical reproducibility and comparison with gene expression arrays. Genome Res 18:1509–1517
9. R Code Team (2014) R: a language and environment for statistical computing. http:// www.r-project.org
10. Gentleman RC, Carey VJ, Bates DM et al (2004) Bioconductor: open software development for computational biology and bioinformatics. Genome Biol 5:R80

Using RNA-seq for Analysis of Differential Gene Expression in Fungal Species

39

11. CRAN (2014) The Comprehensive R Archive Network (CRAN). http://cran.r-project.org
12. Love MI, Huber W, Anders S (2014) Moderated estimation of fold change and dispersion for RNA-Seq data with DESeq2. Genome Biol 550
13. Soto T, Núñez A, Madrid M et al (2007) Transduction of centrifugation-induced gravity forces through mitogen-activated protein kinase pathways in the ﬁssion yeast Schizosaccharomyces pombe. Microbiology 153:1519–1529
14. Desjardins PR, Conklin DS (2011) Microvolume quantitation of nucleic acids. Curr Protoc Mol Biol Appendix:A.3J.1–A.3J.16
15. Zhang Z, Theurkauf WE, Weng Z et al (2012) Strand-speciﬁc libraries for high throughput RNA sequencing (RNA-Seq) prepared without poly(A) selection. Silence 3:9
16. Levin JZ, Yassour M, Adiconis X et al (2010) Comprehensive comparative analysis of strand-speciﬁc RNA sequencing methods. Nat Methods 7:709–715
17. Parkhomchuk D, Borodina T, Amstislavskiy V et al (2009) Transcriptome analysis by strandspeciﬁc sequencing of complementary DNA. Nucleic Acids Res 37, e123
18. Sultan M, Dokel S, Amstislavskiy V et al (2012) A simple strand-speciﬁc RNA-Seq library preparation protocol combining the Illumina TruSeq RNA and the dUTP methods. Biochem Biophys Res Commun 422:643–646
19. Craig DW, Pearson JV, Szelinger S et al (2008) Identiﬁcation of genetic variants using barcoded multiplexed sequencing. Nat Methods 5:887–893
20. Weissenmayer BA, Prendergast JG, Lohan AJ et al (2011) Sequencing illustrates the transcriptional response of Legionella pneumophila during infection and identiﬁes seventy novel small non-coding RNAs. PLoS One 6, e17570
21. Illumina (2014) Illumina customer sequence letter. http://support.illumina.com/downloads/ illumina-customer-sequence-letter.html
22. Holland LM, Schröder MS, Turner SA et al (2014) Comparative phenotypic analysis of the major fungal pathogens Candida parapsilosis and Candida albicans. PLoS Pathog 10, e1004365
23. Barrett T, Wilhite SE, Ledoux P et al (2013) NCBI GEO: archive for functional genomics data sets--update. Nucleic Acids Res 41: D991–D995
24. Kodama Y, Shumway M, Leinonen R et al (2012) The sequence read archive: explosive growth of sequencing data. Nucleic Acids Res 40:D54–D56
25. Thorvaldsdottir H, Robinson JT, Mesirov JP (2013) Integrative genomics viewer (IGV):

high-performance genomics data visualization and exploration. Brief Bioinform 14:178–192
26. The SAM/BAM Format Speciﬁcation Working Group (2014) Sequence alignment/map format speciﬁcation. https://github.com/samtools/ hts-specs
27. Blankenberg D, Gordon A, Von Kuster G et al (2010) Manipulation of FASTQ data with Galaxy. Bioinformatics 26:1783–1785
28. Hannon G (2014) FASTX-Toolkit: FASTQ/A short-reads pre-processing tools. http://hannonlab.cshl.edu/fastx_toolkit
29. Andrews S (2010) FastQC: a quality control tool for high throughput sequence data. http:// www.bioinformatics.babraham.ac.uk/projects/ fastqc
30. Jiang H, Lei R, Ding SW et al (2014) Skewer: a fast and accurate adapter trimmer for nextgeneration sequencing paired-end reads. BMC Bioinformatics 15:182
31. Trapnell C, Pachter L, Salzberg SL (2009) TopHat: discovering splice junctions with RNA-Seq. Bioinformatics 25:1105–1111
32. Butler G, Rasmussen MD, Lin MF et al (2009) Evolution of pathogenicity and sexual reproduction in eight Candida genomes. Nature 459:657–662
33. Fitzpatrick DA, Butler G (2010) Comparative genomic analysis of pathogenic yeasts and the evolution of virulence. In: Ashbee HR, Bignell E (eds) Pathogenic yeasts. Springer, Heidelberg, pp 1–18
34. Guida A, Lindstadt C, Maguire SL et al (2011) Using RNA-seq to determine the transcriptional landscape and the hypoxic response of the pathogenic yeast Candida parapsilosis. BMC Genomics 12:628
35. Maguire SL, Oheigeartaigh SS, Byrne KP et al (2013) Comparative genome analysis and gene ﬁnding in Candida species using CGOB. Mol Biol Evol 30:1281–1291
36. Langmead B, Salzberg SL (2012) Fast gappedread alignment with Bowtie 2. Nat Methods 9:357–359
37. Li H, Handsaker B, Wysoker A et al (2009) The sequence alignment/map format and SAMtools. Bioinformatics 25:2078–2079
38. Anders S, Huber W (2010) Differential expression analysis for sequence count data. Genome Biol 11:R106
39. Huntley MA, Larson JL, Chaivorapol C et al (2013) ReportingTools: an automated result processing and presentation toolkit for highthroughput genomic analyses. Bioinformatics 29:3220–3221
40. Inglis DO, Arnaud MB, Binkley J et al (2012) The Candida Genome Database incorporates multiple Candida species: multispecies search

40 Can Wang et al.

and analysis tools with curated gene and protein information for Candida albicans and Candida glabrata. Nucleic Acids Res 40:D667–D674

41. Costanzo MC, Engel SR, Wong ED et al (2014) Saccharomyces genome database provides new regulation data. Nucleic Acids Res 42:D717–D725

42. Cerqueira GC, Arnaud MB, Inglis DO et al (2014) The Aspergillus genome database: multispecies curation and incorporation of RNASeq data to improve structural gene annotations. Nucleic Acids Res 42:D705–D710

43. Fitzpatrick DA, O'Gaora P, Byrne KP et al (2010) Analysis of gene evolution and metabolic pathways using the Candida Gene Order Browser. BMC Genomics 11:290

44. Byrne KP, Wolfe KH (2005) The Yeast Gene Order Browser: combining curated homology and syntenic context reveals gene fate in polyploid species. Genome Res 15:1456–1461

45. Ford E, Nikopoulou C, Kokkalis A et al (2014) A method for generating highly multiplexed ChIP-seq libraries. BMC Res Notes 7:312

46. Stonebank M (2001) UNIX tutorial for beginners. http://www.ee.surrey.ac.uk/Teaching/Unix

47. Li JW, Schmieder R, Ward RM et al (2012)

SEQanswers: an open access community for

collaboratively

decoding

genomes.

Bioinformatics 28:1272–1273

48. Parnell LD, Lindenbaum P, Shameer K et al (2011) BioStar: an online question & answer resource for the bioinformatics community. PLoS Comput Biol 7, e1002216

49. Overﬂow S (2014) Question and answer site for professional and enthusiast programmers. http://www.stackoverﬂow.com

50. SRA SS (2011) Using the SRA Toolkit to convert .sra ﬁles into other formats. http://www. ncbi.nlm.nih.gov/books/NBK158900/. 2014

51. Stack Overﬂow (2009, updated in 2014) Download guide. National Center for Biotechnology Information (US). http://www. ncbi.nlm.nih.gov/books/NBK47540/

52. GFF: an exchange format for feature description (1999) Sanger Institute. https://www.sanger. ac.uk/resources/software/gff/. 2014
53. Martin M (2011) Cutadapt removes adapter sequences from high-throughput sequencing reads. EMBnet J 17:10–12
54. Krueger F (2014) Trim Galore! a wrapper tool around Cutadapt and FastQC http://www. bioinformatics.babraham.ac.uk/projects/ trim_galore
55. Wu TD, Nacu S (2010) Fast and SNP-tolerant detection of complex variants and splicing in short reads. Bioinformatics 26:873–881
56. Dobin A, Davis CA, Schlesinger F et al (2013) STAR: ultrafast universal RNA-seq aligner. Bioinformatics 29:15–21
57. Engstrom PG, Steijger T, Sipos B et al (2013) Systematic evaluation of spliced alignment programs for RNA-seq data. Nat Methods 10:1185–1191
58. Rutherford K, Parkhill J, Crook J et al (2000) Artemis: sequence visualization and annotation. Bioinformatics 16:944–945
59. Skinner ME, Uzilov AV, Stein LD et al (2009) JBrowse: a next-generation genome browser. Genome Res 19:1630–1638
60. Kent WJ, Sugnet CW, Furey TS et al (2002) The human genome browser at UCSC. Genome Res 12:996–1006
61. Kvam VM, Liu P, Si Y (2012) A comparison of statistical methods for detecting differentially expressed genes from RNA-seq data. Am J Bot 99:248–256
62. Soneson C, Delorenzi M (2013) A comparison of methods for differential expression analysis of RNA-seq data. BMC Bioinformatics 14:91
63. RStudio (2014) RStudio: Integrated development environment for R (Version 0.98.1062). http://www.rstudio.org/
64. Saito R, Smoot ME, Ono K et al (2012) A travel guide to cytoscape plugins. Nat Methods 9:1069–1076
65. Foundation PS (2014) Python language reference, version 2.7. http://www.python.org

Chapter 2

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data
Hugo Devillers, Nicolas Morin, and Cécile Neuvéglise

Abstract
The number of fully sequenced genomes of yeasts is dramatically increasing but both structural and functional annotation quality are usually neglected, as most frequently based on automatic annotation transfer tools from reference genomes. RNA sequencing technologies offer the possibility to better characterize yeast transcriptomes and to correct or improve the prediction of mRNA, ncRNA, or miscellaneous RNA. We describe a computational approach to enhance structural annotation of yeast genomes based on RNA-Seq data exploitation. The proposed pipeline is primarily based on read mapping with TopHat2. Mapping outputs are then used for various applications such as: (1) validation of exon–exon junctions of predicted transcripts, (2) deﬁnition of new transcribed features, (3) prediction of 3' UTR, and (4) identiﬁcation of extra features absent from the genome assembly. We strongly encourage curators to proceed to a manual validation and editing of the reference genome. Releasing genomes with high-quality annotation is an important issue, as they will be considered as references for further predictions.
Key words Transcriptome, Genome annotation, Intron, Genome curation, RNA-Seq, Yeast

1 Introduction

Most of the genomic studies directly rely on the annotation associated with assembled sequences. As a consequence, the reliability and the accuracy of these analyses critically depend on the quality of the provided annotations. With the rise of next-generation sequencing (NGS), the number of complete genomes increases exponentially while each of them contains thousands of genetic feature descriptions in their relative annotations. However, the quality and the correctness of these data are particularly heterogeneous and most of the time, rather low [1].
This quality issue is explained by the limits of the different methods that are employed to generate genome annotation. Indeed, with the ﬂood of newly sequenced genomes, it is necessary to use automated methods to infer gene structures. However, although these methods can predict a majority of gene structures,

Frédéric Devaux (ed.), Yeast Functional Genomics: Methods and Protocols, Methods in Molecular Biology, vol. 1361, DOI 10.1007/978-1-4939-3079-1_2, © Springer Science+Business Media New York 2016
41

42 Hugo Devillers et al.
they generally failed to identify “complex” gene structures (e.g., multi-intronic genes) or “new” gene structures. Brieﬂy, automated methods can be classiﬁed into two categories. The ﬁrst one consists in inferring genes according to a theoretical model that detects the possible evidence of protein-coding genes along the genome sequences. These methods are referred to ab initio. They are particularly efﬁcient for prokaryote genomes where genes do not have spliceosomal introns, but they rapidly failed to infer exon–exon junctions in eukaryote genomes. The second kind of method is the annotation transfer from reference genome(s). It consists in mapping known features from a closely related species on a newly sequenced genome. This method can be particularly efﬁcient and fast if the reference genome is close enough and if it has a high quality annotation. Unfortunately, these requirements are generally overlooked and therefore, the reference annotation often contains mistakes themselves inferred or transferred from another genome annotation.
As a consequence, to obtain a good quality annotation, a particular effort has to be made to expertise and validate predicted annotations. Today, too few genome annotations have beneﬁt from such an effort [2]. Among the available yeast genomes, only a few are considered as reference genomes (e.g., Saccharomyces cerevisiae, Candida albicans, Schizosaccharomyces pombe, Neurospora crassa) and are consequently used even though the target species is not closely related. This highlights the critical needs to ﬁll this gap by providing more genomes with validated annotations.
With the development of second and third generation sequencing techniques, it is now possible to easily sequence the complete transcriptome of a given organism. RNA sequencing (RNA-Seq) offers an invaluable opportunity to experimentally identify all the transcripts and hence highly facilitates the detection of genetic features. However, RNA-Seq data are complex, voluminous, and often biased. Therefore, they require speciﬁc methods and procedures to extract usable and fruitful information.
In this chapter, we present different protocols that aim at retrieving gene structure information from RNA-Seq data to complete and correct annotations obtained by automated methods.

2 Materials
2.1 Genomic Data

For illustration purpose, we considered the genome of Yarrowia lipolytica strain E150/CLIB122 [3] with two different RNA-Seq studies (ENA project accession numbers PRJEB7323 and PRJEB7354), and the genome of Rhodosporidium toruloides strain CECT1137 [4] with one RNA-Seq study (unpublished data). EMBL format is required for the reference genome ﬁles. More details about these datasets are provided in Note 1. RNA sequencing

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

43

design strategy is discussed in Note 2, while reference genome selection is addressed in Note 3.

2.2 Bioinformatic Tools

1. FastQC [5]: read quality evaluation. 2. Trimmomatic [6]: read trimmer. 3. Bowtie2 [7]: read mapping on reference genome. 4. TopHat2 [8]: read mapping on reference genome. 5. Cufﬂinks [9]: mapped read assembling. 6. Trinity [10]: de novo assembler tool for transcripts. 7. RSEM [11]: estimation of gene isoform expression level. 8. Samtools [12]: manipulation of BAM/SAM ﬁles. 9. BLAST+ suite [13]: local alignment tool suite.

2.3 Data Visualization and Edition

Data visualization is a key aspect for reﬁning structural annotation. Thus, it is crucial to use a tool able to display and to handle the different kind of data (e.g., EMBL, GFF, BAM) and to facilitate the edition of the structure of the different genetic features. In this context, we recommend the genome browser Artemis [14] developed in java by the Sanger Institute.

2.4 Scripting Language

Some pretreatments and/or posttreatments on the inputs and outputs of the tools presented in Subheading 2.2 require the use of scripts to facilitate and automate analyses. In the different protocols presented in the next section, three scripting languages are used for that purpose:
1. Bash: for basic ﬁle handling.
2. Perl: for more advanced script, often rooted on the BioPerl library [15].
3. R: for matrix treatments and statistics [16].

2.5 System Requirements

Most of the methods and tools used in this paper are dedicated to UNIX systems although some of them can run under Windows. The different procedures presented in Subheading 3 were developed on a 12-core server under RedHat 6.5 with 96 GB of RAM (see Note 4).

3 Methods
3.1 Read Quality Evaluation

All the protocols described in this section are summarized in Fig. 1.
Global evaluation of the quality of reads provides fruitful information for further analyses and treatments, especially for the trimming step (see Subheading 3.2). Quality assessment is performed

44 Hugo Devillers et al.

Fig. 1 Global representation of the workﬂow (tools, data, and ﬁle formats) presented in this chapter

3.2 Trimming RNA-Seq Data

with the FastQC tool. This software takes raw fastq ﬁles as input, and generates an html report with a variety of diagnostic plots (see Note 5).
Quality trimming is performed with the Trimmomatic tool. It allows the deﬁnition of a complete trimming pipeline for fastq ﬁles. For Illumina read data, we propose the following pipeline:
– ILLUMINACLIP is used as a ﬁrst step to clip adaptor sequences from reads. It takes 4 arguments as input: (1) a fasta ﬁle describing adaptor sequences, (2) the maximum number of mismatches (set to 2 in our cases) and (3–4) two score thresholds, namely palindromeClipThreshold and simpleClipThreshold (reciprocally set to 15 and 5). For more details, see [6] and Note 6.

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

45

– LEADING and TRAILING subsequently allow to crop reads in 5′ and 3′ if the quality score provided by the fastq ﬁle is below a given threshold (set to 5 for both sides).
– SLIDINGWINDOW follows as a next step. It is a more advanced quality trimming algorithm, based on sliding windows. It considers two arguments, (1) the window size (set to 5) and (2) the minimum average quality score for the window (set to 20).
– MINLEN is then called to ﬁnalize the trimming. It is a length ﬁlter tool, which deletes cropped reads with a length above a given threshold (we generally use 36 for 50 bp reads and 50 bp for 100 bp reads).
The deﬁnition of this pipeline is discussed in Note 7. The usefulness of read trimming is discussed in Note 8.

3.3 RNA-Seq Mapping

After the trimming step, RNA-Seq data are mapped on a reference genome. As we consider eukaryote genomes whose genes may contain introns, we use TopHat2 for mapping reads on our yeast genomes (see [17] for a comprehensive comparison of mapping tools). The procedure is the following:
1. Preparing input data: TopHat2 requires reads data in fastq, a fasta ﬁle of the chromosomes/scaffolds of the reference genome and eventually a GFF ﬁle describing the known transcripts and the coordinates of their exon–exon junctions (see Note 9). The GFF ﬁle of transcripts can be easily obtained either with a BioPerl script, or by using the data selector of a genome viewer such as Artemis.
2. Preprocessing the reference genome: To run TopHat2 a pretreatment is required on the reference chromosomes. To do so, we use the “bundle” function from Bowtie2, denoted bowtie2-build, with default options. Running Bowtie2-build produces an index of the sequences of the genome.
3. Running TopHat2: Here are the options and parameter settings used for mapping reads on yeast chromosomes with TopHat2 (see Note 10):
--microexon-search (boolean)
--min-intron-length 30 (integer, bp)
--min-coverage-intron 30 (integer, bp)
--min-segment-intron 30 (integer, bp)
--max-intron-length 4000 (integer, bp)
--max-multihits 1 (integer)
--library-type fr-ﬁrststrand (for oriented reads)

46 Hugo Devillers et al.

Input data are provided as follows:
--GTF<transcript.gff>--transcriptome-index=<path_to_ transcriptome_index>
<path_to_bowtie_index><list_of_read_ﬁles>.
Log ﬁles and results are written into an output directory. In the following protocols, three output ﬁles will be considered (see Note 11):
– accepted_hits.bam, which contains the alignment of reads on the reference genome.
– junctions.bed, which lists the exon–exon junctions found by the mapping.
– unmapped.bam, which enumerates the reads that do not map on the reference genome.

3.4 Investigating Exon–Exon Junctions

As described in Subheading 3.3, TopHat2 provides among other outputs a speciﬁc ﬁle describing all the exon–exon junctions identiﬁed through the mapping of RNA-Seq reads on a reference genome. This ﬁle, named “junctions.bed” uses the UCSC BED format (see Note 12). Each splice junction identiﬁed by mapping is represented by two connected blocks, where each block is as long as the maximal overhang of any read spanning the junction. Using a scripting language such as BioPerl, one can parse the “junctions.bed” ﬁle to list coordinates and supporting information for each junction identiﬁed. Here is the procedure to extract information from the junctions.bed ﬁle and compare it to the structural annotations described in the reference embl ﬁle(s), in order to validate or correct or identify exon–exon junctions (including alternative splicing events).
1. Parsing the “junctions.bed” ﬁle: for each junction, store the following information into a hashtable:
– The name of the chromosome (i.e., ﬁrst ﬁeld of the BED table) on which the junction has been identiﬁed.
– The start and stop coordinates of the alignment spanning the junction (i.e., respectively second and third ﬁelds of the BED table).
– The score of the junction (i.e., fourth ﬁeld of the BED table): TopHat2 gives a score for each junction, representing the number of reads validating the junction. It can be further used to discriminate splicing events strongly supported by RNA-Seq data from alignment artifacts.
– The block sizes (i.e., 11th ﬁeld of the BED table): this particular ﬁeld contains two values that can be described as the maximal portion of reads aligned on both sides of the junction.

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

47

– The coordinates of the splice junction, which can be calculated using the alignment coordinates and the block sizes (see Note 13):
junction start = alignment start + left block size + 1
junction end = alignment end − right block size
All that information should be stored using a unique hashkey that could be used to quickly compare junctions. As such, we use a hashkey combining the name of the chromosome and the start and stop coordinates of the junctions, as calculated above.
2. Parsing the embl ﬁle(s) of the reference genome: in a similar fashion, store the junction information that can be extrapolated from an annotated embl ﬁle. For each mRNA or misc_ RNA features, store the following information into a hashtable:
– The name of the chromosome (i.e., ﬁrst ﬁeld of the BED table) on which the feature can be found.
– The locus_tag of the feature.
– The location operator, which contains the coordinates of the various blocks (i.e., exons or UTR regions) that compose the feature. Junction coordinates can be extrapolated by parsing the coordinates of two consecutive blocks:
junction start = end of block 1 + 1
junction end = start of block 2 − 1
As for the “junctions.bed” ﬁle, information extracted from the embl ﬁle(s) should be stored using a unique hashkey, using the same structure (e.g., combining the name of the chromosome and the start and stop coordinates of the junctions, as calculated above).
3. Compare the two hashtables: by using similar hashkey structures, one can quickly compare the tables, solely based on the hashkeys.
– If a key is present in the two tables, then there are evidences in the RNA-Seq data to validate the presence of an already known intron. We name the corresponding junction as “KNOWN”.—If a key is only present in the “junctions.bed” hashtable, then there are evidences in the RNA-Seq data to highlight the presence of a novel intron. We name the corresponding junction as “NEW”. Expert validation is further necessary to decide if the intron is indeed new, or if it corresponds to a correction of a wrongly deﬁned intron, or to an alternative splicing event.
– If a key is not present in the “junctions.bed” hashtable, then there are no evidences in the RNA-Seq data to support the presence of an intron described in the embl ﬁle(s). We name the corresponding junction as “MISSED”.

48 Hugo Devillers et al.

Expert validation is further necessary to decide whether or not the intron was indeed wrongly deﬁned in the reference genome, or if the junction could not be identiﬁed due to the lack of coverage (e.g., non-expressed gene). While comparing the two hashtables we produce an output containing the information acquired for each junction (i.e., chromosome location, coordinates, and KNOWN/ NEW/MISSED status).

3.5 Identifying New Transcripts of the Reference Genome

To identify transcripts or fragment of transcripts that are not included in a known annotation of the reference genome, a possible solution is to assemble mapped reads and to compare the resulting transcripts with those from the annotation. To do so, we propose the following protocol using the Cufﬂinks tools:
1. Preparing input data: Cufﬂinks can work directly with the bam ﬁles produced by TopHat2. A GFF ﬁle with the complete list of known transcripts is also required in this protocol.
2. Cufﬂinks assembly: For each condition/medium tested, transcript assembly of mapped reads is obtained by running Cufﬂinks on BAM ﬁles retrieved from TopHat2 output directory. RNA-Seq replicates are pooled together (Cufﬂinks accepts one or more input bam ﬁle(s)). We recommend using the option --mask-ﬁle<transcript.gff>that masks known transcripts from the assembly process (see Note 14). Cufﬂinks produces a GTF ﬁle (named transcripts.gtf) containing transcripts with associated potential isoforms.
3. Filtering transcript isoforms: It is possible to ﬁlter transcript isoforms with low covering support. Different statistics of covering and relative abundance for each proposed isoform are available in the transcripts.gtf ﬁle (see Note 15). For example, it is possible to select a transcript validated by a minimal number of reads (cov parameter). The ﬁltering procedure can be easily implemented with a perl script, based on the use of regular expressions (see Note 16). We named the ﬁltered GTF ﬁle transcripts_ﬁltered.gtf.
4. Merge transcripts from the different conditions/media: If RNASeq experiments include different growth conditions/media, it can be interesting to merge the different transcripts together in order to obtain consensus transcripts reﬂecting the whole experiments. To do so, we run the cuffmerge tool on a list of predicted transcripts GTF ﬁles (in a simple text ﬁle, one ﬁle path per line). A relative abundance ﬁlter threshold can be setup, optionally, for example, --min-isoform-fraction 0.25 (meaning that only isoforms whose relative proportion is over 25 % are kept). Comments about this step are available in Note 17.

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

49

5. BLAST search on potential new transcripts: This is an optional step. In order to facilitate the analysis of the obtained transcripts, BLAST search can be performed, for example with BLASTX on RefSeq database (protein sequences from NCBI Reference Sequence project; www.ncbi.nlm.nih.gov/refseq/) or on another selection of protein sequences. The resulting list of transcripts allows the identiﬁcation of different kind of elements and structures:
– Transcripts distant from known features: new transcribed features (coding DNA sequence (CDS), non-coding RNA, miscellaneous RNA).
– Transcripts joined to known features: 5′ and 3′ untranslated regions (UTR). See Note 18 for comments.

3.6 Identifying 3′UTR

The aim of the following protocol is to identify the polyadenylation sites of transcripts, and hence to ﬁnd their 3′UTR. This procedure relies on TopHat2, cufﬂinks, and a couple of perl scripts:
1. Filtering reads ending with a poly-A monomer (see Note 19): This can be done with a perl script and one regular expression. Poly-A tails are removed from the reads, which are then retained and saved in a separated fastq ﬁle.
2. Mapping the selected reads: Using the same procedure given in Subheading 3.3, the selected reads are mapped to the reference genome with TopHat2.
3. Mapped read assembly: the mapped reads from step 2 (accepted_hits.bam) are then assembled with cufﬂinks (see step 2 from the Subheading 3.5, without the masking option).
4. Identifying poly-A sites: Fragments of transcripts generated in the previous step 3 are analyzed to determine if a poly-A exists in the genome just upstream or downstream from the mapped transcript (depending on the strand):
– If a poly-A is found, the fragment is not a poly-A site.
– If not, the fragment is a poly-A site. Then, the coordinates of the mRNA/ncRNA/misc_RNA can be extended.

3.7 Identifying Features Absent from the Reference Genome

It is noteworthy that the reference genome used to map RNA-Seq reads can be incomplete (e.g., gapped scaffolds, missing subtelomeric regions). RNA-Seq data offer an invaluable opportunity to ﬁll this gap as it can help to identify transcripts that are missing from the reference sequences. We deﬁne the following protocol using the de novo assembler Trinity:
1. Preparing input data: Trinity assembler needs a fastq ﬁle of the unmapped read. These reads are retrieved from the output directory of TopHat2 (see Subheading 3.3), from the ﬁle unmapped.bam. The latter is converted into fastq format with the bundle function from the TopHat2 tool suite, bam2fastx.

50 Hugo Devillers et al.

2. De novo assembly of transcripts: The obtained reads are assembled with Trinity, using the Perl wrapper Trinity.pl provided by the Trinity tool suite (see Note 20). Assembled transcripts and the associated isoforms are written in the fasta ﬁle trinity.fasta.
3. Preparing trinity outputs for ﬁltering: Transcripts from trinity. fasta are indexed in order to recomputed covering and abundance statistics. We recommend to use the following command line: bowtie2-build trinity.fasta trinity.fasta.TRANS (see Note 21).
4. Computing statistics: For each transcript, covering and abundance statistics are computed with the RSEM tool. We use the provided Perl wrapper run_RSEM_align_n_estimate.pl. It requires the fasta ﬁle of transcripts and the fastq ﬁle(s) of the RNA-Seq reads. This tool must be run in the same directory as for the previous step. Statistics are written in the output directory, in the text ﬁle RSEM.isoforms.results.
5. Filtering isoforms: We use the Perl wrapper script ﬁlter_fasta_ by_rsem_value.pl from the Trinity tool suite to ﬁlter transcript isoforms according to the statistics computed in the previous step. Three cutoffs can be set:
--tmp-cutoff: Transcripts per million.
--fpkm-cutoff: Fragment per kilobase per million.
--isopct-cutoff: relative abundance of isoforms (in %).
From a trial and error procedure, we selected the two following cutoffs: --tmp-cutoff 10 and --isopct-cutoff 30.
6. BLAST search against reference genome: The aim of this step is to identify transcripts that do not match on the reference genome (see Note 22). Thus, a BLASTN against the reference genomic sequences or a BLASTX against the reference proteome is performed with the selected transcripts from the previous steps as queries. Only “no hit” queries are kept as potential new transcripts.
7. BLAST search against external references: This is an optional step. To go further, the identiﬁed transcripts can be “blasted” against different resources, such as other yeast proteomes or a more general protein database (e.g., RefSeq or nr non-redundant database ftp://ftp.ncbi.nih.gov/blast/db/nr), in order to determine if these transcripts correspond to protein-coding sequences (see Note 23).
The above procedure allows the identiﬁcation of unknown CDS and/or untranslated transcripts but also to reveal potential biological contaminations (see Note 24).

3.8 Manual Validation

All the protocols described above lead to identify features or regions that can be amended in the reference genome. However, this last step cannot be done without human expertise. Ultimately, all the potential amendments identiﬁed by the previous protocols must be

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

51

Fig. 2 Illustration of annotation amendments retrieved from the Artemis genome browser on a genomic region of the chromosome B of Yarrowia lipolytica: (a) RNA-Seq read global coverage; (b) “stack” representation of read mapping, light fragments are matching reads, dark rectangles are introns deduced from exon–exon junction prediction; (c) Initial (predicted) annotation. Light rectangles depict CDS and dark rectangles predicted introns; (d) corrected annotation. In this example, the investigation of RNA-Seq reveals that the two genes YALI0B03212g and YALI0B03234g are in fact parts of a unique gene. A new intron is identiﬁed and the 3′ end of the gene is on another frame. Inspection of read coverage shows potential intron retention for the second intron (i2)

3.9 Editing Reference Sequences

manually validated. To do so, we use a genome browser, Artemis, able to handle all the different outputs obtained from the different procedures (i.e., bam, gtf, gff, embl, fasta), as well as to easily edit the reference annotation. See Fig. 2 for illustration.
RNA-Seq can reveal sequencing errors in the reference genome. Indeed, during the mapping procedure (Subheading 3.3), a certain number of mismatches can be highlighted between reads and the reference genome. Substitutions and/or insertions/deletions (indels) supported by a high number of reads for a given position strongly suggest that this position is wrong in the reference

52 Hugo Devillers et al.
sequence (see Note 25). To identify these positions, it is possible to use the Samtools suite. The following command lines allow the identiﬁcation of the most supported sequence variations:
samtools faidx<ref.fasta> samtools mpileup -uf<ref.fasta><list-of-bam-ﬁles>| bcftools view -bvcg ->var.raw.bcf bcftools view var.raw.bcf>var.raw.vcf vcfutils.pl varFilter -d 50>var.ﬂt.vcf
Where <ref.fasta> is the fasta ﬁle of the reference chromosomes and <list-of-bam-ﬁles> a space separated list of bam ﬁles containing the mapped reads from TopHat2. The most supported variations are then given in the text ﬁle var.ﬂt.vcf (see Note 26).

4 Notes

1. Three RNA-Seq datasets were used to illustrate the different processes exposed in this paper. The ﬁrst one is from Yarrowia lipolytica CLIB122 on six different conditions/media: oleic acid, alkane, YPD (yeast extract, peptone, and glucose, 10 g/L each) at 28 °C, YPD at 18 °C, YPD at pH 4, YPD and H2O2. Sequencing was performed with Solexa Illumina HiSeq 2000, in paired-end 100 bp (clusters of 300 bp) with two replicates per condition/medium. The second dataset is also from Yarrowia lipolytica CLIB122, on YPD at 28 °C without replicate. Sequencing technology was Solexa Illumina with HiSeq 2000 sequencing system. Strand-speciﬁc single reads of 50 bp were obtained. The last dataset is also from Solexa Illumina HiSeq 2000 sequencing, 50 bp single reads, non-stranded, one experiment on YNB medium (yeast nitrogen base, 17 g/L, NH4Cl 5.3 g/L, NaK buffer 50 mM, no yeast extract) supplemented with 1 % glucose, without replicate.
2. In addition to the sequencing technology employed, different “parameters” can vary in the design of RNA-Seq experiments, such as the read length, the library depth (coverage), the number of replicates, the use of single or paired reads, stranded or non-stranded, the number of media/condition tested, and so on. Making appropriate choices is crucial and directly depends on the aim of the study. Thus, it is well admitted that for differential gene expression analysis, the number of replicates is a critical parameter and must be as high as possible to ensure the statistical evaluation of gene expression. Alternatively, if RNASeq data are used to amend gene structural annotations, the two most important parameters are the depth of libraries, to catch genes with low expression level and alternative transcripts,

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

53

and the number of media/conditions, as some genes can be expressed only under speciﬁc conditions.
3. To amend a reference genome with RNA-Seq, it is highly recommended to use the same strain for RNA-Seq experiments. Using a different strain may produce many single nucleotide polymorphisms (SNP) when mapping on genome and therefore many read losses.
4. As mentioned in Subheading 2.5, UNIX systems are highly recommended for the different procedures described in this paper. However, all the mentioned tools can be more or less easily installed on Windows systems, generally requiring compilation from the source code. A traditional desktop conﬁguration can be enough to do the job. However, most of the tools discussed in this chapter propose optional multi-threading optimization reducing signiﬁcantly computational time. As a consequence, multi-core servers or cluster of computers present a great advantage.
5. Quality evaluation of reads is often provided by the sequencing platform, which highly facilitates the parameter setting of trimming algorithms (e.g., quality thresholds, region to crop, minimal length to keep reads). In addition, fastQC shows eventual read contaminations (e.g., overrepresented sequences) such as sequencing adaptors or rRNA fragments.
6. The match score used in the module ILLUMINACLIP is based on the number of matches between the read and the adaptor sequences coupled with the quality of read sequencing provided in the fastq ﬁles. The palindromeClipThreshold parameter is used when treating paired-end reads (as an adaptor can be found in the both strands), the simpleClipThreshold is used for single reads.
7. The parameter values, presented in the Trimmomatic pipeline, were calibrated on the ﬁrst dataset (see Note 1). Obviously, depending on the dataset to trim, some adjustments can be required.
8. It is well admitted that mapping tools are generally not inﬂuenced by quality issues and adaptor contamination as they compare reads to a reference genome. However, if the quality of sequencing is particularly low or if the cover (number of reads) is low too, the use a speciﬁc trimming tool such as Trimmomatic provides better results.
9. One of the great advantages of TopHat2 is to consider known transcripts to facilitate intron detection and avoid spurious transcript isoforms supported by too few reads. This is optional but highly recommended.

54 Hugo Devillers et al.
10. The proposed options and parameter settings were calibrated with different RNA-Seq datasets including those presented in Subheading 2.1.
11. A fourth output ﬁle from TopHat2 should be checked before going further, it is the align_summary.txt ﬁle. It contains basic statistics about the number of mapped reads and unmapped reads. This allows to identify potential issues during the mapping step. Thus, for example, it is admitted that if less than 80 % of reads map the genome (for Illumina sequencing) there is probably a problem on the reads or on the parameter setting.
12. A complete description of the BED format can be found on the University of California Santa Cruz Genome Browser website (http://genome.ucsc.edu/FAQ/FAQformat.html#format1).
13. When working with oriented reads, one can use the strand information (i.e., ﬁfth ﬁeld of the BED table) to determine the orientation of the junction alignment. Knowing this information, one can then identify the junction coordinates calculated in Subheading 3.3 as 5′ or 3′ splice sites.
14. Masking known transcripts during the cufﬂinks assembly is not necessary but this allows focusing only on the detection of unknown transcripts and hence, is highly recommended.
15. Three statistics can be used for ﬁltering transcripts: the read covering, the reads per kilobase per million (RPKM) and the fragments per kilobase per million (FPKM). It is not necessary to set threshold on the three parameters at the same time, but ﬁltering allows reducing signiﬁcantly the number of spurious transcript isoforms. Last, it is noteworthy that there are no optimal values for ﬁltering these transcripts. Too stringent ﬁltering will produce smaller and fewer transcripts while too permissive ﬁltering will lead to many inconsistent fragments. The best is to try different settings and mix the results.
16. Here are some examples of regular expressions (in Perl) that can be used to retrieve the different statistical values from the transcripts.gtf ﬁle produced by cufﬂinks:
– To get the covering value: /cov \"([\d\.]+)\"/
– To get the FPKM value: /FPKM \"([\d\.]+)\"/
17. Merging is recommended but not mandatory. It allows reducing the number of transcripts by joining the different fragments that overlap between the different experiments. Most of the time, larger and more consistent transcripts are obtained after merging. Note that the cuffquant tool allows the recomputation of the relative read coverage of each merged transcript according to the different conditions/media.

Enhancing Structural Annotation of Yeast Genomes with RNA-Seq Data

55

18. Part of the obtained transcripts can be unusable. Indeed, especially for non-stranded reads, overlapping features (5′ and 3′ UTR) or small intergenic regions will lead to large predicted transcripts without clear feature junctions.
19. The protocol described in Subheading 3.6 is for stranded reads. For non-stranded reads, it is necessary to consider polyT monomers at the same time.
20. Trinity de novo assembly can be rather time-consuming and hence should be run using multi-threading options, (--CPU X) as well as the memory allocation limit (--JM XG), whenever possible.
21. We recommend using the sufﬁx pattern “.TRAN” as it is used by default in the next step.
22. Without BLAST ﬁltering, most of the identiﬁed transcripts are in fact chimerical transcripts due to repeat regions or palindromic sequences, and hence, must be deleted. Note that the e-value threshold of the BLAST search can change the number of “no hit” transcripts. We recommend the use of a stringent threshold (low value) to eliminate spurious transcripts.
23. This procedure provides only transcripts and not gene structures. For instance, exon–exon junctions of intron-containing genes will not be predicted.
24. The transcripts that do not match to the reference genome may have two possible origins: either they come from a noncontigated part of the genome or from contaminations during RNA-Seq production. To differentiate between these two origins, further investigations have to be done taking into account non-assembled reads from the reference genome assembly.
25. Reference genome sequences may contain wrong bases or indels. This can come from the sequencing or the assembly. For example, it is well admitted that 454 sequencing often fails for sequencing homopolymers, inducing indels and hence frameshifts in coding sequences.
26. Sequence variations or SNP (for single nucleotide polymorphism) between reads and the reference genome have different origins:
– RNA-Seq sequencing error: In that case, the SNP frequency is expected to be low.
– Error on reference sequence: In that case, the SNP frequency should be high.
– Repeated regions present in several conserved genes: In that case, the SNP frequency should have an average range of values and several other SNP are expected on the same feature.

56 Hugo Devillers et al.

References

1. Eilbeck K, Moore B, Holt C et al (2009) Quantitative measures for the management and comparison of annotated genomes. BMC Bioinformatics 10:67
2. Guida A, Lindstädt C, Maguire SL et al (2011) Using RNA-seq to determine the transcriptional landscape and the hypoxic response of the pathogenic yeast Candida parapsilosis. BMC Genomics 12:628
3. Dujon B, Sherman D, Fischer G et al (2004) Genome evolution in yeasts. Nature 430: 35–44
4. Morin N, Calcas X, Devillers H et al (2014) Draft genome sequence of Rhodosporidium toruloides CECT1137, an oleaginous yeast of biotechnological interest. Genome Announc 2:e00641–14
5. Andrews S. FastQC: a quality control tool for high throughput sequence data http://www. bioinformatics.babraham.ac.uk/projects/ fastqc/. Accessed 6 Feb 2015
6. Bolger AM, Lohse M, Usadel B (2014) Trimmomatic: a ﬂexible trimmer for Illumina sequence data. Bioinformatics 30:2114–2120
7. Langmead B, Salzberg SL (2012) Fast gappedread alignment with Bowtie 2. Nat Methods 9:357–359
8. Kim D, Pertea G, Trapnell C et al (2013) TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions. Genome Biol 14:R36

9. Trapnell C, Roberts A, Goff L et al (2012) Differential gene and transcript expression analysis of RNA-seq experiments with TopHat and Cufﬂinks. Nat Protoc 7:562–578
10. Grabherr MG, Haas BJ, Yassour M et al (2011) Full-length transcriptome assembly from RNA-Seq data without a reference genome. Nat Biotechnol 29:644–652
11. Li B, Dewey CN (2011) RSEM: accurate transcript quantiﬁcation from RNA-Seq data with or without a reference genome. BMC Bioinformatics 12:323
12. Li H, Handsaker B, Wysoker A et al (2009) The sequence alignment/map format and SAMtools. Bioinformatics 25:2078–2079
13. Camacho C, Coulouris G, Avagyan V et al (2009) BLAST+: architecture and applications. BMC Bioinformatics 10:421
14. Rutherford K, Parkhill J, Crook J et al (2000) Artemis: sequence visualization and annotation. Bioinformatics 16:944–945
15. Stajich JE, Block D, Boulez K et al (2002) The Bioperl Toolkit: Perl modules for the life sciences. Genome Res 12:1611–1618
16. Core Team R (2013) R: a language and environment for statistical computing. R Foundation for Statistical Computing, Vienna
17. Engström PG, Steijger T, Sipos B et al (2013) Systematic evaluation of spliced alignment programs for RNA-seq data. Nat Methods 10:1185–1191

Chapter 3

Pathogen Gene Expression Proﬁling During Infection Using a Nanostring nCounter Platform
Wenjie Xu, Norma V. Solis, Scott G. Filler, and Aaron P. Mitchell

Abstract
NanoString nCounter is a recently developed platform that can make direct multiplexed measurement of gene expression using color-coded probe pairs (Geiss et al., Nat Biotechnol 26(3):317–325, 2008; Malkov et al., BMC Res Notes 2:80, 2009). We have found that this platform is uniquely suitable for quantiﬁcation of pathogen gene expression during infection, where pathogen RNA comprises a tiny portion of total RNA isolated from the infected tissue. Here, we describe a protocol that we have successfully applied to a number of pathogens across multiple infection models, including both invasive and mucosal infection by Candida albicans, and lung infection by Aspergillus fumigatus and Cryptococcus neoformans.
Key words Pathogen, Infection, RNA isolation, Gene expression, In vivo proﬁling, NanoString

1 Introduction

What genes does a pathogen express during infection to cope with the host environment? Which regulatory pathways are responsible for the onset and retreat of such responses? These are among the most important questions in microbial pathogenesis. However, for most mammalian pathogens, gene expression proﬁling studies have been limited by the technical difﬁculty to accurately quantify pathogen gene transcripts from infected tissues, even in light of new genome-wide technologies [1–3]. Host RNA constitutes an overwhelming portion (usually >99 %) of the total RNA isolated from infected tissue samples. This poses a challenge for most expression proﬁling technologies: it contributes to high background on microarrays, and it dominates sequence reads from RNA-Seq. Pathogen cell isolation from infected tissue, in theory, can help to enrich for pathogen RNA, but it poses additional problems: it requires large quantities of infected tissue; the procedure can be tedious; and most importantly, it is difﬁcult to conserve the native state or integrity of RNA during the lengthy process. Here we describe an in vivo gene expression proﬁling protocol that is

Frédéric Devaux (ed.), Yeast Functional Genomics: Methods and Protocols, Methods in Molecular Biology, vol. 1361, DOI 10.1007/978-1-4939-3079-1_3, © Springer Science+Business Media New York 2016
57

58 Wenjie Xu et al.
fast, extremely sensitive and highly reproducible (see Note 1). We developed this protocol during our investigation of the fungal pathogen Candidaalbicans in a murine model of hematogenously disseminated candidiasis. Using this protocol, we have documented time courses of dynamically regulated C. albicans gene expression during kidney infection, and discovered unexpected features of the gene expression response to antifungal drug treatment in vivo [4]. We have successfully applied this protocol to a number of other tissue types, pathogens, and infection models [5–7].

2 Materials
2.1 RNA Isolation from Infected Tissue
2.2 NanoString Proﬁling

1. GentelMACS dissociator and M-type homogenization tube (Miltenyi Biotec).
2. Minibeadbeater. 3. Tabletop centrifuge. 4. Zirconia beads. 5. Phenol–chloroform–isoamyl alcohol 25:24:1. 6. RNeasy kit, including buffers RLT, RW, and RPE, and RNeasy
spin columns. 7. BioPhotometer.
1. NanoString nCounter system (nanoString). 2. NanoString nCounter master kit (nanoString). 3. NanoString custom-built codeset: The investigator selects the
high priority genes and nanoString will design the probes and synthesize the codeset reaction mix. For in vivo proﬁling studies, it is important to remind the nanoString codeset design team to avoid probe sequences that could cross-hybridize to host genes. 4. Thermal cycler. 5. MultiExperiment Viewer 4 software [8].

3 Methods
3.1 RNA Isolation from Infected Tissue (Using Mouse Kidney as an Example)

1. Male Balb/c mice weighting 20–22 g were used for all studies. Three mice per experimental group were inoculated intravenously with 1 × 106 yeast-phase C albicans cells. The animals were sacriﬁced and kidneys were harvested at speciﬁc time points post-infection. The right kidney was snap frozen in liquid nitrogen and stored at −80 °C in a screw cap tube for later RNA extraction (see Note 2).

Pathogen Gene Expression Proﬁling During Infection Using a Nanostring nCounter…

59

2. Prepare the following reagents before removing kidneys from the −80 °C freezer: add 2-mercaptoethanol (1% V/V) to buffer RLT; label M-tubes and chill on ice; label 2 ml screw cap tubes, and add approximately 300 μl Zirconia beads.
3. Remove kidneys from −80 °C freezer and put on ice. Add 1.2 ml of buffer RLT with 2-mercaptoethanol to each kidney (see Note 3). Decant kidney with buffer into an M-tube.
4. Homogenize the kidney in M-tube using gentelMACS dissociator on pre-loaded setting RNA_02.01.
5. Centrifuge the M-tube at 1000 × g for 1 min in a tabletop centrifuge at room temp.
6. Transfer 600 μl of homogenate from M-tube to the screw cap tube containing Zirconia beads. Save the remaining homogenate on ice.
7. Add 600 μl phenol–chloroform–isoamyl alcohol 25:24:1 to the tubes from the previous step.
8. Close the lids tightly and vortex on mini-beadbeater for 3 min in a 4 °C cold room.
9. Centrifuge the tubes at 15,000 × g for 5 min in a 4 °C cold room.
10. Carefully transfer the aqueous phase to a new 1.5 ml microfuge tube, mix well with equal volume of 70 % ethanol, then load onto the RNeasy spin column.
11. Wash the spin column once with 700 μl buffer RW, followed by twice with 500 μl buffer RPE. Centrifuge 1 extra minute in a dry collection tube to remove remaining liquid in the spin column.
12. Elute RNA with 50 μl of H2O, and measure the RNA concentration using a BioPhotometer (see Note 4).

3.2 NanoString Proﬁling (12 Reactions)

1. Thaw the nanoString reporter codeset (green cap tube) and capture codeset (gray cap tube) on ice.
2. Add 130 μl hybridization buffer to the reporter codeset (green), invert to mix and spin down.
3. Add 20 μl of the mix to each of the 12 reaction tubes.
4. Add 10 μg of total tissue RNA (in a volume of 5 μl) to each tube (see Note 5). Mix by pipetting.
5. Add 5 μl capture codeset to each tube. Mix by pipetting.
6. Incubate the reaction at 65 °C in a thermal cycler overnight (12–18 h).
7. Take out one sealed sample cartridge (−20 °C) and two prep plates (4 °C). Let them warm to room temperature.
8. Centrifuge the prep plates at 670 × g for 2 min in a tabletop centrifuge.

60 Wenjie Xu et al.
9. Set up the nanoString prep station following on-screen instructions.
10. Remove the reactions from the thermal cycler and immediately load on the prep station. Select to run the high sensitivity program (3 h).
11. When the prep station program is complete, remove the cartridge, seal the lanes with a clear tape (provided by nanoString), apply mineral oil to the bottom of the cartridge (for generation one nCounter only, later generations do not require this step), then load the cartridge onto the nanoString digital analyzer.
12. Set up the nanoString digital analyzer following on-screen instructions.
13. Select the high resolution (600 ﬁelds) option, run the scanning program (~4.5 h).
14. Upon receiving the results (by email), import raw data into nSolver software (provided by nanoString). The software will automatically check data quality and raise ﬂags if the quality of the data falls out of the normal range. Perform technical adjustment using the built-in function (optional, follow instructions in the software), then export the data as an excel ﬁle (see Note 6).
15. Normalize the data using one of the following methods (see Note 7): total counts from all genes in the codeset; one or a few internal control genes; geometric mean of highly expressed genes.
16. Calculate the mean expression values for each gene (if the experiment was done in replicates or triplicates), then calculate the ratio of expression levels among different experimental groups (see Note 8).
17. Visualize the datasets in heap maps by a clustering program such as MultiExperiment Viewer [8].

4 Notes

1. This protocol requires total processing time of less than 48 h, from tissue to expression proﬁling data. The hands-on time is around 4 h for 12 samples. While it is feasible to perform RNA extraction for 12 samples at the same time, we recommend doing six samples at a time to ensure quality. On the other side, we recommend to run a full nanoString cartridge (12 samples) at a time when possible, both to save material costs and to improve consistency of data.
2. We ﬁrst tried using RNAlater (Life Technologies) to preserve tissue samples before RNA isolation. We found RNAlater

Pathogen Gene Expression Proﬁling During Infection Using a Nanostring nCounter…

61

solution adds viscosity to tissue homogenate and adversely affects quality and quantity of RNA recovery. We then tried snap-freezing tissues in liquid nitrogen followed by storage at −80°C before RNA isolation. We were able to consistently recover RNA with high quality and high yield from snap-frozen tissues.
3. One key variable in this protocol is the amount of buffer RLT added to the tissue at the very ﬁrst step. Too much buffer will dilute the homogenate and lead to lower RNA concentration, while too little buffer may lead to formation of viscous gels after the phenol–chloroform extraction step and leave no aqueous phase for RNA recovery. We have empirically determined the optimal volume of buffer to use for the following tissues (assuming typical sizes): one mouse kidney (1.2 ml), one mouse tongue (1.0 ml), one mouse lung (2.0 ml).
4. To improve the recovery of RNA, add the ﬁrst round eluate back to the column, and elute again. We can routinely recover approximately 100 μg of total tissue RNA from one RNeasy spin column (~2 μg/μl × 50 μl). If larger amount of RNA is needed, a second prep can be made from the remaining tissue homogenate. Do not dispose of the remaining homogenate until RNA concentration has been measured, just in case.
5. Depending on the infection model, the inoculum size and the pathogen strain, the percentage of pathogen RNA in total tissue RNA varies from 0 to 2 %, and typically falls within the 0.05–0.5 % range. For example, 10 μg of total tissue RNA from C. albicans infected kidney could generate nanoString raw counts equal to that of 10 ng of pure C. albicans RNA from an in vitro culture (10 ng/10 μg = 0.1 %).
6. One main challenge for pathogen gene expression proﬁling in vivo is to get enough reads from pathogen RNA. Given the low percentage of pathogen transcripts in total RNA, we have to use large amount of total RNA. The nanoString platform has a unique advantage in this perspective: it is so speciﬁc in recognizing the target RNA that the overwhelming amount of host RNA does not cause a signiﬁcant level of noise. As shown in Fig. 1 (adapted from ref. [7]), raw counts from uninfected tissue sample were all below 10, while raw counts from infected tissue samples ranged between <10 and >105. Only four out of 135 genes fell below the noise levels.
7. Because the percentage of pathogen RNA in total tissue RNA varies in a wide range, we do not really know the quantity of pathogen RNA in a given amount of total RNA that we use for hybridization with nanoString probes. Therefore, normalization using pathogen genes is a critical step before the expression proﬁles can be compared among different

62 Wenjie Xu et al.
Fig. 1 Raw nanoString counts for 135 C. albicans environmental response genes. NanoString probe counts for infected (red and blue data points) and uninfected (yellow) mouse tongue samples are presented as scatter plots for the 2 days postinfection time point. Adapted from ref. [7]
samples. There are three commonly used methods for normalization. (1) Use total counts from all genes in the codeset. (2) Use one or a few “housekeeping” genes. (3) Use the geometric mean (Nth root of the product of N numbers) of highly expressed genes. Each method has its pros and cons. For a large codeset (>100 genes) containing “randomly” selected probes (such as all genes in the genome that encode a protein with a DNA-binding domain), using total counts for normalization can be a good choice, because the total counts of a large number of unrelated genes may faithfully reﬂect the amount of RNA input. For a small codeset (<100 genes) containing probes focused on a speciﬁc process (such as hyphal growth, given that hyphal growth genes tend to be co-regulated), choosing one or a few housekeeping genes as control for normalization is essential. TDH3, a robustly expressed metabolic gene, has served well as control for many of our experiments. The third method is a hybrid of method 1 and 2, with an emphasis for equal contribution from highly

Pathogen Gene Expression Proﬁling During Infection Using a Nanostring nCounter…

63

Table 1 Three methods to calculate normalization factors

Methods

OPC sample 1 OPC sample 2 OPC sample 3 Sample 1–3 average

Total counts for all genes

196,429

Normalization factor based 1.39 on total counts (method 1)

Counts for TDH3

10,813

Normalization factor based on TDH3 (method 2)

1.20

Geometric mean for 20 most 5602 highly expressed genes

Normalization factor based on 1.43 geometric mean (method 3)

469,794 0.58
21,362 0.61
14292
0.56

152,306 1.79
6677 1.94
4172
1.92

272,843 12,951 8022

expressed genes. In Table 1, we use oropharyngeal candidiasis (OPC) experiment data from Fanning et al. [7] to demonstrate how the normalization factors are calculated and to what extent these different normalization methods could affect the outcome of expression proﬁling. In Table 1, row 2, total counts for all genes for sample 1–3 are 196,429, 469,794 and 152,306, and the average for the three samples is 272,843. Divide the average total counts by sample 1 total counts, we get the normalization factor for sample 1 as 273,943/196,429 = 1.39. Following the same calculations we can generate normalization factors for each sample by all three methods. In the case shown in Table 1, normalization factors based on the three methods are within 15 % difference from each other, hence unlikely to have a signiﬁcant inﬂuence on the interpretation of the proﬁling data.
8. Expression data generated using this protocol are highly reproducible (Fig. 1, comparing red and blue dots; and Fig. 2, comparing among biological triplicates in a heat map). The nanoString platform is extremely sensitive and has a dynamic range encompassing the biological expression levels. We were able to quantify transcripts level for >95 % of genes in our codeset in the OPC model (Figs. 1 and 2), and were able to discern dynamic gene expression changes in a time course study of kidney infection [4].

64 Wenjie Xu et al.

Fig. 2 Expression of C. albicans environmentally responsive genes during OPC. Expression levels for 135 C. albicans genes at 2 days postinfection in the mouse OPC model are presented in a heat map format. Expression levels were normalized to the mean value of the wild type. Color saturation represents the extent of the expression change, with full saturation at fourfold upregulation or downregulation. Adapted from ref. [7]

Acknowledgement

This work was supported in part by NIH grants R21 DE023311 (A.P.M.), R56 AI111836 (A.P.M. and S.G.F.), R01 AI054928 (S.G.F.), and R01 DE017088 (S.G.F.).

References

1. Geiss GK, Bumgarner RE, Birditt B, Dahl T, Dowidar N, Dunaway DL, Fell HP, Ferree S, George RD, Grogan T, James JJ, Maysuria M, Mitton JD, Oliveri P, Osborn JL, Peng T, Ratcliffe AL, Webster PJ, Davidson EH, Hood L, Dimitrov K (2008) Direct multiplexed measurement of gene expression with

color-coded probe pairs. Nat Biotechnol 26(3):317–325
2. Malkov VA, Serikawa KA, Balantac N, Watters J, Geiss G, Mashadi-Hossein A, Fare T (2009) Multiplexed measurements of gene signatures in different analytes using the Nanostring nCounter Assay System. BMC Res Notes 2:80

Pathogen Gene Expression Proﬁling During Infection Using a Nanostring nCounter…

65

3. Westermann AJ, Gorski SA, Vogel J (2012) Dual RNA-seq of pathogen and host. Nat Rev Microbiol 10(9):618–630
4. Xu W, Solis NV, Ehrlich RL, Woolford CA, Filler SG, Mitchell AP (2015) Activation and alliance of regulatory pathways in C. albicans during mammalian infection. PLoS Biol 13(2), e1002076
5. O’Meara TR, Xu W, Selvig KM, O'Meara MJ, Mitchell AP, Alspaugh JA (2013) The Cryptococcus neoformans Rim101 transcription factor directly regulates genes required for adaptation to the host. Mol Cell Biol 34(4):673–684
6. Cheng S, Clancy CJ, Xu W, Schneider F, Hao B, Mitchell AP, Nguyen MH (2013) Proﬁling of

Candida albicans gene expression during intraabdominal candidiasis identiﬁes biologic processes involved in pathogenesis. J Infect Dis 208(9):1529–1537
7. Fanning S, Xu W, Solis N, Woolford CA, Filler SG, Mitchell AP (2012) Divergent targets of Candida albicans bioﬁlm regulator Bcr1 in vitro and in vivo. Eukaryot Cell 11(7):896–904
8. Saeed AI, Sharov V, White J, Li J, Liang W, Bhagabati N, Braisted J, Klapa M, Currier T, Thiagarajan M, Sturn A, Snufﬁn M, Rezantsev A, Popov D, Ryltsov A, Kostukovich E, Borisovsky I, Liu Z, Vinsavich A, Trush V, Quackenbush J (2003) TM4: a free, opensource system for microarray data management and analysis. Biotechniques 34(2):374–378

Chapter 4

Comparative Transcriptomics in Yeasts
Dawn A. Thompson

Abstract
Comparative functional genomics approaches have already shed an important light on the evolution of gene expression that underlies phenotypic diversity. However, comparison across many species in a phylogeny presents several major challenges. Here, we describe our experimental framework for comparative transcriptomics in a complex phylogeny.
Key words Evolution, Gene regulation, Comparative expression proﬁling

1 Introduction

Divergence in gene regulation can play a major role in evolution. Among eukaryotes, the Ascomycota fungi provide an excellent model to study the evolution of gene regulation [1–11]. They include the model organisms Saccharomyces cerevisiae, Schizosaccharomyces pombe, and Candidaalbicans, as well as many non-model, genetically tractable species with sequenced genomes. Their physiology is also well understood, but it is also surprisingly diverse: for example, different species of yeast colonize different ecological niches, utilize a range of different carbon sources, and differ in their preference for oxidative phosphorylation vs. a more fermentative lifestyle. Species in the phylogeny diverged before and after a whole genome duplication event [12, 13] (WGD), allowing us to study the consequences of this evolutionary mechanism [12–14].
Despite these advantages, collecting experimental data across species and implementation of appropriate analytical approaches is a complex problem. An important challenge is to collect experimental data in such a way that would minimize irrelevant differences, for example, due to growth conditions, and allow focusing on true evolutionary distinctions (Fig. 1). To address these challenges we developed an experimental and computational framework to understand the evolution of modular gene

Frédéric Devaux (ed.), Yeast Functional Genomics: Methods and Protocols, Methods in Molecular Biology, vol. 1361, DOI 10.1007/978-1-4939-3079-1_4, © Springer Science+Business Media New York 2016
67

68 Dawn A. Thompson
16.00
0.50
0.02 0

log2(OD600)

S. pombe 2.5
2.0
glucose 1.5
ethanol 1.0

0.5

500 Time (minutes)1000

0.0 1500

Log Late log Diauxic shift Post shift Plateau

Lag

g/L g/L

log2(OD600)
lo ( D)

16.00 0.50 0.02 0

C. glabrata 2.5
2.0

1.5 glucose
1.0 ethanol

0.5

500 Time (minutes)1000

0.0 1500

Lag Log Late Log Diauxic shift Post shift Plateau

Fig. 1 Choosing “physiologically comparable” time points. Our experiments compare “physiologically analogous” time points across all species. For example, shown is the growth curve (x axis: time, minutes; y axis: growth rate, in log2(OD600) and glucose levels (g/L, blue) and ethanol levels (g/L, orange) for the relative slow growing species S. pombe (top) vs. the growth curve for the faster growing C. glabrata (bottom). Biological samples from each species were taken at the time points indicated by arrows
regulation [15]. The experimental framework presented here includes: growth conditions, methods for phenotypic proﬁling needed for physiologically comparable sampling, collection and ﬁxation of cells and RNA isolation. Expression proﬁling is conducted using standard protocols for either custom Agilent

Comparative Transcriptomics in Yeasts

69

microarrays [15] or strand-speciﬁc RNA seq [16]. To analyze the evolution of regulatory modules (groups of co-expressed genes), we use a new algorithm, Arboretum [17], to identify expression modules within and across species and to reconstruct their evolutionary history. Our framework for comparative functional genomics is applicable to any complex phylogeny, and can reveal principles of regulatory evolution in many responses and species.

2 Materials
2.1 Growth Media
2.2 Phenotypic Analysis
2.3 Sample Collection

1. BMW (Rich medium): 1.5 % yeast extract, 1 % peptone, 2 % dextrose, 2 g/L SC amino acid mix, 100 mg/L adenine, 100 mg/L tryptophan, 100 mg/L uracil. When fully dissolved, ﬁlter-sterilize using a 1liter ﬁltration unit (0.22 μm) designed for cell culture medium (see Notes 1–4).
2. Minimal medium: 3000 mg/L potassium phosphate, monobasic, 6.75 mg/L calcium chloride, dihydrate, 244 mg/L magnesium sulfate, anhydrous, 22.5 mg/L EDTA, disodium, 0.08 mg/L D-biotin, 1.5 mg/L calcium pantothenate, 37.5 mg/L inositol, 1.5 mg/L nicotinic acid, 0.3 mg/L 4-aminobenzoic acid (PABA), 1.5 mg/L pyridoxine hydrochloride, 1.5 mg/L thiamine hydrochloride, 1.5 mg/L boric acid, 0.45 mg/L copper (II) sulfate pentahydrate, 0.15 mg/L potassium iodide, 0.95 mg/L manganese chloride, anhydrous, 0.51 mg/L disodium molybdate, anhydrous, 4.21 mg/L Zinc sulfate, monohydrate, 4.5 mg/L iron sulfate (II) heptahydrate, 0.25 mg/L cobalt (II) chloride, anhydrous, 6.7 g/L yeast nitrogen base w/o amino acids, 6.16 g/L EMM—dextrose, 20 g/L dextrose. When fully dissolved, ﬁlter-sterilize using a 1-L ﬁltration unit (0.22 μm) designed for cell culture medium (see Notes 1–4).
1. Spectrophotometer.
2. Multi-mode plate reader with temperature control and orbital shaking.
3. New Brunswick Scientiﬁc Edison model TC-7 roller drum.
4. New Brunswick Scientiﬁc Edison water bath model C76 shaker.
5. Nexcelom Cellometer Auto M10.
6. YSI Biochemistry Analyzer Model 2700.
1. Either methanol (100 %) or ethanol (95 %).
2. Liquid nitrogen.
3. Dry ice.
4. 2 mL tubes with O-ring cap.

70 Dawn A. Thompson

5. Wire rack to hold 50 mL conical tubes. 6. rectangular ice tray large enough to hold wire racks. 7. 50 mL conical tubes (see Note 5). 8. RNAlater (Life Technologies). 9. DNase/RNase-free distilled water.

2.4 RNA Isolation

1. Zirconia beads. 2. 2ml tubes with O-ring cap. 3. Bead beater (Biospec). 4. RNeasy plus mini kits (Qiagen). 5. DNase/RNase-free distilled water. 6. RNA 6000 Nano ll kit (Agilent). 7. Bioanalyzer 2100 instrument (Agilent).

3 Methods
3.1 Phenotypic Proﬁling 3.1.1 Media and Experimental Parameter Screening
3.1.2 High-Resolution Growth Curve Data Are Collected for Each Species

1. For each strain, cells are plated onto BMW plates from frozen glycerol stocks.
2. After 2 days, cells are taken from plates, resuspended into liquid BMW, and counted using the Cellometer Auto M10.
3. Next, an appropriate volume of this culture is used to inoculate a 3 mL BMW (or other appropriate medium) culture at 1 × 106 cells/mL.
4. The resulting 3 mL culture is placed in a New Brunswick Scientiﬁc Edison model TC-7 roller drum on the fastest rotation until saturated (1–2 days).
5. The cells were then counted and diluted back to 1 × 106 cells/ mL. One hundred and ﬁfty microliters of culture was placed in a 96-well plate and growth curves were generated using the Synergy H1 plate reader (Biotek) in the desired conditions to be tested. The instrument was set to continuous low shaking and OD600 was measured every 15 min. Growth curves were measured in two biological replicates (see Note 6).
1. For each strain, cells are plated onto BMW plates from frozen glycerol stocks. After 2 days, cells are taken from plates and resuspended into liquid BMW (or other medium of choice), and counted using a Cellometer Auto M10 (Nexcelom).
2. A 3 mL BMW culture was inoculated at 1 × 106 cells/mL and placed in a New Brunswick Scientiﬁc Edison model TC-7 roller drum on the highest speed until saturated (1–2 days) at the optimal growth temperature for particular species.

Comparative Transcriptomics in Yeasts

71

3. The saturated cultures are counted as described above and then used to inoculate 300 mL BMW (or other medium of choice) at 1 × 106 cells/mL.
4. Flasks are then transferred to New Brunswick Scientiﬁc Edison water bath model C76 shakers set to 200 rpm. The OD600 was measured every 15–60 min using a Thermo Spectronic Genesys 20 spectrophotometer, and 1 mL media samples were taken to measure extracellular glucose and ethanol levels on a YSI Biochemistry Analyzer Model 2700 according to manufacturer’s instructions (see Note 7).

3.2 Physiologically Comparable Sampling

1. The data from the high resolution phenotypic proﬁling is plotted for each species (Fig. 1) and physiologically comparable time points (e.g., log phase) for sampling are determined by visual inspection of the data for each species (see Note 8).

3.2.1 Finalizing Sample Collection

1. Once the initial selection of appropriate experimental parameters and determination of sampling time points is conducted based on the methodology described above, a pilot expression study should be performed (using the methods described below) for validation. This involves higher resolution sampling in one biological replicate for each species to either conﬁrm transcriptional response of growth stage (e.g., log phase), timing of an environmental response, and/or appropriate experimental parameter for a robust response (see Note 9).

3.3 Growth Curve Alignments

Since sampling time points are selected in real time during the experiment (based on the previous growth curve data and data collected concurrently), after the data was collected it is important to conﬁrm that the sample time points indeed matched their expected categorization. To this end, two methods are used to align the measured growth curves.
1. In the ﬁrst method, data collected from replicate experiments in each species are manually aligned by overlaying growth curves for each experiment.
2. Samples are then categorized into time point classes (e.g., growth phase) by their position on the growth curve and their correlation in expression proﬁles.
3. In the second method, two transformations are performed to align growth curves. First, in each species sampling times for growth curves of biological replicates are shifted in order to align the exponential growth phase. The doubling time for each replicate should be consistent.
4. Next, a line is ﬁtted to the exponential growth phase using all replicate data in order to get an average growth curve.

72 Dawn A. Thompson

5. This average growth curve for each species is then aligned to a reference species (e.g., S. cerevisiae) growth curve, adjusting for the doubling time (slope) and speed (shift along x-axis) during exponential growth.
6. Finally, the plotted glucose consumption is overlaid on the growth curve and used to manually align a particular growth phase (e.g., log phase) such that it matches that in the reference species. Sampling times are then extracted from the aligned growth curve. Sampling is deemed correct if the two approaches match and are consistent with the original sampling choice based on the phenotypic analysis and pilot expression studies described above.

3.4 Sample Collection and Storage
3.4.1 Methanol/Ethanol

Sample collection volumes should be calculated such that each will have an appropriate number of cells (2–5 × 107) to yield ample amount of total RNA with some cells remaining for permanent storage (see description below).
1. Samples are collected in 50 mL conicals ﬁlled with the appropriate amount of 100 % methanol (or 95 % ethanol) to produce a 60/40 methanol–culture mixture once the sample is added. The methanol-ﬁlled tubes were stored at −80 °C until ready for use (see Note 10).
2. During sample collection tubes are placed in a rack in a dry ice–ethanol bath kept at approximately −40 °C. Once the sample is added to the methanol, the methanol and media are separated from the cells by centrifugation (3700 × g for 5 min at 4 °C and poured off (see Note 10).
3. The conicals containing the cell pellet are ﬂash frozen in liquid nitrogen and then stored at −80 °C until processed for permanent storage.
4. For permanent storage, the cell pellets are thawed on ice and then washed in 5 mL of ice-cold nuclease-free water and spun for 5 min at 3700 × g at 4 °C.
5. The supernatant is discarded and the pellet resuspended in 2 mL of RNAlater (Ambion) and transferred to a 2 mL tube with O-ring cap for storage.
6. The samples should be put at 4 °C for 24 h before being moved to a −80 °C freezer as per manufacturers instructions for RNAlater application to yeast.

3.5 RNA Isolation

1. Samples are removed from −80 °C and thawed on ice.
2. Remove an appropriate volume containing the number of cells needed for total RNA isolated using the RNeasy plus Mini Kit (Qiagen) and transferred to a 2 ml tube with O-ring cap and spun down in a RNase free microfuge at top speed for 5 min at 4 °C.

4 Notes

Comparative Transcriptomics in Yeasts

73

3. Pour off RNAlater solution and remove remaining liquid with a pipet.
4. Resuspend cells in the appropriate volume RLT lysis buffer, provided in the RNeasy kit and prepared according to the Qiagen instructions for mechanical lysis of yeast cells.
5. Add an equal volume of zirconia glass beads.
6. Samples are lysed in a bead beater (Biospec) for 3 min. at top speed.
7. Process samples according to the provided instructions in the RNeasy kit. All steps should be done at room temperature. Including the on column DNase treatment to remove genomic DNA contamination.
8. Samples are then quality control tested for yield and integrity with the RNA 6000 Nano ll kit (Agilent) and analyzed on the Bioanalyzer 2100 instrument (Agilent).
Expression analysis is performed using either species-speciﬁc microarrays (Agilent) according to manufacturer’s instructions [15] or strand-speciﬁc RNA seq with standard protocols [16]

1. Due to lifestyle differences some of the species do not grow well in typical media formulations (e.g., YPD). We therefore ﬁrst optimized our growth medium to minimize growth differences between species. Our formulations, one rich (BMW) and one minimal, boosts the growth of otherwise slow growers, without substantially impacting the growth of fast growers. It is also necessary to test optimal growth temperature of each species. For example, S. cerevisiae grows optimally at 30 °C whereas optimal growth temperature for N. castellii is 25 °C.
2. It is important for the reproducibility of gene expression studies that care is taken in medium preparation such that it is made following the exact same procedure each time (e.g., same volume of water added). It is also critical that the medium be ﬁlter-sterilized and not autoclaved. Therefore it must be fully dissolved prior to ﬁltration. Heat can be used during preparation to aid dissolution but no more than 30 °C.
3. The preparation of the complex minimal medium can be simpliﬁed by ordering a custom formulation from Sunrise Science.
4. It is important for experimental design to understand as much as possible about the lifestyle of each species. For example, Debaromyces Hansenii is a halophilic yeast that requires the growth medium both rich and minimal be made up in ﬁltered sea water purchased from a pet store for salt water aquariums.

74 Dawn A. Thompson
The book “The Yeast a Taxonomic Guide” [18] is an excellent resource.
5. It is important to cover the sample labels on the 50 mL conicals used for sample collection with Scotch brand magic tape to prevent the labels from being dissolved by the methanol or the ethanol in the ethanol–dry ice bath.
6. In addition to the basic growth mediums described above it is essential to conduct high-resolution phenotypic characterization for each experimental condition (e.g., low glucose) or environmental response (e.g., heat shock) in each species to be compared. Experimental parameters can be easily screened using a plate reader (Synergy H1 from Biotek) with temperature control and orbital shaking capabilities. Alternatively, screening can be done in 3 mL tubes grown for in a TC-7 roller drum to quantify the “saturation coefﬁcient.” The saturation coefﬁcient was determined by inoculating a 3 mL culture with 1 × 106 cells/mL of each species and measuring the OD600 using a Thermo Spectronic Genesys 20 spectrophotometer after 24 hours of growth. Once the experimental parameters have been determined by screening, high resolution growth curves (OD600) are performed in the exact same conditions (e.g., ﬂask and media volume) to be used in subsequent proﬁling experiments where samples will be collected. Glucose and ethanol measurements are also taken at this time (Fig. 1).
7. For species difﬁcult to measure by OD600 such as clumpy or ﬁlamentous fungi, glucose concentration is an excellent proxy to determine growth phase.
8. It is important to identify physiologically comparable time points across species. This is critical for distinguishing true inter-speciﬁc variation from temporal shifts due to physiological parameters, e.g., growth rate differences. For example, in a comparative expression study across 15 ascomycota species to compare the response to batch growth on glucose and its depletion [15] the following time points were chosen from visual inspection of the high resolution phenotypic proﬁling (Fig. 1). The Lag phase time point was taken 30 min after inoculation for all species. Log phase was deﬁned as the midpoint of exponential growth. Diauxic Shift is the point at which glucose levels reached 0. Two time points before the diauxic shift, Early Late Log, Late Log, and two time points after, Post Shift, Late Post Shift, were chosen for each species at times proportional to the maximum growth rate in exponential phase in each species. Finally, the Plateau time point was deﬁned as approximately 2 hours after the growth had plateaued.
9. In the Thompson et al. [15] paper, a pilot study was conducted where expression proﬁles were measured for each of the eight

Comparative Transcriptomics in Yeasts

75

time points for one biological replicate for each species. These data were used to ﬁnalize the six time points used in the larger study. Likewise, in a study to compare the transcriptional response to various stress conditions [17, 19] pilot expression studies were conducted to assess the response to various experimental parameters initially chosen based on the growth curve response. These included conﬁrmation of the timing of each stress response across species and the observation that for the human commensal species, C. glabrata and C. albicans, the appropriate heat shock regimen was a shift from 22 to 42 °C as opposed to 37 °C in the other species.
10. Either cold methanol or ethanol can be used during sample collection. Methanol should be used if protein and/or metabolites in addition to RNA will be isolated. The cold alcohol quenching immediately kills the cells and eliminates the contribution to the expression signature of downstream manipulation (e.g., centrifugation). This greatly improves reproducibility of the expression proﬁles.

Acknowledgement
This work was supported by NIH grant 2R01CA119176-01 and a SPARC grant from the Broad Institute.

References

1. Tsong AE, Miller MG, Raisner RM, Johnson AD (2003) Evolution of a combinatorial transcriptional circuit: a case study in yeasts. Cell 115:389
2. Tsong AE, Tuch BB, Li H, Johnson AD (2006) Evolution of alternative transcriptional circuits with identical logic. Nature 443:415
3. Tanay A, Regev A, Shamir R (2005) Conservation and evolvability in regulatory networks: the evolution of ribosomal regulation in yeast. Proc Natl Acad Sci U S A 102:7203
4. Field Y et al (2008) Distinct modes of regulation by chromatin encoded through nucleosome positioning signals. PLoS Comput Biol 4, e1000216
5. Ihmels J et al (2005) Rewiring of the yeast transcriptional network through the evolution of motif usage. Science 309:938
6. Hogues H et al (2008) Transcription factor substitution during the evolution of fungal ribosome regulation. Mol Cell 29:552

7. Tirosh I, Barkai N (2008) Evolution of gene sequence and gene expression are not correlated in yeast. Trends Genet 24:109
8. Tsankov AM, Thompson DA, Socha A, Regev A, Rando OJ (2010) The role of nucleosome positioning in the evolution of gene regulation. PLoS Biol 8, e1000414
9. Tsankov A, Yanagisawa Y, Rhind N, Regev A, Rando OJ (2011) Evolutionary divergence of intrinsic and trans-regulated nucleosome positioning sequences reveals plastic rules for chromatin organization. Genome Res 21(11):1851–1862
10. Baker CR, Tuch BB, Johnson AD (2011) Extensive DNA-binding speciﬁcity divergence of a conserved transcription regulator. Proc Natl Acad Sci U S A 108:7493
11. Habib N, Wapinski I, Margalit H, Regev A, Friedman N (2012) A functional selection model explains evolutionary robustness despite plasticity in regulatory networks. Mol Syst Biol 8:619

76 Dawn A. Thompson

12. Kellis M, Birren BW, Lander ES (2004) Proof and evolutionary analysis of ancient genome duplication in the yeast Saccharomyces cerevisiae. Nature 428:617
13. Wolfe KH, Shields DC (1997) Molecular evidence for an ancient duplication of the entire yeast genome. Nature 387:708
14. Wapinski I, Pfeffer A, Friedman N, Regev A (2007) Natural history and evolutionary principles of gene duplication in fungi. Nature 449:54
15. Thompson DA et al (2013) Evolutionary principles of modular gene regulation in yeasts. ELife 2, e00603

16. Levin JZ et al (2010) Comprehensive comparative analysis of strand-speciﬁc RNA sequencing methods. Nat Methods 7:709
17. Roy S et al (2013) Arboretum: reconstruction and analysis of the evolutionary history of condition-speciﬁc transcriptional modules. Genome Res 23:1039
18. Kurtzman CP (ed) (2000) The yeasts a taxonomic study, 4th edn. Elsevier, New York, NY, p 1055
19. Wapinski I et al (2010) Gene duplication and the evolution of ribosomal protein gene regulation in yeast. Proc Natl Acad Sci U S A 107:5505

Chapter 5

Mapping the Transcriptome-Wide Landscape of RBP Binding Sites Using gPAR-CLIP-seq: Experimental Procedures
Ting Han and John K. Kim

Abstract
An estimated 5–10 % of protein-coding genes in eukaryotic genomes encode RNA-binding proteins (RBPs). Through dynamic changes in RNA recognition, RBPs posttranscriptionally regulate the biogenesis, transport, inheritance, storage, and degradation of RNAs. Understanding such widespread RBP-mediated posttranscriptional regulatory mechanisms requires comprehensive discovery of the in vivo binding sites of RBPs. Here, we describe the experimental procedures of the gPAR-CLIP-seq (global photoactivatableribonucleoside-enhanced cross-linking and precipitation followed by deep sequencing) approach we recently developed for capturing and sequencing regions of the transcriptome bound by RBPs in budding yeast. Unlike the standard PAR-CLIP method, which identiﬁes the bound RNA substrates for a single RBP, the gPAR-CLIP-seq method was developed to isolate and sequence all mRNA sites bound by the cellular “RBPome.” The gPAR-CLIP-seq approach is readily applicable to a variety of organisms and cell lines to proﬁle global RNA–protein interactions underlying posttranscriptional gene regulation. The complete landscape of RBP binding sites provides insights to the function of all RNA cis-regulatory elements in an organism and reveals fundamental mechanisms of posttranscriptional gene regulation.
Key words RNA binding proteins, 4-Thiouracil, UV cross-linking, Posttranscriptional gene regulation

1 Introduction

The transmission of genetic information, from DNA to RNA to protein, is regulated at multiple levels to ensure accuracy, robustness, and adaptability of gene expression programs [1]. According to this central dogma, RNA serves as a critical intermediate. However, RNAs are not naked in a cell but rely on protein partners to dictate their stability, storage, translational efﬁciency, and subcellular residence [2, 3]. Compared to DNA-binding proteins that regulate transcription, little is known about the roles of RNAbinding proteins (RBPs). Out of hundreds of RBPs encoded in a eukaryotic genome, less than 10 % have had their RNA targets identiﬁed, leaving a major gap in our understanding of the role of

Frédéric Devaux (ed.), Yeast Functional Genomics: Methods and Protocols, Methods in Molecular Biology, vol. 1361, DOI 10.1007/978-1-4939-3079-1_5, © Springer Science+Business Media New York 2016
77

78 Ting Han and John K. Kim
RNA–protein interactions governing gene expression programs [4–10]. Furthermore, recent proteomic surveys of proteins crosslinked to mRNAs have expanded the deﬁnition and repertoire of RBPs to include RNA-binding metabolic enzymes, kinases, cytoskeletal proteins, and many other factors with no known RNA binding domains [6–8, 11]. How these newly identiﬁed RBPs regulate gene expression posttranscriptionally is not known.
In order to study the functions of RBPs, several labs have developed methods to map transcriptome-wide binding sites of RBPs in vivo. Robert Darnell’s lab pioneered the cross-linking immunoprecipitation (CLIP) protocol that couples UV crosslinking with immunopuriﬁcation of RBPs [12]. In the CLIP procedure, live cells are irradiated with 254 nm UV to cross-link RBPs and their interacting RNAs. The formation of covalent cross-links allows puriﬁcation of RBP-RNA complexes using speciﬁc antibodies against RBPs. Cross-linked RNA fragments are then isolated and converted to cDNA for sequencing. cDNA mapping to the transcriptome enables the identiﬁcation of binding sites of RBPs in vivo. Recently, Thomas Tuschl’s lab developed a modiﬁed CLIP technique, PAR-CLIP (photoactivatable-ribonucleoside-enhanced CLIP) [13]. The PAR-CLIP procedure starts with the incorporation of photoreactive ribonucleoside analogs into the transcriptome of live cells, followed by 365 nm UV irradiation to cross-link photoreactive nucleoside-labeled RNAs to interacting RBPs. PARCLIP generates frequent and non-random nucleotide substitutions at cross-linking sites to reveal speciﬁc RBP-RNA contact sites with single nucleotide resolution. Since these original studies using mammalian cells, other labs have applied the CLIP and PAR-CLIP procedures to study diverse RBPs in a variety of systems, greatly advancing our understanding of RBP functions [14–16]. However, all of these studies are limited to investigation of individual RBPs.
In order to identify all RBP-bound RNA sequences in a cell and monitor their dynamics under different perturbations, we recently developed the gPAR-CLIP-seq methodology using the budding yeast S. cerevisiae as a model [17]. gPAR-CLIP-seq stems from the PAR-CLIP technique. The major difference between PAR-CLIP and gPAR-CLIP-seq is that PAR-CLIP identiﬁes RNAs bound to a speciﬁc protein while gPAR-CLIP-seq captures RNAs bound to the entire “RBPome.” In gPAR-CLIP-seq, we ﬁrst utilize 4-thiouridine-enhanced UV cross-linking technology to promote covalent bond formation between closely interacting nucleotides and amino acid side chains, essentially “freezing” all RNA–protein interactions in vivo [13, 17]. We then implement three biochemical strategies to capture RNA regions bound by the “RBPome” (Fig. 1): (1) sucrose gradient centrifugation to reduce ribosome abundance; (2) oligo(dT) selection to deplete abundant structural non-coding RNAs (e.g., rRNAs); and (3) chemical biotinylation of proteins via primary amines to enable puriﬁcation of

Binding Site Mapping with gPAR-CLIP-seq

79

non-translating mRNA
translating mRNA
non-coding RNA

AAA...AAA AAA...AAA

Ribosome depletion
3.4

g

Chemical biotinylation
3.5

Oligo(dT) selection
3.5

Streptavidin Binding 3.6

-NH- B -NH- B

Oligo dT TTT...TTTTTT beads
AAAA...AA

-NH- B

Avbiedainds
-NH- B -NHA-ABA...AAA

RNase T1 digestion
3.6

-NH- B -NH- B -NH- B

_ 5’OH

SDS PAGE Transfer 3.9
5’OH

3’ linker ligation
3.8
App

5’OH

3’OH

+

5’OH

RNA isolation
3.10

5’ end phosphorylation
3.11

5’P

5’ linker ligation
3.12
5’OH 3’OH

Fig. 1 Overview of the major steps in the gPAR-CLIP-seq protocol

3’ end dephosphorylation
3.7 5’OH
RT-PCR amplification
3.13

3’P

all RNA–protein complexes. All RNAs puriﬁed from RNA–protein complexes are converted into cDNA libraries for next generation sequencing. Parallel to our effort, Markus Landthaler’s group used oligo(dT) selection followed by ammonium sulfate precipitation to capture protein-bound mRNAs from cultured mammalian cells and generated a transcriptome-wide map of potential cis-regulatory elements in mammalian cells [11].
gPAR-CLIP-seq is a useful method for examining the dynamics of RNA–protein interactions under different physiological and pathological conditions. For example, using gPAR-CLIP-seq, we elucidated over 13,000 RBP binding sites in untranslated regions (UTR) covering 73 % of protein-coding transcripts encoded in the genome. In addition, we found 25 % of RBP binding sites respond to glucose or nitrogen deprivation, with major impacts on metabolic pathways as well as mitochondrial and ribosomal gene expression [17]. In addition to mapping protein-binding sites on messenger RNAs, gPAR-CLIP-seq can also reveal binding sites on non-coding RNAs [18]. For example, by omitting the step of oligo(dT) selection, gPAR-CLIP-seq unveils binding sites on many non-coding RNAs. As most noncoding RNAs require protein cofactors for their function, the visualization of protein-binding sites will enable experimentation to study non-coding RNA structure and function. In this protocol, we describe the detailed experimental procedures of gPAR-CLIP-seq, from 4sU incorporation to preparation of next generation sequencing libraries (Fig. 1). A companion chapter (Chapter 6) describes the bioinformatics pipeline for analyzing gPAR-CLIP-seq data to generate biological insights.

80 Ting Han and John K. Kim

2 Materials
2.1 Yeast Strain and Culture 2.2 Chemicals and Reagents
2.3 Buffers and Enzymes

Perform RNA molecular biology in an RNase-free environment. Always wear gloves and use RNase-free plastic wares and reagents. RNase-free ﬁlter tips are recommended.
1. WT yeast strain BY4742 (MATα his3∆1 leu2∆0 lys2∆0 ura3∆0).
2. Yeast Synthetic Deﬁned (SD) media: dissolve a pouch of SD/Ura Broth powder in 0.5 L of deionized H2O, supplemented with 10 mg of uracil. Autoclave before use.
1. 4-thiouracil (4sU, Sigma-Aldrich). 2. Sucrose (Sigma-Aldrich). 3. 10 mM EZ-Link NHS-SS-Biotin (Pierce) dissolved in dimeth-
ylformamide (see Note 1). 4. Oligo(dT)25 magnetic beads (NEB). 5. Streptavidin M280 Dynabeads (Life Technologies). 6. 1 M DTT (see Note 2). 7. NuPAGE 4–12 % Bis-Tris gel (Life Technologies). 8. Full-range rainbow molecular weight markers (GE Healthcare). 9. Protran BA 85 nitrocellulose membrane (pore size 0.45 μm,
Whatman). 10. Phenol–chloroform–isoamyl alcohol 25:24:1 (Sigma-Aldrich). 11. 3 M NaOAc, pH 5.5. 12. 100 % ethanol. 13. 15 mg/mL GlycoBlue (Life Technologies). 14. 6 % TBE UREA gel (Life Technologies). 15. Low range ssRNA ladder (NEB). 16. 10 bp DNA ladder (Life Technologies). 17. SYBR Gold Stain (Life Technologies). 18. Costar Spin-X centrifuge tube ﬁlters (cellulose acetate mem-
brane, pore size 0.22 μm, non-sterile) (Corning). 19. 10 mM dNTP. 20. 10 % TBE gel (Life Technologies). 21. DNA Clean & Concentrator-5 (Zymo).
1. HBSS (Life Technologies). 2. Polysome lysis buffer: 20 mM HEPES pH 7.5, 140 mM KCl,
1.5 mM MgCl2, 1 % Triton X-100, 1× Complete Mini Protease Inhibitor EDTA-free (Roche), 0.2 U/μL SUPERase·In.

Binding Site Mapping with gPAR-CLIP-seq

81

3. Polysome gradient buffer: 20 mM HEPES pH 7.5, 140 mM KCl, 5 mM MgCl2.
4. Hybridization buffer: 10 mM HEPES pH 7.5, 0.5 M NaCl, 1 mM EDTA.
5. Elution buffer: 10 mM HEPES pH 7.5, 1 mM EDTA.
6. 10× PBS (Life Technologies).
7. RNase T1 (Fermentas).
8. Wash buffer: 1× PBS, 0.1 % SDS, 0.5 % deoxycholate, 0.5 % NP-40.
9. High-salt wash buffer: 5× PBS, 0.1 % SDS, 0.5 % deoxycholate, 0.5 % NP-40.
10. 1× PNK buffer: 50 mM Tris-HCl pH 7.4,10 mM MgCl2, 0.5 % NP-40.
11. CIP mix: 50 mM Tris-HCl pH 7.9, 100 mM NaCl, 10 mM MgCl2, 0.5 U/μL calf intestinal alkaline phosphatase (CIP) (NEB).
12. 1× PNK + EGTA buffer: 50 mM Tris-HCl pH 7.4, 20 mM EGTA, 0.5 % NP-40.
13. 3′ Ligation mix: 50 mM Tris-HCl pH 7.4, 10 mM MgCl2, 0.5 mM DTT, 2 μM Pre-adenylated 3′ DNA linker, 25 % PEG8000, 10 U/μL T4 RNA ligase 2, truncated K227Q (NEB) (see Note 3).
14. 4× NuPAGE LDS sample buffer (Life Technologies).
15. NuPAGE MOPS SDS Running Buffer (20×) (Life Technologies).
16. 4 mg/mL Proteinase K prepared in 1× PK buffer: 100 mM Tris-HCl pH 7.5, 50 mM NaCl, 10 mM EDTA.
17. 7 M urea prepared in 1× PK buffer (see Note 4).
18. PNK mix: 70 mM Tris-HCl pH 7.6, 10 mM MgCl2, 5 mM DTT, 1 mM ATP, 1 U/μL T4 polynucleotide kinase (NEB), 1 U/μL SUPERase·In.
19. 5′ Ligation mix: 50 mM Tris-HCl pH 7.5, 10 mM MgCl2, 10 mM DTT, 1 mM ATP, 0.1 mg/mL BSA, 2 μM 5′ RNA linker, 1 U/μL T4 RNA ligase (Fermentas), 1 U/μL SUPERase·In, 10 % DMSO.
20. 2× formamide gel loading buffer (Life Technologies).
21. 10× TBE (Life Technologies).
22. SuperScript III Reverse transcriptase (Life Technologies).
23. AccuPrimeTaq High Fidelity (Life Technologies).
24. 6× DNA Loading Dye.

82 Ting Han and John K. Kim

2.4 Equipment

1. 30 °C shaker incubators.
2. UVP CL-1000L UV cross-linker (see Note 5).
3. TLS-55 rotor and Optima MAX-E ultracentrifuge (Beckman Coulter); polycarbonate centrifugation tubes (11 × 34 mm) (Beckman Coulter).
4. Thermomixer (Eppendorf Thermomixer Comfort).
5. Magnetic Particle Concentrator (Life Technologies).

2.5 Oligonucleotides for Constructing gPAR-CLIP-seq Libraries 2.5.1 Barcoded 3′ DNA Linker Oligonucleotides
2.5.2 5′ RNA Linker (No Modiﬁcation Required, PAGE Puriﬁed) 2.5.3 Barcoded RT Primers (No Modiﬁcation Required, PAGE Puriﬁed)

All the 3′ DNA linker oligonucleotides were ordered from Integrated DNA technologies with two modiﬁcations: 5′ phosphorylation and 3′ block with inverted deoxythymidine (see Note 6). The ﬁrst six nucleotides (underlined sequences below) of the oligonucleotides represent the barcode sequences.
Perform pre-adenylation of 3′ DNA linker oligonucleotides with 5′ DNA adenylation kit (NEB) by mixing 100 pmol of 5′ phosphorylated DNA oligonucleotide with 100 μM ATP and 100 pmol of Mth RNA ligase in 1× 5′ DNA Adenylation reaction buffer (total volume of 20 μL). Incubate at 65 °C for 1 h followed by heat inactivation at 85 °C for 5 min. To purify adenylated oligonucleotides, mix the adenylation reaction with 80 μL of H2O and 100 μL of phenol–chloroform–isoamyl alcohol 25:24:1. Vortex and spin for 5 min at 20,000 × g. Transfer the liquid phase (90 μL) into a new tube, mix with 10 μL of 3 M NaOAc, 250 μL of 100 % ethanol, and 1 μL of 15 mg/mL GlycoBlue, and precipitate for 2 h at −80 °C. Collect oligonucleotides by centrifugation for 20 min at 20,000 × g at room temperature followed by two washes with cold 75 % ethanol. After brief air-drying, resuspend pellet in 10 μL of H2O. The ﬁnal concentration of adenylated oligonucleotide is around 10 μM.
Index 1: 5′ pATCACGTCGTATGCCGTCTTCTGCTTGidT 3′.
Index 2: 5′ pCGATGTTCGTATGCCGTCTTCTGCTTGidT 3′.
Index 3: 5′ pTTAGGCTCGTATGCCGTCTTCTGCTTGidT 3′.
Index 4: 5′ pTGACCATCGTATGCCGTCTTCTGCTTGidT 3′.
Index 5: 5′ pACAGTGTCGTATGCCGTCTTCTGCTTGidT 3′.
Index 6: 5′ pGCCAATTCGTATGCCGTCTTCTGCTTGidT 3′.
Index 7: 5′ pCAGATCTCGTATGCCGTCTTCTGCTTGidT 3′.
Index 8: 5′ pACTTGATCGTATGCCGTCTTCTGCTTGidT 3′.
5′ GUUCAGAGUUCUACAGUCCGACGAUC 3′.
Index 1: 5′ CAAGCAGAAGACGGCATACGACGTGAT 3′.
Index 2: 5′ CAAGCAGAAGACGGCATACGAACATCG 3′.
Index 3: 5′ CAAGCAGAAGACGGCATACGAGCCTAA 3′.

Binding Site Mapping with gPAR-CLIP-seq

83

a bc

ssRNA ssDNA
150
100 80 80
60 50
40

dsDNA
100 80 60 40
3’ linker

dsDNA 100 80 60 40

library

Fig. 2 Representative gel images for size-selection and quality assessment of libraries. (a) Size selection of 70–90 nt single-stranded RNA from a 10 % TBE UREA gel (related to Subheading 5′ RNA Linker Ligation and RNA Size Selection). (b) Size selection of 96–112 bp double-stranded DNA after the ﬁrst round of PCR from a 10 % TBE gel (related to Subheading Preparation of Sequencing Libraries). (c) Final library displayed on a 10 % TBE gel (related to Subheading Preparation of Sequencing Libraries)

2.5.4 PCR Primers (No Modiﬁcation Required, PAGE Puriﬁed)

Index 4: 5′ CAAGCAGAAGACGGCATACGATGGTCA 3′. Index 5: 5′ CAAGCAGAAGACGGCATACGACACTGT 3′. Index 6: 5′ CAAGCAGAAGACGGCATACGAATTGGC 3′. Index 7: 5′ CAAGCAGAAGACGGCATACGAGATCTG 3′. Index 8: 5′ CAAGCAGAAGACGGCATACGATCAAGT 3′.
P7 primer: 5′ CAAGCAGAAGACGGCATACGA 3′.
P5 long primer: 5′ AATGATACGGCGACCACCGACAGGTTCAGAGTTCTAC
AGTCCGA 3′. Illumina primer A: 5′ AATGATACGGCGACCACCGA 3′. Illumina primer B: 5′ CAAGCAGAAGACGGCATACGA 3′.

3 Methods
3.1 Yeast Growth and 4sU Incorporation

1. Inoculate a 3 mL starter culture with a fresh colony of WT strain BY4742 (see Note 7). Grow at 30 °C with vigorous shaking (250 rpm) in synthetic deﬁned (SD) media overnight.
2. Supplement 50 mL of SD media with 200 μM 4sU (see Note 8). Inoculate with 0.1 mL of starter culture. Grow at 30 °C with vigorous shaking (250 rpm) to OD600 = 0.7–0.8 (see Note 9).

84 Ting Han and John K. Kim

3.2 UV Cross-Linking

1. Pellet 50 mL of mid-log phase cultures for 5 min at 3000 × g at room temperature, resuspend in 2 mL of HBSS, and transfer to a 60 mm cell culture dish.
2. Place the culture dish on ice, and irradiate with 365 nm UV at 150 mJ/cm2 four times using a UVP CL-1000 L UV cross-linker.
3. Pellet the cells for 2 min at 5000 × g at 4 °C. Remove HBSS and quickly freeze the cells in liquid nitrogen (see Note 10).

3.3 Extract Preparation

1. Resuspend cross-linked cells in polysome lysis buffer (1 mL/g of pellets), mix with ½ volume of acid-washed glass beads, and lyse cells by vortexing four times at 4 °C, 1 min each with 1 min incubation on ice in between.
2. Remove cell debris by centrifugation for 5 min at 1300 × g at 4 °C. Transfer supernatant to a new tube chilled on ice.
3. Spin at 20,000 × g for 10 min at 4 °C. Transfer supernatant to a new tube chilled on ice.

3.4 Ribosome Depletion Using Sucrose Density Gradients

1. Prepare 50, 41.25, 32.5, 23.75, and 15 % sucrose (w/v) dissolved in polysome gradient buffer. Prepare 15–50 % (w/v) sucrose density gradients in Beckman polycarbonate centrifugation tubes (11 × 34 mm) by sequentially layering and freezing 0.24 mL of 50, 41.25, 32.5, 23.75, and 15 % sucrose solutions. Before use, thaw gradients overnight at 4 °C.
2. Carefully load 100 μL of clariﬁed yeast extract on top of a sucrose gradient, centrifuge for 1 h at 200,000 g at 4 °C using a TLS-55 rotor in an Optima MAX-E ultracentrifuge (Beckman Coulter).
3. Recover the top 600 μL of the gradient and supplement with 2 μL of SUPERase·In (20 U/μL) (see Note 11).

3.5 Chemical Biotinylation and polyA Selection

1. Add 60 μL of freshly prepared 10 mM EZ-Link NHS-SSBiotin (dissolved in dimethylformamide) to the recovered 600 μL of ribosome-depleted lysate and incubate on a rotating wheel for 2 h at 4 °C.
2. Add 50 μL of 5 M NaCl to the lysate to increase the total salt concentration to 0.5 M. Mix the lysate with 1 mg of oligo(dT)25 magnetic beads, then incubated on a rotating wheel for 30 min at 4 °C.
3. Pellet beads with Magnetic Particle Concentrator (MPC). Wash the beads four times with ice-cold hybridization buffer.
4. Elute the RNAs by incubating beads with 500 μL of elution buffer and heating at 65 °C for 3 min. Transfer the eluted sample to a new tube and mix with 55 μL of 10× PBS.

3.6 Streptavidin Binding and RNase T1 Digestion
3.7 On-Bead CIP Treatment
3.8 On-Bead 3′ DNA Linker Ligation
3.9 SDS-PAGE and Transfer to Nitrocellulose Membrane
3.10 RNA Isolation and Puriﬁcation

Binding Site Mapping with gPAR-CLIP-seq

85

1. Mix polyA-selected samples with 1 mg of streptavidin M280 Dynabeads and incubate on a rotating wheel for 30 min at 4 °C.
2. Pellet beads with MPC. Wash the beads three times with 1× PBS, then incubate with 20 μL of 50 U/μL RNase T1 at 22 °C for 15 min on an Eppendorf Thermomixer (15 s shaking at 1000 rpm followed by a 2 min rest interval), followed by 5 min incubation on ice.
3. Pellet beads with MPC. Wash beads twice with wash buffer, twice with high-salt wash buffer, and twice with 1× PNK buffer.

1. Incubate beads with 20 μL of CIP mix at 37 °C for 15 min, with 15 s shaking at 1000 rpm followed by a 2 min rest interval on a Thermomixer.
2. Pellet beads with MPC. Wash beads twice with 1× PNK + EGTA buffer and twice with 1× PNK buffer.

1. Incubate beads with 20 μL of 3′ ligation mix at 16 °C overnight (≥16 h), with 15 s shaking at 1000 rpm followed by a 2 min interval on a Thermomixer (see Note 12).
2. Pellet beads with MPC. Wash beads three times with 1× PNK + EGTA buffer.

1. Mix beads with 12 μL of 1× PNK + EGTA buffer, 3 μL of freshly made 1 M DTT and 15 μL of 4× NuPAGE LDS sample buffer, and incubate at 70 °C for 10 min in a Thermomixer (Eppendorf).
2. Pellet beads with MPC. Load the supernatant onto NuPAGE 4–12 % Bis-Tris gel and run at 150 V for 35 min using 1× MOPS SDS running buffer (see Note 13). Run 5 μL of fullrange rainbow markers as size standards.
3. Transfer proteins from the gel to Protran BA 85 nitrocellulose membrane using Novex wet transfer at 30 V for 1 h.
4. Use a clean razor blade to excise a broad band from 31 kDa up to the top of the gel, cut into small pieces, and transfer into a microfuge tube.

1. Incubate excised membranes with 500 μL of 4 mg/mL Proteinase K prepared in 1× PK buffer for 20 min at 37 °C on a Thermomixer.
2. Add 500 μL of 7 M urea prepared in 1× PK buffer to the tube followed by another 20 min incubation at 37 °C in a Thermomixer.
3. Mix the Proteinase K digestion reaction with 1 mL of phenol– chloroform–isoamyl alcohol 25:24:1 by vortexing and spin for 5 min at 20,000 × g.

86 Ting Han and John K. Kim

4. Transfer the liquid phase into a new tube, mix with 125 μL of 3 M NaOAc, 2.5 mL of 100 % ethanol and 1 μL of 15 mg/mL GlycoBlue, and precipitate for 2 h at −80 °C. Collect RNAs by centrifugation for 20 min at 20,000 × g at room temperature followed by two washes with cold 75 % ethanol.

3.11 RNA 5′ End Phosphorylation

1. Air-dry RNA pellets brieﬂy, resuspend in 10 μL of PNK mix and incubate at 37 °C for 30 min in a Thermomixer.
2. Add 90 μL of H2O and 100 μL of phenol–chloroform–isoamyl alcohol 25:24:1 to the reaction, mix well and spin for 5 min at 20,000 × g.
3. Mix the liquid phase with 12.5 μL of 3 M NaOAc, 250 μL of 100 % ethanol, 1 μL of 15 mg/mL GlycoBlue and precipitate for 2 h at −80 °C. Collect RNAs by centrifugation for 20 min at 20,000 × g at room temperature, followed by two washes with cold 75 % ethanol.

3.12 5′ RNA Linker Ligation and RNA Size Selection
3.13 Reverse Transcription and Test PCR Ampliﬁcation

1. Resuspend RNA pellets in 10 μL of ligation mix and incubate at 15 °C for 2 h in a Thermomixer.
2. Terminate ligation reaction by adding 10 μL of 2× formamide gel loading buffer, heat for 2 min at 70 °C and then quickly chill on ice.
3. Load samples onto a 6 % TBE UREA gel together with 500 ng of low range ssRNA ladder and 250 ng of 10 bp DNA ladder (prepared in 1× formamide gel loading buffer, heated for 2 min at 70 °C and then quickly chilled on ice). Run the gel at 150 V for 45 min.
4. Stain the gel with 1× SYBR Gold Stain (diluted in 1× TBE). Visualize stain under a UV lamp. Excise a gel piece corresponding to 70–90 nt RNA (80–100 nt ssDNA) (Fig. 2a).
5. Crush and soak gels in 400 μL of 0.3 M NaOAc overnight at room temperature (see Note 14).
6. Remove gel pieces by passing through Costar Spin-X centrifuge tube ﬁlters. Mix the solution with 1 mL of 100 % EtOH and 1 μL of 15 mg/mL GlycoBlue and precipitate for 2 h at −80 °C.
7. Collect RNA by centrifugation for 20 min at 20,000 × g at room temperature, followed by two washes with cold 75 % ethanol. After brief drying, dissolve RNA in 15 μL of H2O.
1. In a PCR tube, mix 10 μL of the ligated RNA with 2 μL of 5 μM RT primer, heat at 65 °C for 5 min, and then quickly chill on ice.
2. Per reaction, add 8 μL of reverse transcriptase mix (1 μL of 10 mM dNTP, 1 μL of 0.1 M DTT, 4 μL of 5× ﬁrst strand buffer,

3.14 Preparation of Sequencing Libraries

Binding Site Mapping with gPAR-CLIP-seq

87

1 μL of SUPERase·In (20 U/μL), and 1 μL of SuperScript III reverse transcriptase). Incubate the reactions in a thermocycler at 50 °C for 45 min, 55 °C for 15 min and 90 °C for 5 min.
3. Perform a test PCR with 2.5 μL of reverse transcription product in 50 μL PCR mix (1× AccuPrime PCR buffer I, 0.5 μM P5 long primer, 0.5 μM P7 primer, 0.2 μL AccuPrimeTaq High Fidelity). Use the cycling program with an initial 3 min denaturation at 98 °C, followed by 14–22 cycles of 80 s denaturation at 98 °C, 90 s annealing and extension at 65 °C, and termination with a ﬁnal 5 min extension at 65 °C. Collect 15 μL PCR product after 14, 18, and 22 cycles, add 3 μL of 6× DNA loading dye, and analyze on a 10 % TBE gel at 150 V for 1 h to determine the optimal ampliﬁcation cycles (the lowest cycle number required to generate 96–116 bp amplicons detected by SYBR Gold staining).

1. Perform a 50 μL PCR reaction with the determined cycle number using the condition listed in Subheading Reverse Transcription and Test PCR ampliﬁcation.
2. Purify amplicons using Zymo DNA Clean & Concentrator-5. Elute amplicons in 6 μL of H2O, add 1 μL of 6× DNA loading dye, run on 10 % TBE gels at 150 V for 1 h, and stain with SYBR Gold. Load 250 ng of 10 bp DNA ladder (prepared in 1× DNA loading dye) as size markers. Excise a gel piece corresponding to 96–116 bp DNA (Fig. 2b).
3. Crush and soak gel pieces overnight in 400 μL 0.3 M NaOAc at room temperature.
4. Remove gel pieces by passing through Spin-X ﬁlters. Mix the solution with 1 mL of 100 % EtOH and 1 μL of 15 mg/mL GlycoBlue and precipitate for 2 h at −80 °C.
5. Collect DNAs by centrifugation for 20 min at 20,000 × g at room temperature, followed by two washes with cold 75 % ethanol. After brief drying, resuspend amplicons in 20 μL of H2O.
6. Use 5 μL of puriﬁed amplicons to seed a second round of PCR in 50 μL: 1× AccuPrime PCR buffer I, 0.5 μM Illumina Primer A, 0.5 μM Illumina Primer B, 0.2 μL AccuPrimeTaq High Fidelity for 6–12 cycles (see Note 15) using the same cycling conditions as in Subheading Reverse Transcription and Test PCR Ampliﬁcation.
7. Purify second PCR amplicons with Zymo DNA Clean & Concentrator-5. Elute in 25 μL of H2O. Mix 5 μL of PCR amplicons with 1 μL of 6× DNA loading dye, and run a 10 % TBE gel to check library quality. A single band centered on 100 bp should be seen (Fig. 2c). Sequence the libraries on an Illumina HiSeq 2000 sequencer (see Notes 16 and 17).

88 Ting Han and John K. Kim

4 Notes

1. Store EZ-Link NHS-SS-Biotin at −20 °C with desiccant, and equilibrate to room temperature before opening. Make fresh solution with dimethylformamide (DMF) before use. Discard unused solution.
2. Reconstitute DTT in H2O before use. Discard unused solution.
3. T4 RNA ligase 2, truncated K227Q ligates preadenylated DNA oligonucleotides to the 3′ ends of cross-linked RNA fragments in an ATP-independent buffer [19]. 25 % PEG8000 is included to enhance ligation efﬁciency.
4. Make fresh 7 M urea solution before use. Discard unused solution.
5. For efﬁcient cross-linking of 4sU labeled RNAs to proteins, a 365 nm UV light source is needed.
6. Oligonucleotides can be ordered from Integrated DNA Technologies with the corresponding modiﬁcations. PAGE puriﬁcation is recommended. Preadenylation and 3′ blocking of 3′ DNA linkers ensures the correct directionality of ligation reactions and prevents self-ligation of the 3′ DNA linkers.
7. Other strains defective in uracil synthesis (ura3∆) can be used. ura3∆ strains readily take up 4sU from the media. Inside the cell, 4sU is converted by Fur1p (uracil phosphoribosyltransferase) to 4-thiouridine monophosphate that can be incorporated during RNA synthesis [20].
8. 4sU incorporation rates can be estimated using spectrophotometry. Dissolve RNA samples isolated from cells grown in the presence or absence of 4sU in 100 μL of 12 mM Tris-HCl buffer, pH 7. Adjust the A260 absorption to the same value. Measure A330 for both samples using a Q6 quartz cuvette with 1 mm light path in a Thermo Scientiﬁc BioMate 3 UVVis spectrophotometer. 4sU incorporation rates per kilobase of RNA can be calculated as 500 × [(A330(+4sU)) − (A330(−4sU ))]/A260. Using 200 μM 4sU, the incorporation rate was roughly four 4sU per kilobase of transcript.
9. To perform gPAR-CLIP-seq under starvation conditions, after OD600 reaches 0.7–0.8, pellet cells for 5 min at 3000 × g at room temperature, discard all media, rinse once with H2O, and resuspend cells in an equal volume of SD without glucose or nitrogen (supplemented with 200 μM 4sU). Return cells to 30 °C with shaking for 2 h.
10. Finish the whole cross-linking procedure within 5 min to minimize exposure to non-physiological conditions (e.g., nutrientfree media, ice incubation, and UV irradiation).

Binding Site Mapping with gPAR-CLIP-seq

89

11. This protocol only recovers the top part of the sucrose gradient, which is composed of non-translated mRNAs. This step is performed to reduce the representation of ribosome binding sites on both mRNAs and rRNAs. However, we also had success analyzing the lower part of the gradient, which contains translating mRNAs. Because ribosomes occupy 5′ UTR and coding sequences (CDS) of mRNAs during translation, binding sites on 3′ UTRs are likely derived from RNA-binding proteins.
12. 3′ linker ligation is performed under an optimized condition [19, 21].
13. The NUPAGE Bis-Tris gel system operates under a neutral pH, to ensure RNA stability during electrophoresis.
14. Crush the gel slice by forcing it through a small opening. Use a hot syringe needle to make a hole in the bottom of a 0.5 mL tube. Place the gel slice in this tube, then place this tube into a 1.5 mL tube. Spin the assembly at 15,000 g for 2 min to collect crush gel pieces in the lower tube.
15. A test PCR is recommended to determine the optimal ampliﬁcation cycles. Set up a 50 μL PCR reaction, and collect 12 μL of PCR product after 6, 8, 10, and 12 cycles. Run PCR product on a 10 % TBE gel, and pick the cycle number that is in the linear range of ampliﬁcation.
16. The sequencing constructs are:
5′-AATGATACGGCGACCACCGACAGGTTCAGAGTTCT A C A G T C C G A C G AT C - ( N ) 20–40- ( X X X X X X ) TCGTATGCCGTCTTCTGCTTG-3′
(N)20–40 is the 20–40 nt insert. XXXXXX is the 6 nt barcode.
Use 50 nt single-end (50SE) sequencing on the Illumina platform with the sequencing primer: 5′-CGACAGGTTCAGAG TTCTACAGTCCGACGATC-3′.
17. Because of the high-throughput nature of the Illumina platform, typically eight yeast gPAR-CLIP-seq libraries each with a unique barcode sequence can be sequenced in one lane. This typically results in 10–12 million reads obtained per library. Higher sequencing depth is recommended for organisms with larger genomes.

Acknowledgements
This research was supported by National Institute of General Medical Sciences (NIGMS) R01GM088565 and the Pew Charitable Trusts. The authors thank Mallory Freeberg and Danny Yang for helpful comments on the manuscript.

